<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [..\Output\YH-F429.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image ..\Output\YH-F429.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Thu Dec 21 16:57:47 2023
<BR><P>
<H3>Maximum Stack Usage =       3376 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
udp_tl_read_message &rArr; _udp_read_udp_oc_socket &rArr; _eXosip_handle_incoming_message &rArr; _eXosip_process_newrequest &rArr; _eXosip_process_new_invite &rArr; _eXosip_complete_answer_that_establish_a_dialog &rArr; osip_message_set_contact &rArr; osip_contact_parse &rArr; osip_from_parse &rArr; osip_uri_parse &rArr; osip_uri_parse_headers &rArr; __osip_uri_unescape &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[4f]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4f]">ADC_IRQHandler</a><BR>
 <LI><a href="#[386]">netconn_drain</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[386]">netconn_drain</a><BR>
 <LI><a href="#[2d7]">lwip_send</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3ab]">lwip_sendto</a><BR>
 <LI><a href="#[273]">_eXosip_getnameinfo</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[273]">_eXosip_getnameinfo</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[4f]">ADC_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[bd]">AppTaskCreate</a> from main.o(i.AppTaskCreate) referenced from main.o(i.main)
 <LI><a href="#[37]">BusFault_Handler</a> from stm32f4xx_it.o(i.BusFault_Handler) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[51]">CAN1_RX0_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[52]">CAN1_RX1_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[53]">CAN1_SCE_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[50]">CAN1_TX_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[7d]">CAN2_RX0_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[7e]">CAN2_RX1_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[7f]">CAN2_SCE_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[7c]">CAN2_TX_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[8b]">DCMI_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[48]">DMA1_Stream0_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[49]">DMA1_Stream1_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[4a]">DMA1_Stream2_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[4b]">DMA1_Stream3_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[4c]">DMA1_Stream4_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[4d]">DMA1_Stream5_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[4e]">DMA1_Stream6_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[6c]">DMA1_Stream7_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[96]">DMA2D_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[75]">DMA2_Stream0_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[76]">DMA2_Stream1_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[77]">DMA2_Stream2_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[78]">DMA2_Stream3_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[79]">DMA2_Stream4_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[81]">DMA2_Stream5_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[82]">DMA2_Stream6_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[83]">DMA2_Stream7_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[3a]">DebugMon_Handler</a> from stm32f4xx_it.o(i.DebugMon_Handler) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[7a]">ETH_IRQHandler</a> from bsp_eth.o(i.ETH_IRQHandler) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[7b]">ETH_WKUP_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[43]">EXTI0_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[65]">EXTI15_10_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[44]">EXTI1_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[45]">EXTI2_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[46]">EXTI3_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[47]">EXTI4_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[54]">EXTI9_5_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[41]">FLASH_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[6d]">FMC_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[8d]">FPU_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[8c]">HASH_RNG_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[35]">HardFault_Handler</a> from cmb_fault.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[5d]">I2C1_ER_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[5c]">I2C1_EV_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[5f]">I2C2_ER_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[5e]">I2C2_EV_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[86]">I2C3_ER_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[85]">I2C3_EV_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[95]">LTDC_ER_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[94]">LTDC_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[36]">MemManage_Handler</a> from stm32f4xx_it.o(i.MemManage_Handler) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[34]">NMI_Handler</a> from stm32f4xx_it.o(i.NMI_Handler) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[80]">OTG_FS_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[67]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[88]">OTG_HS_EP1_IN_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[87]">OTG_HS_EP1_OUT_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[8a]">OTG_HS_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[89]">OTG_HS_WKUP_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[3e]">PVD_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[3b]">PendSV_Handler</a> from port.o(.emb_text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[42]">RCC_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[66]">RTC_Alarm_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[40]">RTC_WKUP_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[33]">Reset_Handler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[93]">SAI1_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[6e]">SDIO_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[60]">SPI1_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[61]">SPI2_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[70]">SPI3_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[90]">SPI4_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[91]">SPI5_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[92]">SPI6_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[39]">SVC_Handler</a> from port.o(.emb_text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[3c]">SysTick_Handler</a> from stm32f4xx_it.o(i.SysTick_Handler) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[98]">SystemInit</a> from system_stm32f4xx.o(i.SystemInit) referenced from startup_stm32f429xx.o(.text)
 <LI><a href="#[3f]">TAMP_STAMP_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[55]">TIM1_BRK_TIM9_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[58]">TIM1_CC_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[57]">TIM1_TRG_COM_TIM11_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[56]">TIM1_UP_TIM10_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[59]">TIM2_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[5a]">TIM3_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[5b]">TIM4_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[6f]">TIM5_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[73]">TIM6_DAC_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[74]">TIM7_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[68]">TIM8_BRK_TIM12_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[6b]">TIM8_CC_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[6a]">TIM8_TRG_COM_TIM14_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[69]">TIM8_UP_TIM13_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[71]">UART4_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[72]">UART5_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[8e]">UART7_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[8f]">UART8_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[9e]">UART_DMAAbortOnError</a> from stm32f4xx_hal_uart.o(i.UART_DMAAbortOnError) referenced from stm32f4xx_hal_uart.o(i.HAL_UART_IRQHandler)
 <LI><a href="#[62]">USART1_IRQHandler</a> from bsp_debug_usart.o(i.USART1_IRQHandler) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[63]">USART2_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[64]">USART3_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[84]">USART6_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[38]">UsageFault_Handler</a> from stm32f4xx_it.o(i.UsageFault_Handler) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[3d]">WWDG_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[99]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f429xx.o(.text)
 <LI><a href="#[9b]">_sbackspace</a> from _sgetc.o(.text) referenced from __0sscanf.o(.text)
 <LI><a href="#[9c]">_scanf_char_input</a> from scanf_char.o(.text) referenced from scanf_char.o(.text)
 <LI><a href="#[9a]">_sgetc</a> from _sgetc.o(.text) referenced from __0sscanf.o(.text)
 <LI><a href="#[a2]">_snputc</a> from printfa.o(i._snputc) referenced from printfa.o(i.__0snprintf)
 <LI><a href="#[a2]">_snputc</a> from printfa.o(i._snputc) referenced from printfa.o(i.__0vsnprintf)
 <LI><a href="#[a3]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0sprintf)
 <LI><a href="#[a7]">cb_rcv1xx</a> from jcallback.o(i.cb_rcv1xx) referenced from jcallback.o(i._eXosip_set_callbacks)
 <LI><a href="#[a8]">cb_rcv2xx</a> from jcallback.o(i.cb_rcv2xx) referenced from jcallback.o(i._eXosip_set_callbacks)
 <LI><a href="#[a9]">cb_rcv3xx</a> from jcallback.o(i.cb_rcv3xx) referenced from jcallback.o(i._eXosip_set_callbacks)
 <LI><a href="#[aa]">cb_rcv4xx</a> from jcallback.o(i.cb_rcv4xx) referenced from jcallback.o(i._eXosip_set_callbacks)
 <LI><a href="#[ab]">cb_rcv5xx</a> from jcallback.o(i.cb_rcv5xx) referenced from jcallback.o(i._eXosip_set_callbacks)
 <LI><a href="#[ac]">cb_rcv6xx</a> from jcallback.o(i.cb_rcv6xx) referenced from jcallback.o(i._eXosip_set_callbacks)
 <LI><a href="#[ae]">cb_rcvcancel</a> from jcallback.o(i.cb_rcvcancel) referenced from jcallback.o(i._eXosip_set_callbacks)
 <LI><a href="#[af]">cb_rcvregister</a> from jcallback.o(i.cb_rcvregister) referenced from jcallback.o(i._eXosip_set_callbacks)
 <LI><a href="#[b0]">cb_rcvrequest</a> from jcallback.o(i.cb_rcvrequest) referenced from jcallback.o(i._eXosip_set_callbacks)
 <LI><a href="#[ad]">cb_snd123456xx</a> from jcallback.o(i.cb_snd123456xx) referenced from jcallback.o(i._eXosip_set_callbacks)
 <LI><a href="#[a5]">cb_snd_message</a> from jcallback.o(i.cb_snd_message) referenced from jcallback.o(i._eXosip_set_callbacks)
 <LI><a href="#[b1]">cb_transport_error</a> from jcallback.o(i.cb_transport_error) referenced from jcallback.o(i._eXosip_set_callbacks)
 <LI><a href="#[a6]">cb_xixt_kill_transaction</a> from jcallback.o(i.cb_xixt_kill_transaction) referenced from jcallback.o(i._eXosip_set_callbacks)
 <LI><a href="#[ba]">err_tcp</a> from api_msg.o(i.err_tcp) referenced from api_msg.o(i.lwip_netconn_do_close_internal)
 <LI><a href="#[ba]">err_tcp</a> from api_msg.o(i.err_tcp) referenced from api_msg.o(i.setup_tcp)
 <LI><a href="#[b2]">etharp_output</a> from etharp.o(i.etharp_output) referenced from ethernetif.o(i.ethernetif_init)
 <LI><a href="#[f1]">etharp_tmr</a> from etharp.o(i.etharp_tmr) referenced from timeouts.o(.constdata)
 <LI><a href="#[eb]">ethernet_input</a> from ethernet.o(i.ethernet_input) referenced from tcpip.o(i.tcpip_input)
 <LI><a href="#[a0]">ethernetif_init</a> from ethernetif.o(i.ethernetif_init) referenced from sys_arch.o(i.TCPIP_Init)
 <LI><a href="#[b6]">ethernetif_input</a> from ethernetif.o(i.ethernetif_input) referenced from ethernetif.o(i.low_level_init)
 <LI><a href="#[bc]">event_callback</a> from sockets.o(i.event_callback) referenced from sockets.o(i.lwip_socket)
 <LI><a href="#[a1]">fputc</a> from bsp_debug_usart.o(i.fputc) referenced from printfa.o(i.__0printf)
 <LI><a href="#[3]">ict_rcv_1xx</a> from ict_fsm.o(i.ict_rcv_1xx) referenced 4 times from ict_fsm.o(.data)
 <LI><a href="#[4]">ict_rcv_2xx</a> from ict_fsm.o(i.ict_rcv_2xx) referenced 4 times from ict_fsm.o(.data)
 <LI><a href="#[5]">ict_rcv_3456xx</a> from ict_fsm.o(i.ict_rcv_3456xx) referenced 4 times from ict_fsm.o(.data)
 <LI><a href="#[6]">ict_retransmit_ack</a> from ict_fsm.o(i.ict_retransmit_ack) referenced 2 times from ict_fsm.o(.data)
 <LI><a href="#[0]">ict_snd_invite</a> from ict_fsm.o(i.ict_snd_invite) referenced 2 times from ict_fsm.o(.data)
 <LI><a href="#[ec]">ip4_input</a> from ip4.o(i.ip4_input) referenced from tcpip.o(i.tcpip_input)
 <LI><a href="#[f0]">ip_reass_tmr</a> from ip4_frag.o(i.ip_reass_tmr) referenced from timeouts.o(.constdata)
 <LI><a href="#[b5]">ipfrag_free_pbuf_custom</a> from ip4_frag.o(i.ipfrag_free_pbuf_custom) referenced from ip4_frag.o(i.ip4_frag)
 <LI><a href="#[9d]">isspace</a> from isspace_o.o(.text) referenced from scanf_char.o(.text)
 <LI><a href="#[e]">ist_rcv_ack</a> from ist_fsm.o(i.ist_rcv_ack) referenced 4 times from ist_fsm.o(.data)
 <LI><a href="#[8]">ist_rcv_invite</a> from ist_fsm.o(i.ist_rcv_invite) referenced 6 times from ist_fsm.o(.data)
 <LI><a href="#[b]">ist_snd_1xx</a> from ist_fsm.o(i.ist_snd_1xx) referenced 2 times from ist_fsm.o(.data)
 <LI><a href="#[c]">ist_snd_2xx</a> from ist_fsm.o(i.ist_snd_2xx) referenced 2 times from ist_fsm.o(.data)
 <LI><a href="#[d]">ist_snd_3456xx</a> from ist_fsm.o(i.ist_snd_3456xx) referenced 2 times from ist_fsm.o(.data)
 <LI><a href="#[b3]">low_level_output</a> from ethernetif.o(i.low_level_output) referenced from ethernetif.o(i.ethernetif_init)
 <LI><a href="#[b7]">lwip_cyclic_timer</a> from timeouts.o(i.lwip_cyclic_timer) referenced from timeouts.o(i.lwip_cyclic_timer)
 <LI><a href="#[b7]">lwip_cyclic_timer</a> from timeouts.o(i.lwip_cyclic_timer) referenced from timeouts.o(i.sys_timeouts_init)
 <LI><a href="#[be]">lwip_netconn_do_bind</a> from api_msg.o(i.lwip_netconn_do_bind) referenced from api_lib.o(i.netconn_bind)
 <LI><a href="#[bf]">lwip_netconn_do_close</a> from api_msg.o(i.lwip_netconn_do_close) referenced from api_lib.o(i.netconn_close_shutdown)
 <LI><a href="#[c0]">lwip_netconn_do_connect</a> from api_msg.o(i.lwip_netconn_do_connect) referenced from api_lib.o(i.netconn_connect)
 <LI><a href="#[bb]">lwip_netconn_do_connected</a> from api_msg.o(i.lwip_netconn_do_connected) referenced from api_msg.o(i.lwip_netconn_do_connect)
 <LI><a href="#[c4]">lwip_netconn_do_delconn</a> from api_msg.o(i.lwip_netconn_do_delconn) referenced from api_lib.o(i.netconn_prepare_delete)
 <LI><a href="#[c1]">lwip_netconn_do_disconnect</a> from api_msg.o(i.lwip_netconn_do_disconnect) referenced from api_lib.o(i.netconn_disconnect)
 <LI><a href="#[c2]">lwip_netconn_do_getaddr</a> from api_msg.o(i.lwip_netconn_do_getaddr) referenced from api_lib.o(i.netconn_getaddr)
 <LI><a href="#[c3]">lwip_netconn_do_newconn</a> from api_msg.o(i.lwip_netconn_do_newconn) referenced from api_lib.o(i.netconn_new_with_proto_and_callback)
 <LI><a href="#[c6]">lwip_netconn_do_recv</a> from api_msg.o(i.lwip_netconn_do_recv) referenced from api_lib.o(i.netconn_tcp_recvd_msg)
 <LI><a href="#[c5]">lwip_netconn_do_send</a> from api_msg.o(i.lwip_netconn_do_send) referenced from api_lib.o(i.netconn_send)
 <LI><a href="#[c7]">lwip_netconn_do_write</a> from api_msg.o(i.lwip_netconn_do_write) referenced from api_lib.o(i.netconn_write_vectors_partly)
 <LI><a href="#[97]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[c8]">netif_null_output_ip4</a> from netif.o(i.netif_null_output_ip4) referenced from netif.o(i.netif_add)
 <LI><a href="#[13]">nict_rcv_1xx</a> from nict_fsm.o(i.nict_rcv_1xx) referenced 4 times from nict_fsm.o(.data)
 <LI><a href="#[14]">nict_rcv_23456xx</a> from nict_fsm.o(i.nict_rcv_23456xx) referenced 8 times from nict_fsm.o(.data)
 <LI><a href="#[10]">nict_snd_request</a> from nict_fsm.o(i.nict_snd_request) referenced 2 times from nict_fsm.o(.data)
 <LI><a href="#[16]">nist_rcv_request</a> from nist_fsm.o(i.nist_rcv_request) referenced 6 times from nist_fsm.o(.data)
 <LI><a href="#[17]">nist_snd_1xx</a> from nist_fsm.o(i.nist_snd_1xx) referenced 4 times from nist_fsm.o(.data)
 <LI><a href="#[18]">nist_snd_23456xx</a> from nist_fsm.o(i.nist_snd_23456xx) referenced 8 times from nist_fsm.o(.data)
 <LI><a href="#[b4]">osip_authorization_clone</a> from osip_authorization.o(i.osip_authorization_clone) referenced from ict_fsm.o(i.ict_create_ack)
 <LI><a href="#[b4]">osip_authorization_clone</a> from osip_authorization.o(i.osip_authorization_clone) referenced from osip_message.o(i.osip_message_clone)
 <LI><a href="#[a4]">osip_authorization_free</a> from osip_authorization.o(i.osip_authorization_free) referenced from excall_api.o(i._eXosip_call_retry_request)
 <LI><a href="#[a4]">osip_authorization_free</a> from osip_authorization.o(i.osip_authorization_free) referenced from exregister_api.o(i._eXosip_register_build_register)
 <LI><a href="#[a4]">osip_authorization_free</a> from osip_authorization.o(i.osip_authorization_free) referenced from osip_message.o(i.osip_message_free)
 <LI><a href="#[f7]">osip_authorization_to_str</a> from osip_authorization.o(i.osip_authorization_to_str) referenced 2 times from osip_message_to_str.o(.constdata)
 <LI><a href="#[d1]">osip_body_clone</a> from osip_body.o(i.osip_body_clone) referenced from osip_message.o(i.osip_message_clone)
 <LI><a href="#[d5]">osip_body_free</a> from osip_body.o(i.osip_body_free) referenced from osip_message.o(i.osip_message_free)
 <LI><a href="#[f4]">osip_call_id_to_str</a> from osip_call_id.o(i.osip_call_id_to_str) referenced from osip_message_to_str.o(.constdata)
 <LI><a href="#[cd]">osip_call_info_clone</a> from osip_call_info.o(i.osip_call_info_clone) referenced from osip_message.o(i.osip_message_clone)
 <LI><a href="#[d2]">osip_call_info_free</a> from osip_call_info.o(i.osip_call_info_free) referenced from osip_message.o(i.osip_message_free)
 <LI><a href="#[f9]">osip_call_info_to_str</a> from osip_call_info.o(i.osip_call_info_to_str) referenced from osip_message_to_str.o(.constdata)
 <LI><a href="#[f6]">osip_contact_to_str</a> from osip_contact.o(i.osip_contact_to_str) referenced from osip_message_to_str.o(.constdata)
 <LI><a href="#[fb]">osip_content_length_to_str</a> from osip_content_length.o(i.osip_content_length_to_str) referenced from osip_message_to_str.o(.constdata)
 <LI><a href="#[fa]">osip_content_type_to_str</a> from osip_content_type.o(i.osip_content_type_to_str) referenced from osip_message_to_str.o(.constdata)
 <LI><a href="#[f5]">osip_cseq_to_str</a> from osip_cseq.o(i.osip_cseq_to_str) referenced from osip_message_to_str.o(.constdata)
 <LI><a href="#[ce]">osip_from_clone</a> from osip_from.o(i.osip_from_clone) referenced from osip_message.o(i.osip_message_clone)
 <LI><a href="#[cc]">osip_from_free</a> from osip_from.o(i.osip_from_free) referenced from osip_dialog.o(i.osip_dialog_free)
 <LI><a href="#[cc]">osip_from_free</a> from osip_from.o(i.osip_from_free) referenced from osip_dialog.o(i.osip_dialog_update_route_set_as_uac)
 <LI><a href="#[cc]">osip_from_free</a> from osip_from.o(i.osip_from_free) referenced from osip_message.o(i.osip_message_free)
 <LI><a href="#[f3]">osip_from_to_str</a> from osip_from.o(i.osip_from_to_str) referenced 4 times from osip_message_to_str.o(.constdata)
 <LI><a href="#[c9]">osip_header_clone</a> from osip_header.o(i.osip_header_clone) referenced from osip_body.o(i.osip_body_clone)
 <LI><a href="#[c9]">osip_header_clone</a> from osip_header.o(i.osip_header_clone) referenced from osip_message.o(i.osip_message_clone)
 <LI><a href="#[ca]">osip_header_free</a> from osip_header.o(i.osip_header_free) referenced from osip_body.o(i.osip_body_free)
 <LI><a href="#[ca]">osip_header_free</a> from osip_header.o(i.osip_header_free) referenced from osip_message.o(i.osip_message_free)
 <LI><a href="#[1]">osip_ict_timeout_a_event</a> from ict_fsm.o(i.osip_ict_timeout_a_event) referenced 2 times from ict_fsm.o(.data)
 <LI><a href="#[2]">osip_ict_timeout_b_event</a> from ict_fsm.o(i.osip_ict_timeout_b_event) referenced 2 times from ict_fsm.o(.data)
 <LI><a href="#[7]">osip_ict_timeout_d_event</a> from ict_fsm.o(i.osip_ict_timeout_d_event) referenced 2 times from ict_fsm.o(.data)
 <LI><a href="#[9]">osip_ist_timeout_g_event</a> from ist_fsm.o(i.osip_ist_timeout_g_event) referenced 2 times from ist_fsm.o(.data)
 <LI><a href="#[a]">osip_ist_timeout_h_event</a> from ist_fsm.o(i.osip_ist_timeout_h_event) referenced 2 times from ist_fsm.o(.data)
 <LI><a href="#[f]">osip_ist_timeout_i_event</a> from ist_fsm.o(i.osip_ist_timeout_i_event) referenced 2 times from ist_fsm.o(.data)
 <LI><a href="#[d6]">osip_message_set_authorization</a> from osip_authorization.o(i.osip_message_set_authorization) referenced from osip_parser_cfg.o(i.parser_init)
 <LI><a href="#[d8]">osip_message_set_call_id</a> from osip_call_id.o(i.osip_message_set_call_id) referenced from osip_parser_cfg.o(i.parser_init)
 <LI><a href="#[d9]">osip_message_set_contact</a> from osip_contact.o(i.osip_message_set_contact) referenced from osip_parser_cfg.o(i.parser_init)
 <LI><a href="#[da]">osip_message_set_content_length</a> from osip_content_length.o(i.osip_message_set_content_length) referenced from osip_parser_cfg.o(i.parser_init)
 <LI><a href="#[d7]">osip_message_set_content_type</a> from osip_content_type.o(i.osip_message_set_content_type) referenced from osip_parser_cfg.o(i.parser_init)
 <LI><a href="#[db]">osip_message_set_cseq</a> from osip_cseq.o(i.osip_message_set_cseq) referenced from osip_parser_cfg.o(i.parser_init)
 <LI><a href="#[dc]">osip_message_set_from</a> from osip_from.o(i.osip_message_set_from) referenced from osip_parser_cfg.o(i.parser_init)
 <LI><a href="#[dd]">osip_message_set_mime_version</a> from osip_mime_version.o(i.osip_message_set_mime_version) referenced from osip_parser_cfg.o(i.parser_init)
 <LI><a href="#[de]">osip_message_set_proxy_authenticate</a> from osip_proxy_authenticate.o(i.osip_message_set_proxy_authenticate) referenced from osip_parser_cfg.o(i.parser_init)
 <LI><a href="#[df]">osip_message_set_proxy_authorization</a> from osip_proxy_authorization.o(i.osip_message_set_proxy_authorization) referenced from osip_parser_cfg.o(i.parser_init)
 <LI><a href="#[e0]">osip_message_set_record_route</a> from osip_record_route.o(i.osip_message_set_record_route) referenced from osip_parser_cfg.o(i.parser_init)
 <LI><a href="#[e1]">osip_message_set_route</a> from osip_route.o(i.osip_message_set_route) referenced from osip_parser_cfg.o(i.parser_init)
 <LI><a href="#[e2]">osip_message_set_to</a> from osip_to.o(i.osip_message_set_to) referenced 2 times from osip_parser_cfg.o(i.parser_init)
 <LI><a href="#[e3]">osip_message_set_via</a> from osip_via.o(i.osip_message_set_via) referenced from osip_parser_cfg.o(i.parser_init)
 <LI><a href="#[e4]">osip_message_set_www_authenticate</a> from osip_www_authenticate.o(i.osip_message_set_www_authenticate) referenced from osip_parser_cfg.o(i.parser_init)
 <LI><a href="#[12]">osip_nict_timeout_e_event</a> from nict_fsm.o(i.osip_nict_timeout_e_event) referenced 4 times from nict_fsm.o(.data)
 <LI><a href="#[11]">osip_nict_timeout_f_event</a> from nict_fsm.o(i.osip_nict_timeout_f_event) referenced 4 times from nict_fsm.o(.data)
 <LI><a href="#[15]">osip_nict_timeout_k_event</a> from nict_fsm.o(i.osip_nict_timeout_k_event) referenced 2 times from nict_fsm.o(.data)
 <LI><a href="#[19]">osip_nist_timeout_j_event</a> from nist_fsm.o(i.osip_nist_timeout_j_event) referenced 2 times from nist_fsm.o(.data)
 <LI><a href="#[cb]">osip_uri_param_clone</a> from osip_uri.o(i.osip_uri_param_clone) referenced from osip_call_info.o(i.osip_call_info_clone)
 <LI><a href="#[cb]">osip_uri_param_clone</a> from osip_uri.o(i.osip_uri_param_clone) referenced from osip_from.o(i.osip_from_clone)
 <LI><a href="#[cb]">osip_uri_param_clone</a> from osip_uri.o(i.osip_uri_param_clone) referenced from osip_uri.o(i.osip_uri_clone)
 <LI><a href="#[cb]">osip_uri_param_clone</a> from osip_uri.o(i.osip_uri_param_clone) referenced from osip_via.o(i.osip_via_clone)
 <LI><a href="#[d0]">osip_via_clone</a> from osip_via.o(i.osip_via_clone) referenced from osip_message.o(i.osip_message_clone)
 <LI><a href="#[d4]">osip_via_free</a> from osip_via.o(i.osip_via_free) referenced from osip_message.o(i.osip_message_free)
 <LI><a href="#[f2]">osip_via_to_str</a> from osip_via.o(i.osip_via_to_str) referenced from osip_message_to_str.o(.constdata)
 <LI><a href="#[cf]">osip_www_authenticate_clone</a> from osip_www_authenticate.o(i.osip_www_authenticate_clone) referenced from osip_message.o(i.osip_message_clone)
 <LI><a href="#[d3]">osip_www_authenticate_free</a> from osip_www_authenticate.o(i.osip_www_authenticate_free) referenced from osip_message.o(i.osip_message_free)
 <LI><a href="#[f8]">osip_www_authenticate_to_str</a> from osip_www_authenticate.o(i.osip_www_authenticate_to_str) referenced 2 times from osip_message_to_str.o(.constdata)
 <LI><a href="#[b9]">poll_tcp</a> from api_msg.o(i.poll_tcp) referenced from api_msg.o(i.lwip_netconn_do_close_internal)
 <LI><a href="#[b9]">poll_tcp</a> from api_msg.o(i.poll_tcp) referenced from api_msg.o(i.setup_tcp)
 <LI><a href="#[ee]">prvIdleTask</a> from tasks.o(i.prvIdleTask) referenced from tasks.o(i.vTaskStartScheduler)
 <LI><a href="#[e6]">prvTaskExitError</a> from port.o(i.prvTaskExitError) referenced from port.o(i.pxPortInitialiseStack)
 <LI><a href="#[e7]">recv_tcp</a> from api_msg.o(i.recv_tcp) referenced from api_msg.o(i.setup_tcp)
 <LI><a href="#[e5]">recv_udp</a> from api_msg.o(i.recv_udp) referenced from api_msg.o(i.pcb_new)
 <LI><a href="#[b8]">sent_tcp</a> from api_msg.o(i.sent_tcp) referenced from api_msg.o(i.lwip_netconn_do_close_internal)
 <LI><a href="#[b8]">sent_tcp</a> from api_msg.o(i.sent_tcp) referenced from api_msg.o(i.setup_tcp)
 <LI><a href="#[e8]">tcp_recv_null</a> from tcp.o(i.tcp_recv_null) referenced from tcp.o(i.tcp_alloc)
 <LI><a href="#[26]">tcp_tl_check_connection</a> from extl_tcp.o(i.tcp_tl_check_connection) referenced 2 times from extl_tcp.o(.data)
 <LI><a href="#[1b]">tcp_tl_free</a> from extl_tcp.o(i.tcp_tl_free) referenced 2 times from extl_tcp.o(.data)
 <LI><a href="#[23]">tcp_tl_get_masquerade_contact</a> from extl_tcp.o(i.tcp_tl_get_masquerade_contact) referenced 2 times from extl_tcp.o(.data)
 <LI><a href="#[1a]">tcp_tl_init</a> from extl_tcp.o(i.tcp_tl_init) referenced 2 times from extl_tcp.o(.data)
 <LI><a href="#[20]">tcp_tl_keepalive</a> from extl_tcp.o(i.tcp_tl_keepalive) referenced 2 times from extl_tcp.o(.data)
 <LI><a href="#[22]">tcp_tl_masquerade_contact</a> from extl_tcp.o(i.tcp_tl_masquerade_contact) referenced 2 times from extl_tcp.o(.data)
 <LI><a href="#[1c]">tcp_tl_open</a> from extl_tcp.o(i.tcp_tl_open) referenced 2 times from extl_tcp.o(.data)
 <LI><a href="#[1e]">tcp_tl_read_message</a> from extl_tcp.o(i.tcp_tl_read_message) referenced 2 times from extl_tcp.o(.data)
 <LI><a href="#[25]">tcp_tl_reset</a> from extl_tcp.o(i.tcp_tl_reset) referenced 2 times from extl_tcp.o(.data)
 <LI><a href="#[1f]">tcp_tl_send_message</a> from extl_tcp.o(i.tcp_tl_send_message) referenced 2 times from extl_tcp.o(.data)
 <LI><a href="#[1d]">tcp_tl_set_fdset</a> from extl_tcp.o(i.tcp_tl_set_fdset) referenced 2 times from extl_tcp.o(.data)
 <LI><a href="#[21]">tcp_tl_set_socket</a> from extl_tcp.o(i.tcp_tl_set_socket) referenced 2 times from extl_tcp.o(.data)
 <LI><a href="#[24]">tcp_tl_update_contact</a> from extl_tcp.o(i.tcp_tl_update_contact) referenced 2 times from extl_tcp.o(.data)
 <LI><a href="#[ef]">tcp_tmr</a> from tcp.o(i.tcp_tmr) referenced from timeouts.o(.constdata)
 <LI><a href="#[9f]">tcpip_input</a> from tcpip.o(i.tcpip_input) referenced from sys_arch.o(i.TCPIP_Init)
 <LI><a href="#[e9]">tcpip_tcp_timer</a> from timeouts.o(i.tcpip_tcp_timer) referenced from timeouts.o(i.tcp_timer_needed)
 <LI><a href="#[e9]">tcpip_tcp_timer</a> from timeouts.o(i.tcpip_tcp_timer) referenced from timeouts.o(i.tcpip_tcp_timer)
 <LI><a href="#[ea]">tcpip_thread</a> from tcpip.o(i.tcpip_thread) referenced from tcpip.o(i.tcpip_init)
 <LI><a href="#[32]">udp_tl_check_connection</a> from extl_udp.o(i.udp_tl_check_connection) referenced 2 times from extl_udp.o(.data)
 <LI><a href="#[28]">udp_tl_free</a> from extl_udp.o(i.udp_tl_free) referenced 2 times from extl_udp.o(.data)
 <LI><a href="#[30]">udp_tl_get_masquerade_contact</a> from extl_udp.o(i.udp_tl_get_masquerade_contact) referenced 2 times from extl_udp.o(.data)
 <LI><a href="#[27]">udp_tl_init</a> from extl_udp.o(i.udp_tl_init) referenced 2 times from extl_udp.o(.data)
 <LI><a href="#[2d]">udp_tl_keepalive</a> from extl_udp.o(i.udp_tl_keepalive) referenced 2 times from extl_udp.o(.data)
 <LI><a href="#[2f]">udp_tl_masquerade_contact</a> from extl_udp.o(i.udp_tl_masquerade_contact) referenced 2 times from extl_udp.o(.data)
 <LI><a href="#[29]">udp_tl_open</a> from extl_udp.o(i.udp_tl_open) referenced 2 times from extl_udp.o(.data)
 <LI><a href="#[2b]">udp_tl_read_message</a> from extl_udp.o(i.udp_tl_read_message) referenced 2 times from extl_udp.o(.data)
 <LI><a href="#[2c]">udp_tl_send_message</a> from extl_udp.o(i.udp_tl_send_message) referenced 2 times from extl_udp.o(.data)
 <LI><a href="#[2a]">udp_tl_set_fdset</a> from extl_udp.o(i.udp_tl_set_fdset) referenced 2 times from extl_udp.o(.data)
 <LI><a href="#[2e]">udp_tl_set_socket</a> from extl_udp.o(i.udp_tl_set_socket) referenced 2 times from extl_udp.o(.data)
 <LI><a href="#[31]">udp_tl_update_contact</a> from extl_udp.o(i.udp_tl_update_contact) referenced 2 times from extl_udp.o(.data)
 <LI><a href="#[ed]">udpecho_thread</a> from udpecho.o(i.udpecho_thread) referenced from udpecho.o(i.udpecho_init)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[99]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(.text)
</UL>
<P><STRONG><a name="[48d]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[fc]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[11e]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[48e]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[48f]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[490]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[491]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[492]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[39]"></a>SVC_Handler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[488]"></a>__asm___6_port_c_39a90d8d__prvStartFirstTask</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[487]"></a>__asm___6_port_c_39a90d8d__prvEnableVFP</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[3b]"></a>PendSV_Handler</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = PendSV_Handler &rArr; vTaskSwitchContext &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[480]"></a>vPortGetIPSR</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
</UL>

<P><STRONG><a name="[33]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>CAN2_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[7e]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[7f]"></a>CAN2_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>CAN2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[8b]"></a>DCMI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[96]"></a>DMA2D_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[78]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[83]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>ETH_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[8d]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[8c]"></a>HASH_RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[86]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[85]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[95]"></a>LTDC_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[94]"></a>LTDC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[80]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[88]"></a>OTG_HS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[87]"></a>OTG_HS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[8a]"></a>OTG_HS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[89]"></a>OTG_HS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[93]"></a>SAI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[90]"></a>SPI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[91]"></a>SPI5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[92]"></a>SPI6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>TIM1_BRK_TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>TIM1_TRG_COM_TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>TIM1_UP_TIM10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>TIM8_BRK_TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>TIM8_TRG_COM_TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>TIM8_UP_TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[8e]"></a>UART7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[8f]"></a>UART8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[84]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>HardFault_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cmb_fault.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = HardFault_Handler &rArr; cm_backtrace_fault &rArr; print_call_stack &rArr; cm_backtrace_call_stack
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cm_backtrace_fault
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[100]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[103]"></a>__rt_ctype_table</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ctype_o.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4addr_aton
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isspace
</UL>

<P><STRONG><a name="[9d]"></a>isspace</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, isspace_o.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = isspace
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL>
<P><STRONG><a name="[108]"></a>tolower</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, tolower.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strcasestr
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncasecmp
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
</UL>

<P><STRONG><a name="[3ee]"></a>rand</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rand.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_build_random_number
</UL>

<P><STRONG><a name="[3ed]"></a>srand</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rand.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_build_random_number
</UL>

<P><STRONG><a name="[493]"></a>___aeabi_memcpy8$move</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[152]"></a>__aeabi_memcpy</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_set_option
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_copy
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_copy_partial
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_accept
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_sock_make_addr
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getaddrname
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msg_osip_body_parse
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_osip_message_parse
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_output
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_input
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_free_complete_datagram
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_enqueue_new_datagram
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_reass
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_frag
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_input
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_send_response
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_to_str
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_parse_mime
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_parse
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_clone
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_osip_message_to_str
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_alloc
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_send_message
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_tl_open_oc
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_tl_open
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_read_udp_main_socket
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_send_message
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_new_socket
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DigestCalcResponseAka
</UL>

<P><STRONG><a name="[248]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cm_backtrace_fault
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_osip_message_to_str
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_transport_udp_init
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_transport_tcp_init
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_default_gateway_ipv6sock
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_send_message
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_read_udp_main_socket
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_new_socket
</UL>

<P><STRONG><a name="[2d3]"></a>__aeabi_memmove</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strn_append
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_clrspace
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_recv
</UL>

<P><STRONG><a name="[494]"></a>__aeabi_memmove4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[495]"></a>__aeabi_memmove8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[105]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[496]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[497]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[104]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_get_masquerade_contact
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_masquerade_contact
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_get_masquerade_contact
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DigestCalcResponseAka
</UL>

<P><STRONG><a name="[19b]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_set_option
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_quit
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_malloc
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_init
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_automatic_action
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_add_authentication_info
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_select
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_new
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_alloc
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_call_stack
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_enqueue_new_datagram
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parser_init
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_init
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_init
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_nict_init
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_ist_init
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_init
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_ict_init
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_authorization_init
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_dialog_init
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_via_init
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_www_authenticate_init
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_init
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_retry_request
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_default_gateway_ipv6sock
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_default_gateway_ipv6
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_send_message
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_masquerade_contact
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_init
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_free
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_read_udp_oc_socket
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_read_udp_main_socket
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_send_message
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_init
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_free
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_new_socket
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_close_sockinfo
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_read_tcp_main_socket
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_reg_init
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_store_nonce
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_create_proxy_authorization_header
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_event_init
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_dialog_init_as_uas
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_dialog_init_as_uac
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_delete_nonce
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_learn_port_from_via
</UL>

<P><STRONG><a name="[498]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[106]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[228]"></a>strcat</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, strcat.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_dialog_add_contact
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_complete_answer_that_establish_a_dialog
</UL>

<P><STRONG><a name="[2e8]"></a>strstr</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, strstr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_send_answer
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_tl_update_contact
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv2xx
</UL>

<P><STRONG><a name="[2fe]"></a>strncpy</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, strncpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cm_backtrace_init
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strncpy
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_send_message
</UL>

<P><STRONG><a name="[1a8]"></a>strchr</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, strchr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_send_answer
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_multiple_header
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msg_headers_parse
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_startline_parseresp
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_startline_parsereq
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_to_str
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_parse
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;next_separator
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_cseq_parse
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_disposition_parse
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_parse
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_generic_param_parseall
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_info_parse
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_id_parse
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_type_parse
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_parse_header
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_token_set
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_quoted_string_set
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_quote_find
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_authorization_parse
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_via_parse
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_parse_params
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_parse_headers
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_www_authenticate_parse
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_via_to_str
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_inet_pton
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_messages
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_srv_lookup
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv2xx
</UL>

<P><STRONG><a name="[14a]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strdup
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_tolower
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_find_next_occurence
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msg_osip_body_parse
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_header
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_to_str
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_parse
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_cseq_to_str
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_cseq_parse
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_length_parse
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_disposition_parse
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_to_str
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_parse
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_generic_param_parseall
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_info_to_str
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_info_parse
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_id_parse
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_matching_request_osip_to_xist_17_2_3
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_get_byname
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_header_to_str
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_type_to_str
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_type_parse
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_to_str
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_token_set
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_quoted_string_set
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_authorization_to_str
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_authorization_parse
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_id_to_str
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_via_parse
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_parse_params
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_parse_headers
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_uri_unescape
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_uri_escape_nonascii_and_nondef
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_www_authenticate_parse
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strdup_without_quote
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strcasestr
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_clrspace
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_www_authenticate_to_str
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_via_to_str
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat_simple_header
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat_headers_one_per_line
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_osip_message_to_str
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_startline_to_strresp
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_startline_to_strreq
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_dialog_add_contact
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_complete_answer_that_establish_a_dialog
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buffer_find
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_reg_init
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_register_build_register
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_register_add_contact
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_create_proxy_authorization_header
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_find_authentication_info
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DigestCalcResponseAka
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DigestCalcResponse
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DigestCalcHA1
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_handle_received_rport
</UL>

<P><STRONG><a name="[1a3]"></a>strcmp</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, strcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_send_answer
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_is_known_header
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_fix_last_via_header
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_dialog_match_as_uas
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_matching_response_osip_to_xict_17_1_3
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_matching_request_osip_to_xist_17_2_3
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_find_transaction
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nist_rcv_request
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nict_snd_request
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_via_match
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_tag_match
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_cseq_match
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_id_match
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;evt_set_type_outgoing_sipmessage
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_compare
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_request_out_of_dialog
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_find_last_out_invite
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_find_last_inc_invite
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_complete_answer_that_establish_a_dialog
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_build_request_within_dialog
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_send_message
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_handle_incoming_message
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tl_resolv_naptr_destination
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_send_message
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_srv_lookup
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_xixt_kill_transaction
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_transport_error
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_snd123456xx
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcvrequest
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv3456xx
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv2xx_4invite
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv2xx
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv1xx
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_send_default_answer
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_response_out_of_transaction
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_newrequest
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_match_update_for_invite
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_handle_rfc5626_ob
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cancel_match_invite
</UL>

<P><STRONG><a name="[2ee]"></a>memchr</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, memchr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buffer_find
</UL>

<P><STRONG><a name="[154]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernet_input
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_find_next_occurence
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_read_udp_main_socket
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buffer_find
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DigestCalcResponseAka
</UL>

<P><STRONG><a name="[3c2]"></a>strncat</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, strncat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strncat
</UL>
<BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msg_osip_body_parse
</UL>

<P><STRONG><a name="[1c8]"></a>strcpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, strcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msg_osip_body_parse
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_startline_to_strresp
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_startline_to_strreq
</UL>

<P><STRONG><a name="[1bc]"></a>strncmp</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, strncmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msg_osip_body_parse
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_startline_parse
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_contact_to_str
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_contact_parse
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_matching_request_osip_to_xist_17_2_3
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_parse_mime
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_parse_header
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_quote_find
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_compare
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_via_parse
</UL>

<P><STRONG><a name="[1aa]"></a>strspn</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, strspn.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strspn
</UL>
<BR>[Called By]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_osip_message_parse
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_generic_param_parseall
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_token_set
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_quoted_string_set
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_clrspace
</UL>

<P><STRONG><a name="[107]"></a>strcasecmp</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, strcasecmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = strcasecmp
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tolower
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_set_option
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_send_answer
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_build_answer
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_is_header_comma_separated
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msg_osip_body_parse
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_startline_parsereq
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_header_get_byname
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_to_str
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_nist_init
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_nict_timeout_e_event
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nict_snd_request
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_nict_init
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_ist_init
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_ict_timeout_a_event
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ict_snd_invite
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_ict_init
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_osip_message_to_str
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_request_out_of_dialog
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_dialog_add_contact
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_complete_answer_that_establish_a_dialog
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_add_authentication_information
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_send_request
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_build_request
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_retry_request
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_send_message
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_tl_update_contact
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_tl_open
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_read_udp_main_socket
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_request_viamanager
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_message_contactmanager
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tl_resolv_naptr_destination
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_send_message
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_open
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_find_socket
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_register_build_register
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_register_add_contact
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_store_nonce
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_create_proxy_authorization_header
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_remove_authentication_info
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_mark_registration_expired
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_check_allow_header
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proxyauthorization_already_exist_for_realm
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_find_authentication_info
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;authorization_already_exist_for_realm
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_transport_error
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv2xx_4invite
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv2xx
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_update_expires_according_to_contact
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_register_contact_is_modified
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_delete_nonce
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DigestCalcResponse
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DigestCalcHA1
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_learn_port_from_via
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_response_out_of_transaction
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_newrequest
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_find_last_out_transaction
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_find_last_inc_transaction
</UL>

<P><STRONG><a name="[109]"></a>strncasecmp</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, strncasecmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = strncasecmp
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tolower
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_message_send_answer
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_message_build_answer
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_send_answer
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_multiple_header
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_parse
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_get_byname
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_parse_header
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_token_set
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_quoted_string_set
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strcasestr
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_find_authentication_info
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv2xx
</UL>

<P><STRONG><a name="[10a]"></a>calloc</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, calloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = calloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_he2ai
</UL>

<P><STRONG><a name="[10c]"></a>__0sscanf</STRONG> (Thumb, 48 bytes, Stack size 72 bytes, __0sscanf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>
<BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_startline_parseresp
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_uri_unescape
</UL>

<P><STRONG><a name="[10e]"></a>_scanf_int</STRONG> (Thumb, 332 bytes, Stack size 56 bytes, _scanf_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[110]"></a>atoi</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, atoi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_send_answer
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_find
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msg_osip_body_parse
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_osip_message_parse
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_nict_init
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_snd_xxx
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ict_rcv_3456xx
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_ict_init
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_dialog_update_osip_cseq_as_uas
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_dialog_init_as_uas
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_dialog_init_as_uac_with_remote_request
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_dialog_init
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_via_parse
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_snd_message
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_retry_request
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_send_message
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_tl_update_contact
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_send_message
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_messages
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_register_build_register
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_mark_registration_expired
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv2xx_4invite
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv2xx
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_update_expires_according_to_contact
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_learn_port_from_via
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_newrequest
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_handle_received_rport
</UL>

<P><STRONG><a name="[499]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[2c4]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[102]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[49a]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[101]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[49b]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[10f]"></a>_chval</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, _chval.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
</UL>

<P><STRONG><a name="[10d]"></a>__vfscanf_char</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, scanf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>

<P><STRONG><a name="[9a]"></a>_sgetc</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> __0sscanf.o(.text)
</UL>
<P><STRONG><a name="[9b]"></a>_sbackspace</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> __0sscanf.o(.text)
</UL>
<P><STRONG><a name="[112]"></a>strtol</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, strtol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>

<P><STRONG><a name="[49c]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[115]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[119]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[11a]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[11b]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[11c]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[11d]"></a>__aeabi_d2ulz</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[2b5]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[fd]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[49d]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[116]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[49e]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[113]"></a>__vfscanf</STRONG> (Thumb, 808 bytes, Stack size 88 bytes, _scanf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>

<P><STRONG><a name="[114]"></a>_strtoul</STRONG> (Thumb, 158 bytes, Stack size 40 bytes, _strtoul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[118]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[117]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[49f]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dclz77c.o(.text), UNUSED)

<P><STRONG><a name="[4a0]"></a>__decompress2</STRONG> (Thumb, 94 bytes, Stack size unknown bytes, __dclz77c.o(.text), UNUSED)

<P><STRONG><a name="[137]"></a>BSP_Init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, board.o(i.BSP_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = BSP_Init &rArr; SystemClock_Config &rArr; HAL_RCC_ClockConfig &rArr; HAL_RCC_GetSysClockFreq &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_SLOT
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cm_backtrace_init
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_CLK_Init
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_GPIO_Config
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_USART_Config
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[13f]"></a>Bsp_Eth_Init</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, bsp_eth.o(i.Bsp_Eth_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = Bsp_Eth_Init &rArr; HAL_ETH_Init &rArr; ETH_MACDMAConfig &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ETH_Init
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ETH_DMATxDescListInit
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ETH_DMARxDescListInit
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_init
</UL>

<P><STRONG><a name="[37]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[143]"></a>ComputeOPc</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, milenage.o(i.ComputeOPc))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = ComputeOPc &rArr; RijndaelEncrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RijndaelEncrypt
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f2345
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f1
</UL>

<P><STRONG><a name="[14d]"></a>CvtHex</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, jauth.o(i.CvtHex))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CvtHex
</UL>
<BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_reg_init
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DigestCalcResponse
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DigestCalcHA1
</UL>

<P><STRONG><a name="[13d]"></a>DEBUG_USART_Config</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, bsp_debug_usart.o(i.DEBUG_USART_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = DEBUG_USART_Config &rArr; HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[3a]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[7a]"></a>ETH_IRQHandler</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, bsp_eth.o(i.ETH_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ETH_IRQHandler &rArr; HAL_ETH_IRQHandler &rArr; HAL_ETH_RxCpltCallback &rArr; xQueueGiveFromISR &rArr; xTaskRemoveFromEventList &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ETH_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[147]"></a>Error_Handler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, main.o(i.Error_Handler))
<BR><BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_USART_Config
</UL>

<P><STRONG><a name="[17b]"></a>HAL_DMA_Abort_IT</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32f4xx_hal_dma.o(i.HAL_DMA_Abort_IT))
<BR><BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[15a]"></a>HAL_Delay</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, stm32f4xx_hal.o(i.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ETH_Init
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_MACDMAConfig
</UL>

<P><STRONG><a name="[142]"></a>HAL_ETH_DMARxDescListInit</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, stm32f4xx_hal_eth.o(i.HAL_ETH_DMARxDescListInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_ETH_DMARxDescListInit
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bsp_Eth_Init
</UL>

<P><STRONG><a name="[141]"></a>HAL_ETH_DMATxDescListInit</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, stm32f4xx_hal_eth.o(i.HAL_ETH_DMATxDescListInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_ETH_DMATxDescListInit
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bsp_Eth_Init
</UL>

<P><STRONG><a name="[15f]"></a>HAL_ETH_ErrorCallback</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, bsp_eth.o(i.HAL_ETH_ErrorCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_ETH_ErrorCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ETH_IRQHandler
</UL>

<P><STRONG><a name="[369]"></a>HAL_ETH_GetReceivedFrame</STRONG> (Thumb, 178 bytes, Stack size 0 bytes, stm32f4xx_hal_eth.o(i.HAL_ETH_GetReceivedFrame))
<BR><BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_input
</UL>

<P><STRONG><a name="[158]"></a>HAL_ETH_IRQHandler</STRONG> (Thumb, 164 bytes, Stack size 8 bytes, stm32f4xx_hal_eth.o(i.HAL_ETH_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = HAL_ETH_IRQHandler &rArr; HAL_ETH_RxCpltCallback &rArr; xQueueGiveFromISR &rArr; xTaskRemoveFromEventList &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ETH_TxCpltCallback
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ETH_RxCpltCallback
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ETH_ErrorCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_IRQHandler
</UL>

<P><STRONG><a name="[140]"></a>HAL_ETH_Init</STRONG> (Thumb, 640 bytes, Stack size 32 bytes, stm32f4xx_hal_eth.o(i.HAL_ETH_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = HAL_ETH_Init &rArr; ETH_MACDMAConfig &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ETH_WritePHYRegister
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ETH_ReadPHYRegister
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_MACDMAConfig
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ETH_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bsp_Eth_Init
</UL>

<P><STRONG><a name="[162]"></a>HAL_ETH_MspInit</STRONG> (Thumb, 246 bytes, Stack size 32 bytes, bsp_eth.o(i.HAL_ETH_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_ETH_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ETH_Init
</UL>

<P><STRONG><a name="[165]"></a>HAL_ETH_ReadPHYRegister</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, stm32f4xx_hal_eth.o(i.HAL_ETH_ReadPHYRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_ETH_ReadPHYRegister
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ETH_Init
</UL>

<P><STRONG><a name="[160]"></a>HAL_ETH_RxCpltCallback</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, bsp_eth.o(i.HAL_ETH_RxCpltCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_ETH_RxCpltCallback &rArr; xQueueGiveFromISR &rArr; xTaskRemoveFromEventList &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveFromISR
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ETH_IRQHandler
</UL>

<P><STRONG><a name="[169]"></a>HAL_ETH_Start</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, stm32f4xx_hal_eth.o(i.HAL_ETH_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_ETH_Start &rArr; ETH_MACTransmissionEnable &rArr; ETH_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_MACTransmissionEnable
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_MACReceptionEnable
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_FlushTransmitFIFO
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_DMATransmissionEnable
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_DMAReceptionEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_init
</UL>

<P><STRONG><a name="[36b]"></a>HAL_ETH_TransmitFrame</STRONG> (Thumb, 318 bytes, Stack size 16 bytes, stm32f4xx_hal_eth.o(i.HAL_ETH_TransmitFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_ETH_TransmitFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_output
</UL>

<P><STRONG><a name="[161]"></a>HAL_ETH_TxCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bsp_eth.o(i.HAL_ETH_TxCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ETH_IRQHandler
</UL>

<P><STRONG><a name="[164]"></a>HAL_ETH_WritePHYRegister</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, stm32f4xx_hal_eth.o(i.HAL_ETH_WritePHYRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_ETH_WritePHYRegister
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ETH_Init
</UL>

<P><STRONG><a name="[145]"></a>HAL_GPIO_Init</STRONG> (Thumb, 486 bytes, Stack size 24 bytes, stm32f4xx_hal_gpio.o(i.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ETH_MspInit
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_GPIO_Config
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_USART_Config
</UL>

<P><STRONG><a name="[33d]"></a>HAL_GPIO_ReadPin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_hal_gpio.o(i.HAL_GPIO_ReadPin))
<BR><BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_SLOT
</UL>

<P><STRONG><a name="[15e]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_hal.o(i.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ETH_WritePHYRegister
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ETH_ReadPHYRegister
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ETH_Init
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_EnableOverDrive
</UL>

<P><STRONG><a name="[184]"></a>HAL_IncTick</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_hal.o(i.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[138]"></a>HAL_Init</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, stm32f4xx_hal.o(i.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[16d]"></a>HAL_InitTick</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, stm32f4xx_hal.o(i.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[16e]"></a>HAL_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal.o(i.HAL_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[167]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(i.HAL_NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ETH_MspInit
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_init
</UL>

<P><STRONG><a name="[166]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 124 bytes, Stack size 40 bytes, stm32f4xx_hal_cortex.o(i.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_GetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ETH_MspInit
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_init
</UL>

<P><STRONG><a name="[16c]"></a>HAL_NVIC_SetPriorityGrouping</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(i.HAL_NVIC_SetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[172]"></a>HAL_PWREx_EnableOverDrive</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, stm32f4xx_hal_pwr_ex.o(i.HAL_PWREx_EnableOverDrive))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_PWREx_EnableOverDrive
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[173]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 366 bytes, Stack size 16 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_RCC_GetSysClockFreq &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[163]"></a>HAL_RCC_GetHCLKFreq</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_GetHCLKFreq))
<BR><BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ETH_Init
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[175]"></a>HAL_RCC_GetPCLK1Freq</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_GetPCLK1Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_RCC_GetPCLK1Freq
</UL>
<BR>[Calls]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[176]"></a>HAL_RCC_GetPCLK2Freq</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_GetPCLK2Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_RCC_GetPCLK2Freq
</UL>
<BR>[Calls]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[174]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HAL_RCC_GetSysClockFreq &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[177]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 1086 bytes, Stack size 24 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_RCC_OscConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[187]"></a>HAL_SYSTICK_CLKSourceConfig</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(i.HAL_SYSTICK_CLKSourceConfig))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[16f]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, stm32f4xx_hal_cortex.o(i.HAL_SYSTICK_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_SYSTICK_Config &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[17c]"></a>HAL_UART_ErrorCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_uart.o(i.HAL_UART_ErrorCallback))
<BR><BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMAAbortOnError
</UL>

<P><STRONG><a name="[178]"></a>HAL_UART_IRQHandler</STRONG> (Thumb, 326 bytes, Stack size 32 bytes, stm32f4xx_hal_uart.o(i.HAL_UART_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_UART_IRQHandler &rArr; UART_Receive_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Transmit_IT
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Receive_IT
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndTransmit_IT
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndRxTransfer
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[146]"></a>HAL_UART_Init</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, stm32f4xx_hal_uart.o(i.HAL_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_USART_Config
</UL>

<P><STRONG><a name="[17f]"></a>HAL_UART_MspInit</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, bsp_debug_usart.o(i.HAL_UART_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_UART_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[181]"></a>HAL_UART_Receive</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, stm32f4xx_hal_uart.o(i.HAL_UART_Receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_UART_Receive &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[18e]"></a>HAL_UART_RxCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_uart.o(i.HAL_UART_RxCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Receive_IT
</UL>

<P><STRONG><a name="[183]"></a>HAL_UART_Transmit</STRONG> (Thumb, 214 bytes, Stack size 32 bytes, stm32f4xx_hal_uart.o(i.HAL_UART_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_SendString
</UL>

<P><STRONG><a name="[18d]"></a>HAL_UART_TxCpltCallback</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, bsp_debug_usart.o(i.HAL_UART_TxCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndTransmit_IT
</UL>

<P><STRONG><a name="[13b]"></a>LED_GPIO_Config</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, bsp_led.o(i.LED_GPIO_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LED_GPIO_Config &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[36]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[144]"></a>RijndaelEncrypt</STRONG> (Thumb, 2342 bytes, Stack size 44 bytes, rijndael.o(i.RijndaelEncrypt))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = RijndaelEncrypt
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f2345
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f1
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComputeOPc
</UL>

<P><STRONG><a name="[335]"></a>RijndaelKeySchedule</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, rijndael.o(i.RijndaelKeySchedule))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RijndaelKeySchedule
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f2345
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f1
</UL>

<P><STRONG><a name="[3c]"></a>SysTick_Handler</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SysTick_Handler &rArr; xPortSysTickHandler &rArr; xTaskIncrementTick &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortSysTickHandler
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[98]"></a>SystemInit</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, system_stm32f4xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(.text)
</UL>
<P><STRONG><a name="[11f]"></a>TCPIP_Init</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, sys_arch.o(i.TCPIP_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 784<LI>Call Chain = TCPIP_Init &rArr; netif_add &rArr; netif_set_addr &rArr; netif_do_set_ipaddr &rArr; netif_do_ip_addr_changed &rArr; tcp_netif_ip_addr_changed &rArr; tcp_netif_ip_addr_changed_pcblist &rArr; tcp_abort &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; tcp_output_control_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_up
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_down
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_default
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_add
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_init
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskCreate
</UL>

<P><STRONG><a name="[62]"></a>USART1_IRQHandler</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, bsp_debug_usart.o(i.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = USART1_IRQHandler &rArr; HAL_UART_Receive &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[121]"></a>Usart_SendString</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, bsp_debug_usart.o(i.Usart_SendString))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Usart_SendString &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskCreate
</UL>

<P><STRONG><a name="[18f]"></a>__0printf</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[4a1]"></a>__1printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[122]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_thread_new
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_sendto
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_close
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_bind
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udpecho_thread
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveFromISR
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ETH_ErrorCallback
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bsp_Eth_Init
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_malloc
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_listen_addr
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_init
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCPIP_Init
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskCreate
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_remove_listener
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_netif_ip_addr_changed_pcblist
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_listen_closed
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_kill_state
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_free_listen
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close_shutdown_fin
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close_shutdown
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_remove_header
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_ref
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_realloc
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_copy
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_clone
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc_reference
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_add_header_impl
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_up
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_down
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_add
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_issue_reports
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_do_set_ipaddr
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_memp_malloc_pool
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_memp_free_pool
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_trim
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_malloc
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plug_holes
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSetTimeOutState
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphore
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueDelete
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxQueueMessagesWaiting
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_cat
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbuf_ref
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbuf_free
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_send
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_remove
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_recv
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_disconnect
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_connect
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_bind
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_shutdown
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_sent
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recved
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recv
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_poll
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_err
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_connect
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_bind
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_new
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sent_tcp
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_udp
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_tcp
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;poll_tcp
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcb_new
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_err_to_msg
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_writemore
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_connected
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_close_internal
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;err_tcp
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_free
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_alloc
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_is_err_msg
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_write
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_getaddr
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_delconn
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_connect
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_close
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_write_vectors_partly
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_tcp_recvd
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_send
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recv_udp_raw_netbuf_flags
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recv_tcp_pbuf_flags
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_new_with_proto_and_callback
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_getaddr
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_disconnect
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_connect
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_bind
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_accept
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_tcp_recvd_msg
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recv_data
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_close_shutdown
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTaskExitError
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_init
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timeouts_sleeptime
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mutex_new
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_init
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_inpkt
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_init
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_thread_handle_msg
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_thread
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_copy_partial
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4addr_aton
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_select
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_connect
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_accept
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_unlink_select_cb
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_sockopt_to_ipopt
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_sock_make_addr
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_setsockopt_impl
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_selscan
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recvfrom_udp_raw
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recv_tcp
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_callback
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_socket
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_update_arp_entry
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_raw
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_output_to_arp_index
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_find_entry
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_output_if_src
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if_src
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_input
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_input_local_match
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timeout
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timeout_abs
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write_checks
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pbuf_prealloc
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_segment_busy
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_segment
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_fill_options
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_control_segment
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_alloc_header_common
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_alloc_header
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_create_segment
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send_empty_ack
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rexmit_rto
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rexmit_fast
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rexmit
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_timewait_input
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_parseopt
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_listen_input
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input_delayed_close
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_free_acked_segments
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_zero_window_probe
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_split_unsent_seg
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send_fin
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rexmit_rto_prepare
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rexmit_rto_commit
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_keepalive
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_enqueue_flags
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_update_rcv_ann_wnd
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_slowtmr
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recv_null
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process_refused_data
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_remove
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_purge
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_next_iss
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_free
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_eff_send_mss_netif
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abandon
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_call_stack
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fault_diagnosis
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dump_stack
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernetif_init
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_input
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_init
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipfrag_free_pbuf_custom
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_free_complete_datagram
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_dequeue_datagram
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_chain_frag_into_datagram_and_validate
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag_free_pbuf_custom_ref
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_reass
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_frag
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_input
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_send_response
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernet_output
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_query
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_output
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_input
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cm_backtrace_firmware_info
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cm_backtrace_fault
</UL>

<P><STRONG><a name="[4a2]"></a>__c89printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[4a3]"></a>printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[191]"></a>__0snprintf</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, printfa.o(i.__0snprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[4a4]"></a>__1snprintf</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, printfa.o(i.__0snprintf), UNUSED)

<P><STRONG><a name="[150]"></a>__2snprintf</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, printfa.o(i.__0snprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_set_option
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_listen_addr
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_init
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_automatic_action
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_add_authentication_info
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_fix_last_via_header
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_to_str
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_cseq_to_str
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_to_str
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parser_init
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_header_to_str
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_type_to_str
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_via_to_str
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_osip_message_to_str
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_update_top_via
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_dialog_add_contact
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_complete_answer_that_establish_a_dialog
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_build_request_within_dialog
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_add_authentication_information
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_ip2addr
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_default_gateway_ipv6sock
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_default_gateway_ipv6
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_default_gateway_ipv4sock
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_default_gateway_ipv4
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_send_message
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_masquerade_contact
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_get_masquerade_contact
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_tl_update_contact
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_read_udp_main_socket
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_request_viamanager
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_message_contactmanager
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_getnameinfo
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_send_message
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_masquerade_contact
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_get_masquerade_contact
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_update_contact
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_register_build_register
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_register_add_contact
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_register
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_store_nonce
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_create_proxy_authorization_header
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_request_add_via
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_generate_random
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DigestCalcResponseAka
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_learn_port_from_via
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_handle_rfc5626_ob
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_handle_received_rport
</UL>

<P><STRONG><a name="[4a5]"></a>__c89snprintf</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, printfa.o(i.__0snprintf), UNUSED)

<P><STRONG><a name="[4a6]"></a>snprintf</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, printfa.o(i.__0snprintf), UNUSED)

<P><STRONG><a name="[192]"></a>__0sprintf</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[4a7]"></a>__1sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[1c9]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msg_osip_body_parse
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_to_str
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_to_str
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_info_to_str
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_call_stack
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ict_create_ack
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_type_to_str
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_id_to_str
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_uri_escape_nonascii_and_nondef
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_via_to_str
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_startline_to_strresp
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_build_response_default
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_build_request_within_dialog
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_create_proxy_authorization_header
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_malloc_new_random
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_event_init
</UL>

<P><STRONG><a name="[4a8]"></a>__c89sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[4a9]"></a>sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[193]"></a>__0vsnprintf</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, printfa.o(i.__0vsnprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[4aa]"></a>__1vsnprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsnprintf), UNUSED)

<P><STRONG><a name="[4ab]"></a>__2vsnprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsnprintf), UNUSED)

<P><STRONG><a name="[4ac]"></a>__c89vsnprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsnprintf), UNUSED)

<P><STRONG><a name="[2ab]"></a>vsnprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsnprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = vsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_strdup_printf
</UL>

<P><STRONG><a name="[111]"></a>__aeabi_errno_addr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, errno.o(i.__aeabi_errno_addr))
<BR><BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_read_udp_oc_socket
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_read_udp_main_socket
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_send_sockinfo
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_recv
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_new_socket
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_read_tcp_main_socket
</UL>

<P><STRONG><a name="[4ad]"></a>__rt_errno_addr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, errno.o(i.__aeabi_errno_addr), UNUSED)

<P><STRONG><a name="[131]"></a>free</STRONG> (Thumb, 88 bytes, Stack size 12 bytes, mallocr.o(i.__free$realloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = free
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udpecho_thread
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_set_user_agent
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_set_option
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_quit
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_event_free
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_send_answer
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskCreate
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_multiple_header
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msg_osip_body_parse
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msg_headers_parse
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_osip_message_parse
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_startline_parseresp
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_startline_parsereq
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_www_authenticate_free
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_to_str
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_parse
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_free
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_length_free
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_to_str
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_parse
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_generic_param_parseall
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_info_free
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_execute
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_remove
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_iterator_remove
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_dialog_match_as_uas
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_release
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_nist_execute
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_ist_execute
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_nist_init
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_nist_free
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_nict_set_destination
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_nict_init
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_nict_free
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_ist_init
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_ist_free
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_free
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ict_create_ack
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_ict_set_destination
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_ict_init
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_ict_free
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_header_free
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_type_to_str
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_type_free
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_to_str
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_init
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_free
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_parse_header
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_authorization_free
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_via_match
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_via_free
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_fifo_free
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_cseq_free
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_id_free
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_free2
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_event_free
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_free
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_dialog_free
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_via_parse
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_parse_params
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_parse_headers
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_free
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_uri_escape_nonascii_and_nondef
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat_simple_header
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat_headers_one_per_line
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_osip_message_to_str
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_startline_to_strreq
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_reg_free
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_get_addrinfo
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_freeaddrinfo
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_update_top_via
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_cancel
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_dialog_free
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_dialog_add_contact
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_complete_answer_that_establish_a_dialog
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_free
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_add_authentication_information
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_retry_request
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realloc
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_send_message
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_free
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_tl_update_contact
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_read_udp_oc_socket
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_read_udp_main_socket
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_request_viamanager
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_message_contactmanager
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_handle_incoming_message
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tl_resolv_naptr_destination
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_send_message
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_free
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_update_contact
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_recv
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_close_sockinfo
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_reg_init
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_register_build_register
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_register_add_contact
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_create_proxy_authorization_header
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_remove_authentication_info
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_dialog_init_as_uas
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_dialog_init_as_uac
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DigestCalcResponseAka
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_send_default_answer
</UL>

<P><STRONG><a name="[10b]"></a>malloc</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, mallocr.o(i.__malloc$realloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strdup
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_malloc
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_init
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_add_authentication_info
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskCreate
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_multiple_header
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_fix_last_via_header
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msg_osip_body_parse
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msg_headers_parse
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_osip_message_parse
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_startline_parseresp
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_startline_parsereq
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_header
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_to_str
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_parse
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_init
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_cseq_to_str
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_cseq_parse
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_cseq_init
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_length_parse
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_length_init
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_disposition_parse
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_to_str
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_parse
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_init
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_generic_param_parseall
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_info_to_str
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_info_parse
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_info_init
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_id_parse
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_id_init
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_init
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_nist_execute
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_ist_execute
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_init
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_nist_init
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_nict_init
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_ist_init
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_init
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_add
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ict_create_ack
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_ict_init
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_header_to_str
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_header_init
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_type_to_str
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_type_parse
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_type_init
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_to_str
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_parse_mime
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_parse
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_init
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_clone
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_parse_header
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_token_set
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_quoted_string_set
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_authorization_to_str
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_authorization_parse
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_authorization_init
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_new_outgoing_sipmessage
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_id_to_str
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_dialog_init
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_via_parse
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_via_init
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_parse_params
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_parse_headers
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_init
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_uri_escape_nonascii_and_nondef
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_www_authenticate_parse
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_www_authenticate_init
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strdup_without_quote
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_www_authenticate_to_str
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_via_to_str
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_osip_message_to_str
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_startline_to_strresp
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_startline_to_strreq
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_strdup_printf
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_dialog_add_contact
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_init
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_build_response_default
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_build_request_within_dialog
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realloc
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_init
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_tl_update_contact
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_read_udp_oc_socket
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_read_udp_main_socket
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_handle_incoming_message
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_init
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_update_contact
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_recv
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_reg_init
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_register_build_register
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_register_add_contact
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_create_proxy_authorization_header
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_malloc_new_random
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_event_init
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_dialog_init_as_uas
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_dialog_init_as_uac
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;base64_decode_string
</UL>

<P><STRONG><a name="[195]"></a>__osip_add_ict</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, osip.o(i.__osip_add_ict))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __osip_add_ict &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_add
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_init
</UL>

<P><STRONG><a name="[197]"></a>__osip_add_ist</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, osip.o(i.__osip_add_ist))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __osip_add_ist &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_add
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_init
</UL>

<P><STRONG><a name="[198]"></a>__osip_add_nict</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, osip.o(i.__osip_add_nict))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __osip_add_nict &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_add
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_init
</UL>

<P><STRONG><a name="[199]"></a>__osip_add_nist</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, osip.o(i.__osip_add_nist))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __osip_add_nist &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_add
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_init
</UL>

<P><STRONG><a name="[3bf]"></a>__osip_find_next_crlf</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, osip_message_parse.o(i.__osip_find_next_crlf))
<BR><BR>[Called By]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msg_headers_parse
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_parse_header
</UL>

<P><STRONG><a name="[1a1]"></a>__osip_find_next_occurence</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, osip_message_parse.o(i.__osip_find_next_occurence))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __osip_find_next_occurence &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msg_osip_body_parse
</UL>

<P><STRONG><a name="[1a2]"></a>__osip_find_transaction</STRONG> (Thumb, 240 bytes, Stack size 24 bytes, osip.o(i.__osip_find_transaction))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = __osip_find_transaction &rArr; osip_transaction_find &rArr; __osip_transaction_matching_request_osip_to_xist_17_2_3 &rArr; osip_via_match &rArr; osip_via_to_str &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_add_event
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_find
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_find_transaction_and_add_event
</UL>

<P><STRONG><a name="[1a6]"></a>__osip_generic_param_parseall</STRONG> (Thumb, 600 bytes, Stack size 48 bytes, osip_from.o(i.__osip_generic_param_parseall))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = __osip_generic_param_parseall &rArr; osip_uri_param_add &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_add
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;next_separator
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strncpy
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_quote_find
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strspn
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
</UL>
<BR>[Called By]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_disposition_parse
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_parse
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_info_parse
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_type_parse
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_via_parse
</UL>

<P><STRONG><a name="[1ad]"></a>__osip_ict_free</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, ict.o(i.__osip_ict_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __osip_ict_free &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_free2
</UL>

<P><STRONG><a name="[1ae]"></a>__osip_ict_init</STRONG> (Thumb, 538 bytes, Stack size 48 bytes, ict.o(i.__osip_ict_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = __osip_ict_init &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strdup
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;via_get_protocol
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_get_byname
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_get_knownheaderlist
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_gettimeofday
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_gettimeofday
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_ict_set_destination
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_init
</UL>

<P><STRONG><a name="[1b4]"></a>__osip_ist_free</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, ist.o(i.__osip_ist_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __osip_ist_free &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_free2
</UL>

<P><STRONG><a name="[1b5]"></a>__osip_ist_init</STRONG> (Thumb, 210 bytes, Stack size 32 bytes, ist.o(i.__osip_ist_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __osip_ist_init &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;via_get_protocol
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_get_knownheaderlist
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_init
</UL>

<P><STRONG><a name="[1b6]"></a>__osip_kill_transaction_callback</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, osip.o(i.__osip_kill_transaction_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __osip_kill_transaction_callback &rArr; osip_getsystemtime &rArr; osip_gettimeofday
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_getsystemtime
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_gettimeofday
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_nist_timeout_j_event
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nist_handle_transport_error
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_nict_timeout_k_event
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_nict_timeout_f_event
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nict_handle_transport_error
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_ist_timeout_i_event
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_ist_timeout_h_event
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ist_snd_2xx
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ist_handle_transport_error
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_ict_timeout_d_event
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_ict_timeout_b_event
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ict_rcv_3456xx
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ict_rcv_2xx
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ict_handle_transport_error
</UL>

<P><STRONG><a name="[3fe]"></a>__osip_message_call_method</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, osip_parser_cfg.o(i.__osip_message_call_method))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __osip_message_call_method
</UL>
<BR>[Called By]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set__header
</UL>

<P><STRONG><a name="[34c]"></a>__osip_message_callback</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, osip.o(i.__osip_message_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __osip_message_callback
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nist_snd_23456xx
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nist_snd_1xx
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nist_rcv_request
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_nict_timeout_f_event
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_nict_timeout_e_event
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nict_snd_request
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nict_rcv_23456xx
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nict_rcv_1xx
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_ist_timeout_g_event
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ist_snd_3456xx
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ist_snd_2xx
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ist_snd_1xx
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ist_rcv_invite
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ist_rcv_ack
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_ict_timeout_b_event
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_ict_timeout_a_event
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ict_snd_invite
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ict_retransmit_ack
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ict_rcv_3456xx
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ict_rcv_2xx
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ict_rcv_1xx
</UL>

<P><STRONG><a name="[1b8]"></a>__osip_message_is_header_comma_separated</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, osip_parser_cfg.o(i.__osip_message_is_header_comma_separated))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __osip_message_is_header_comma_separated &rArr; strcasecmp
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
</UL>
<BR>[Called By]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_multiple_header
</UL>

<P><STRONG><a name="[1b9]"></a>__osip_message_is_known_header</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, osip_parser_cfg.o(i.__osip_message_is_known_header))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __osip_message_is_known_header &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_hash
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set__header
</UL>

<P><STRONG><a name="[1cb]"></a>__osip_nict_free</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, nict.o(i.__osip_nict_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __osip_nict_free &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_free2
</UL>

<P><STRONG><a name="[1cc]"></a>__osip_nict_init</STRONG> (Thumb, 512 bytes, Stack size 48 bytes, nict.o(i.__osip_nict_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = __osip_nict_init &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strdup
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_nict_set_destination
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;via_get_protocol
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_get_byname
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_get_knownheaderlist
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_gettimeofday
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_gettimeofday
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_init
</UL>

<P><STRONG><a name="[1ce]"></a>__osip_nist_free</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, nist.o(i.__osip_nist_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __osip_nist_free &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_free2
</UL>

<P><STRONG><a name="[1cf]"></a>__osip_nist_init</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, nist.o(i.__osip_nist_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __osip_nist_init &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;via_get_protocol
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_get_knownheaderlist
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_init
</UL>

<P><STRONG><a name="[1a9]"></a>__osip_quote_find</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, osip_port.o(i.__osip_quote_find))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __osip_quote_find &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
</UL>
<BR>[Called By]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_parse
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_generic_param_parseall
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_quoted_string_set
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_authorization_parse
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_www_authenticate_parse
</UL>

<P><STRONG><a name="[1d0]"></a>__osip_quoted_string_set</STRONG> (Thumb, 386 bytes, Stack size 40 bytes, osip_www_authenticate.o(i.__osip_quoted_string_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = __osip_quoted_string_set &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strncpy
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_quote_find
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncasecmp
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strspn
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
</UL>
<BR>[Called By]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_authorization_parse
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_www_authenticate_parse
</UL>

<P><STRONG><a name="[1d1]"></a>__osip_remove_ict_transaction</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, osip.o(i.__osip_remove_ict_transaction))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = __osip_remove_ict_transaction &rArr; osip_list_iterator_remove &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_iterator_remove
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_next
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_first
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_remove_transaction
</UL>

<P><STRONG><a name="[1d5]"></a>__osip_remove_ist_transaction</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, osip.o(i.__osip_remove_ist_transaction))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = __osip_remove_ist_transaction &rArr; osip_list_iterator_remove &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_iterator_remove
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_next
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_first
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_remove_transaction
</UL>

<P><STRONG><a name="[1d6]"></a>__osip_remove_nict_transaction</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, osip.o(i.__osip_remove_nict_transaction))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = __osip_remove_nict_transaction &rArr; osip_list_iterator_remove &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_iterator_remove
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_next
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_first
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_remove_transaction
</UL>

<P><STRONG><a name="[1d7]"></a>__osip_remove_nist_transaction</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, osip.o(i.__osip_remove_nist_transaction))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = __osip_remove_nist_transaction &rArr; osip_list_iterator_remove &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_iterator_remove
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_next
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_first
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_remove_transaction
</UL>

<P><STRONG><a name="[1d8]"></a>__osip_token_set</STRONG> (Thumb, 290 bytes, Stack size 32 bytes, osip_www_authenticate.o(i.__osip_token_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __osip_token_set &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_clrncpy
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncasecmp
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strspn
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
</UL>
<BR>[Called By]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_authorization_parse
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_www_authenticate_parse
</UL>

<P><STRONG><a name="[1d9]"></a>__osip_transaction_matching_request_osip_to_xist_17_2_3</STRONG> (Thumb, 606 bytes, Stack size 56 bytes, osip_transaction.o(i.__osip_transaction_matching_request_osip_to_xist_17_2_3))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = __osip_transaction_matching_request_osip_to_xist_17_2_3 &rArr; osip_via_match &rArr; osip_via_to_str &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_get_byname
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;via_get_port
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;via_get_host
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_via_match
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_tag_match
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_cseq_match
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_id_match
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_find
</UL>

<P><STRONG><a name="[1e0]"></a>__osip_transaction_matching_response_osip_to_xict_17_1_3</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, osip_transaction.o(i.__osip_transaction_matching_response_osip_to_xict_17_1_3))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __osip_transaction_matching_response_osip_to_xict_17_1_3 &rArr; osip_uri_param_get_byname &rArr; strncasecmp
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_get_byname
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_find
</UL>

<P><STRONG><a name="[34b]"></a>__osip_transaction_set_state</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, osip_transaction.o(i.__osip_transaction_set_state))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_nist_timeout_j_event
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nist_snd_23456xx
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nist_snd_1xx
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nist_rcv_request
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nist_handle_transport_error
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_nict_timeout_k_event
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_nict_timeout_f_event
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nict_snd_request
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nict_rcv_23456xx
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nict_rcv_1xx
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nict_handle_transport_error
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_ist_timeout_i_event
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_ist_timeout_h_event
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ist_snd_3456xx
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ist_snd_2xx
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ist_rcv_invite
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ist_rcv_ack
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ist_handle_transport_error
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_ict_timeout_d_event
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_ict_timeout_b_event
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ict_snd_invite
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ict_retransmit_ack
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ict_rcv_3456xx
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ict_rcv_2xx
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ict_rcv_1xx
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ict_handle_transport_error
</UL>

<P><STRONG><a name="[1e8]"></a>__osip_transaction_snd_xxx</STRONG> (Thumb, 154 bytes, Stack size 48 bytes, osip_transaction.o(i.__osip_transaction_snd_xxx))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = __osip_transaction_snd_xxx &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_get_byname
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nist_snd_23456xx
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nist_snd_1xx
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nist_rcv_request
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_ist_timeout_g_event
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ist_snd_3456xx
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ist_snd_2xx
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ist_snd_1xx
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ist_rcv_invite
</UL>

<P><STRONG><a name="[34a]"></a>__osip_transport_error_callback</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, osip.o(i.__osip_transport_error_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __osip_transport_error_callback
</UL>
<BR>[Called By]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nist_handle_transport_error
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nict_handle_transport_error
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ist_handle_transport_error
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ict_handle_transport_error
</UL>

<P><STRONG><a name="[1e9]"></a>__osip_uri_escape_header_param</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, osip_uri.o(i.__osip_uri_escape_header_param))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = __osip_uri_escape_header_param &rArr; __osip_uri_escape_nonascii_and_nondef &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_uri_escape_nonascii_and_nondef
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_to_str
</UL>

<P><STRONG><a name="[1ea]"></a>__osip_uri_escape_nonascii_and_nondef</STRONG> (Thumb, 204 bytes, Stack size 48 bytes, osip_uri.o(i.__osip_uri_escape_nonascii_and_nondef))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = __osip_uri_escape_nonascii_and_nondef &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realloc
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_uri_escape_userinfo
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_uri_escape_uri_param
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_uri_escape_password
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_uri_escape_header_param
</UL>

<P><STRONG><a name="[1ec]"></a>__osip_uri_escape_password</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, osip_uri.o(i.__osip_uri_escape_password))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = __osip_uri_escape_password &rArr; __osip_uri_escape_nonascii_and_nondef &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_uri_escape_nonascii_and_nondef
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_to_str
</UL>

<P><STRONG><a name="[1ed]"></a>__osip_uri_escape_uri_param</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, osip_uri.o(i.__osip_uri_escape_uri_param))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = __osip_uri_escape_uri_param &rArr; __osip_uri_escape_nonascii_and_nondef &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_uri_escape_nonascii_and_nondef
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_to_str
</UL>

<P><STRONG><a name="[1ee]"></a>__osip_uri_escape_userinfo</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, osip_uri.o(i.__osip_uri_escape_userinfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = __osip_uri_escape_userinfo &rArr; __osip_uri_escape_nonascii_and_nondef &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_uri_escape_nonascii_and_nondef
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_to_str
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_dialog_add_contact
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_complete_answer_that_establish_a_dialog
</UL>

<P><STRONG><a name="[1ef]"></a>__osip_uri_unescape</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, osip_uri.o(i.__osip_uri_unescape))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = __osip_uri_unescape &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_parse
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_parse_params
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_parse_headers
</UL>

<P><STRONG><a name="[4ae]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[4af]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[4b0]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[1f1]"></a>_eXosip_add_authentication_information</STRONG> (Thumb, 1042 bytes, Stack size 144 bytes, exosip.o(i._eXosip_add_authentication_information))
<BR><BR>[Stack]<UL><LI>Max Depth = 2932<LI>Call Chain = _eXosip_add_authentication_information &rArr; _eXosip_create_proxy_authorization_header &rArr; DigestCalcResponseAka &rArr; f1 &rArr; ComputeOPc &rArr; RijndaelEncrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_to_str
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_add
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_get_byname
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_get_knownheaderlist
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_build_random_number
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_force_update
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_store_nonce
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_create_proxy_authorization_header
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proxyauthorization_already_exist_for_realm
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_find_authentication_info
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;authorization_already_exist_for_realm
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
</UL>
<BR>[Called By]<UL><LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_terminate_with_header
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_build_request
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_retry_request
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_register_build_register
</UL>

<P><STRONG><a name="[1f9]"></a>_eXosip_answer_invite_123456xx</STRONG> (Thumb, 282 bytes, Stack size 56 bytes, jresponse.o(i._eXosip_answer_invite_123456xx))
<BR><BR>[Stack]<UL><LI>Max Depth = 2152<LI>Call Chain = _eXosip_answer_invite_123456xx &rArr; _eXosip_complete_answer_that_establish_a_dialog &rArr; osip_message_set_contact &rArr; osip_contact_parse &rArr; osip_from_parse &rArr; osip_uri_parse &rArr; osip_uri_parse_headers &rArr; __osip_uri_unescape &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_add_event
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_free
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_new_outgoing_sipmessage
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_dialog_set_state
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_wakeup
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_find_last_inc_invite
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_dialog_set_200ok
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_complete_answer_that_establish_a_dialog
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_build_response_default
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_send_answer
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_build_answer
</UL>

<P><STRONG><a name="[202]"></a>_eXosip_build_request_within_dialog</STRONG> (Thumb, 580 bytes, Stack size 40 bytes, jrequest.o(i._eXosip_build_request_within_dialog))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = _eXosip_build_request_within_dialog &rArr; _eXosip_dialog_add_contact &rArr; osip_message_set_contact &rArr; osip_contact_parse &rArr; osip_from_parse &rArr; osip_uri_parse &rArr; osip_uri_parse_headers &rArr; __osip_uri_unescape &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strdup
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_header
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_cseq_set_number
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_cseq_set_method
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_cseq_init
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_call_id
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_clone
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_init
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_free
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_eol
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_clone
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_cseq_free
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_dialog_add_contact
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_request_add_via
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog_fill_route_set
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_bye
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_build_request
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_response_out_of_transaction
</UL>

<P><STRONG><a name="[1fb]"></a>_eXosip_build_response_default</STRONG> (Thumb, 450 bytes, Stack size 64 bytes, jresponse.o(i._eXosip_build_response_default))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = _eXosip_build_response_default &rArr; osip_from_clone &rArr; osip_uri_clone &rArr; osip_list_clone &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strdup
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_get_reason
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_status_code
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_header
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_add
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_next
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_first
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_via_clone
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_init
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_free
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_add
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_clone
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_cseq_clone
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_id_clone
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_get_byname
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_malloc_new_random
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_message_send_answer
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_message_build_answer
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_build_answer
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_answer_invite_123456xx
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_send_default_answer
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_new_invite
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_cancel
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_bye
</UL>

<P><STRONG><a name="[304]"></a>_eXosip_call_dialog_find</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, jdialog.o(i._eXosip_call_dialog_find))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _eXosip_call_dialog_find
</UL>
<BR>[Called By]<UL><LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_terminate_with_header
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_send_request
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_build_request
</UL>

<P><STRONG><a name="[306]"></a>_eXosip_call_find</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, jcall.o(i._eXosip_call_find))
<BR><BR>[Called By]<UL><LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_terminate_with_header
</UL>

<P><STRONG><a name="[210]"></a>_eXosip_call_free</STRONG> (Thumb, 228 bytes, Stack size 16 bytes, jcall.o(i._eXosip_call_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _eXosip_call_free &rArr; _eXosip_dialog_free &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_add
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_dialog_free
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_delete_reserved
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_delete_nonce
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_quit
</UL>

<P><STRONG><a name="[214]"></a>_eXosip_call_init</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, jcall.o(i._eXosip_call_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _eXosip_call_init &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_new_invite
</UL>

<P><STRONG><a name="[215]"></a>_eXosip_call_renew_expire_time</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, jcall.o(i._eXosip_call_renew_expire_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _eXosip_call_renew_expire_time &rArr; osip_getsystemtime &rArr; osip_gettimeofday
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_getsystemtime
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv1xx
</UL>

<P><STRONG><a name="[216]"></a>_eXosip_call_retry_request</STRONG> (Thumb, 1448 bytes, Stack size 104 bytes, excall_api.o(i._eXosip_call_retry_request))
<BR><BR>[Stack]<UL><LI>Max Depth = 3036<LI>Call Chain = _eXosip_call_retry_request &rArr; _eXosip_add_authentication_information &rArr; _eXosip_create_proxy_authorization_header &rArr; DigestCalcResponseAka &rArr; f1 &rArr; ComputeOPc &rArr; RijndaelEncrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strdup
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_header
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_header_get_byname
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_free
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_disposition_parse
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_info_to_str
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_info_init
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_info_free
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_add_event
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_clone
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_remove
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_next
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_first
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_clone
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_free
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_add
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_get_byname
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_get_knownheaderlist
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_header_clone
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_set_reserved3
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_set_reserved2
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_new_outgoing_sipmessage
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_special_free
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_free
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strcasestr
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_force_update
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_wakeup
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_update_top_via
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_update
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_transaction_init
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_strdup_printf
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_dialog_free
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_add_authentication_information
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_automatic_action
</UL>

<P><STRONG><a name="[224]"></a>_eXosip_call_transaction_find</STRONG> (Thumb, 220 bytes, Stack size 48 bytes, excall_api.o(i._eXosip_call_transaction_find))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _eXosip_call_transaction_find
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_next
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_first
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_send_answer
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_build_answer
</UL>

<P><STRONG><a name="[225]"></a>_eXosip_check_allow_header</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, exosip.o(i._eXosip_check_allow_header))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _eXosip_check_allow_header &rArr; osip_strcasestr &rArr; strncasecmp
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_next
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_first
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strcasestr
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
</UL>
<BR>[Called By]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv2xx_4invite
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv2xx
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv1xx
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_new_invite
</UL>

<P><STRONG><a name="[226]"></a>_eXosip_closesocket</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, exutils.o(i._eXosip_closesocket))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = _eXosip_closesocket &rArr; lwip_close &rArr; free_socket &rArr; free_socket_free_elements &rArr; netconn_delete &rArr; netconn_prepare_delete &rArr; netconn_apimsg &rArr; tcpip_send_msg_wait_sem &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_close
</UL>
<BR>[Called By]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_default_gateway_ipv6sock
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_default_gateway_ipv6
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_default_gateway_ipv4sock
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_default_gateway_ipv4
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_free
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_tl_reset_oc
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_tl_reset
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_tl_open_oc
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_tl_open
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_open
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_free
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_new_socket
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_close_sockinfo
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_read_tcp_main_socket
</UL>

<P><STRONG><a name="[1fc]"></a>_eXosip_complete_answer_that_establish_a_dialog</STRONG> (Thumb, 644 bytes, Stack size 1672 bytes, jresponse.o(i._eXosip_complete_answer_that_establish_a_dialog))
<BR><BR>[Stack]<UL><LI>Max Depth = 2096<LI>Call Chain = _eXosip_complete_answer_that_establish_a_dialog &rArr; osip_message_set_contact &rArr; osip_contact_parse &rArr; osip_from_parse &rArr; osip_uri_parse &rArr; osip_uri_parse_headers &rArr; __osip_uri_unescape &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strdup
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_contact
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_next
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_first
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_add
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_clone
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_get_knownheaderlist
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_uri_escape_userinfo
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_build_answer
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_answer_invite_123456xx
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_new_invite
</UL>

<P><STRONG><a name="[1f4]"></a>_eXosip_create_proxy_authorization_header</STRONG> (Thumb, 1422 bytes, Stack size 408 bytes, jauth.o(i._eXosip_create_proxy_authorization_header))
<BR><BR>[Stack]<UL><LI>Max Depth = 2788<LI>Call Chain = _eXosip_create_proxy_authorization_header &rArr; DigestCalcResponseAka &rArr; f1 &rArr; ComputeOPc &rArr; RijndaelEncrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strdup
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_authorization_set_uri
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_authorization_set_response
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_authorization_set_realm
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_authorization_set_opaque
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_authorization_set_nonce_count
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_authorization_set_nonce
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_authorization_set_message_qop
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_authorization_set_cnonce
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_authorization_set_auth_type
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_authorization_set_algorithm
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_authorization_init
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_authorization_get_realm
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_authorization_free
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_www_authenticate_get_realm
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_www_authenticate_get_qop_options
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_www_authenticate_get_opaque
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_www_authenticate_get_nonce
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strdup_without_quote
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DigestCalcResponseAka
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DigestCalcResponse
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DigestCalcHA1
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_add_authentication_information
</UL>

<P><STRONG><a name="[211]"></a>_eXosip_delete_nonce</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, jauth.o(i._eXosip_delete_nonce))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _eXosip_delete_nonce &rArr; strcasecmp
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_www_authenticate_free
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_reg_free
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_free
</UL>

<P><STRONG><a name="[213]"></a>_eXosip_delete_reserved</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, jcallback.o(i._eXosip_delete_reserved))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _eXosip_delete_reserved
</UL>
<BR>[Calls]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_set_reserved5
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_set_reserved4
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_set_reserved3
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_set_reserved2
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_transaction_free
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_reg_free
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_dialog_free
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_free
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_register_build_register
</UL>

<P><STRONG><a name="[20c]"></a>_eXosip_dialog_add_contact</STRONG> (Thumb, 530 bytes, Stack size 48 bytes, jrequest.o(i._eXosip_dialog_add_contact))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = _eXosip_dialog_add_contact &rArr; osip_message_set_contact &rArr; osip_contact_parse &rArr; osip_from_parse &rArr; osip_uri_parse &rArr; osip_uri_parse_headers &rArr; __osip_uri_unescape &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strdup
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_contact
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_get_knownheaderlist
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_uri_escape_userinfo
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_build_request_within_dialog
</UL>

<P><STRONG><a name="[212]"></a>_eXosip_dialog_free</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, jdialog.o(i._eXosip_dialog_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _eXosip_dialog_free &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_remove
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_free
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_eol
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_add
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_dialog_free
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_update
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_delete_reserved
</UL>
<BR>[Called By]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_free
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_retry_request
</UL>

<P><STRONG><a name="[24c]"></a>_eXosip_dialog_init_as_uac</STRONG> (Thumb, 214 bytes, Stack size 24 bytes, jdialog.o(i._eXosip_dialog_init_as_uac))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = _eXosip_dialog_init_as_uac &rArr; osip_dialog_init_as_uac_with_remote_request &rArr; __osip_dialog_init &rArr; osip_from_clone &rArr; osip_uri_clone &rArr; osip_list_clone &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_init
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_getsystemtime
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_dialog_init_as_uac_with_remote_request
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_dialog_init_as_uac
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_dialog_free
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv2xx_4invite
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv1xx
</UL>

<P><STRONG><a name="[24f]"></a>_eXosip_dialog_init_as_uas</STRONG> (Thumb, 206 bytes, Stack size 24 bytes, jdialog.o(i._eXosip_dialog_init_as_uas))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = _eXosip_dialog_init_as_uas &rArr; osip_dialog_init_as_uas &rArr; __osip_dialog_init &rArr; osip_from_clone &rArr; osip_uri_clone &rArr; osip_list_clone &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_init
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_getsystemtime
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_dialog_init_as_uas
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_dialog_free
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_new_invite
</UL>

<P><STRONG><a name="[1fe]"></a>_eXosip_dialog_set_200ok</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, jdialog.o(i._eXosip_dialog_set_200ok))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = _eXosip_dialog_set_200ok &rArr; osip_message_clone &rArr; osip_from_clone &rArr; osip_uri_clone &rArr; osip_list_clone &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_clone
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_getsystemtime
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_free
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_send_answer
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_answer_invite_123456xx
</UL>

<P><STRONG><a name="[251]"></a>_eXosip_event_add</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, jevents.o(i._eXosip_event_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _eXosip_event_add &rArr; osip_fifo_add &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_fifo_add
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_wakeup_event
</UL>
<BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_report_event
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcvrequest
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcvregister
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv1xx
</UL>

<P><STRONG><a name="[255]"></a>_eXosip_event_init</STRONG> (Thumb, 1690 bytes, Stack size 16 bytes, jevents.o(i._eXosip_event_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _eXosip_event_init &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_event_init_for_call
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_event_init_for_reg
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_event_init_for_message
</UL>

<P><STRONG><a name="[256]"></a>_eXosip_event_init_for_call</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, jevents.o(i._eXosip_event_init_for_call))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = _eXosip_event_init_for_call &rArr; _eXosip_event_fill_messages &rArr; osip_message_clone &rArr; osip_from_clone &rArr; osip_uri_clone &rArr; osip_list_clone &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_event_init
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_event_fill_messages
</UL>
<BR>[Called By]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_report_call_event
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_ack
</UL>

<P><STRONG><a name="[257]"></a>_eXosip_event_init_for_message</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, jevents.o(i._eXosip_event_init_for_message))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = _eXosip_event_init_for_message &rArr; _eXosip_event_fill_messages &rArr; osip_message_clone &rArr; osip_from_clone &rArr; osip_uri_clone &rArr; osip_list_clone &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_event_init
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_event_fill_messages
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcvrequest
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcvregister
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv3456xx
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv2xx
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv1xx
</UL>

<P><STRONG><a name="[258]"></a>_eXosip_event_init_for_reg</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, jevents.o(i._eXosip_event_init_for_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = _eXosip_event_init_for_reg &rArr; _eXosip_event_fill_messages &rArr; osip_message_clone &rArr; osip_from_clone &rArr; osip_uri_clone &rArr; osip_list_clone &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_event_init
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_event_fill_messages
</UL>
<BR>[Called By]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcvregister_failure
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv2xx
</UL>

<P><STRONG><a name="[1fa]"></a>_eXosip_find_last_inc_invite</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, misc.o(i._eXosip_find_last_inc_invite))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _eXosip_find_last_inc_invite &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_next
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_first
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_find_last_invite
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_answer_invite_123456xx
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_terminate_with_header
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_newrequest
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_ack
</UL>

<P><STRONG><a name="[259]"></a>_eXosip_find_last_inc_transaction</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, misc.o(i._eXosip_find_last_inc_transaction))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _eXosip_find_last_inc_transaction &rArr; strcasecmp
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_next
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_first
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
</UL>
<BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_find_last_transaction
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_newrequest
</UL>

<P><STRONG><a name="[25a]"></a>_eXosip_find_last_invite</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, misc.o(i._eXosip_find_last_invite))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _eXosip_find_last_invite &rArr; _eXosip_find_last_out_invite &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_find_last_out_invite
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_find_last_inc_invite
</UL>
<BR>[Called By]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_send_request
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_build_request
</UL>

<P><STRONG><a name="[25b]"></a>_eXosip_find_last_out_invite</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, misc.o(i._eXosip_find_last_out_invite))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _eXosip_find_last_out_invite &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_next
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_first
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_find_last_invite
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_terminate_with_header
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_newrequest
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_match_update_for_invite
</UL>

<P><STRONG><a name="[25c]"></a>_eXosip_find_last_out_transaction</STRONG> (Thumb, 82 bytes, Stack size 40 bytes, misc.o(i._eXosip_find_last_out_transaction))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _eXosip_find_last_out_transaction &rArr; strcasecmp
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_next
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_first
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
</UL>
<BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_find_last_transaction
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_newrequest
</UL>

<P><STRONG><a name="[25d]"></a>_eXosip_find_last_transaction</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, misc.o(i._eXosip_find_last_transaction))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _eXosip_find_last_transaction &rArr; _eXosip_find_last_out_transaction &rArr; strcasecmp
</UL>
<BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_find_last_out_transaction
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_find_last_inc_transaction
</UL>
<BR>[Called By]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_send_request
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_build_request
</UL>

<P><STRONG><a name="[25e]"></a>_eXosip_freeaddrinfo</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, exutils.o(i._eXosip_freeaddrinfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = _eXosip_freeaddrinfo &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_set_option
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_send_message
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_tl_open_oc
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_tl_open
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_open
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_new_socket
</UL>

<P><STRONG><a name="[25f]"></a>_eXosip_generating_bye</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, jrequest.o(i._eXosip_generating_bye))
<BR><BR>[Stack]<UL><LI>Max Depth = 536<LI>Call Chain = _eXosip_generating_bye &rArr; _eXosip_build_request_within_dialog &rArr; _eXosip_dialog_add_contact &rArr; osip_message_set_contact &rArr; osip_contact_parse &rArr; osip_from_parse &rArr; osip_uri_parse &rArr; osip_uri_parse_headers &rArr; __osip_uri_unescape &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_build_request_within_dialog
</UL>
<BR>[Called By]<UL><LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_terminate_with_header
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_response_out_of_transaction
</UL>

<P><STRONG><a name="[260]"></a>_eXosip_generating_cancel</STRONG> (Thumb, 440 bytes, Stack size 48 bytes, jrequest.o(i._eXosip_generating_cancel))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = _eXosip_generating_cancel &rArr; osip_from_clone &rArr; osip_uri_clone &rArr; osip_list_clone &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strdup
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_version
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_status_code
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_reason_phrase
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_method
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_header
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_next
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_first
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_via_clone
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_clone
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_init
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_free
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_add
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_clone
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_cseq_clone
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_id_clone
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_get_knownheaderlist
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_terminate_with_header
</UL>

<P><STRONG><a name="[265]"></a>_eXosip_generating_request_out_of_dialog</STRONG> (Thumb, 1940 bytes, Stack size 72 bytes, jrequest.o(i._eXosip_generating_request_out_of_dialog))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = _eXosip_generating_request_out_of_dialog &rArr; _eXosip_request_add_via &rArr; osip_message_set_via &rArr; osip_via_parse &rArr; __osip_generic_param_parseall &rArr; osip_uri_param_add &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strdup
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_version
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_status_code
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_reason_phrase
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_method
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_header
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_parse
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_add
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_init
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_from
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_cseq_set_number
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_cseq_set_method
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_cseq_init
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_content_type
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_parse
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_init
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_call_info
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_id_set_number
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_id_init
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_remove
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_iterator_remove
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_next
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_first
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_clone
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_init
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_free
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_size
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_add
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_get_byname
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_free
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_free
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_to
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_route
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_request_add_via
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_malloc_new_random
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_register
</UL>

<P><STRONG><a name="[26e]"></a>_eXosip_get_addrinfo</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, exutils.o(i._eXosip_get_addrinfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = _eXosip_get_addrinfo &rArr; osip_ip2addr &rArr; osip_he2ai &rArr; calloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_ip2addr
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_he2ai
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_inet_pton
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_gethostbyname
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_set_option
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_send_message
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_tl_open_oc
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_tl_open
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_open
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_new_socket
</UL>

<P><STRONG><a name="[273]"></a>_eXosip_getnameinfo</STRONG> (Thumb, 70 bytes, Stack size 48 bytes, exutils.o(i._eXosip_getnameinfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + In Cycle
<LI>Call Chain = _eXosip_getnameinfo &rArr;  _eXosip_getnameinfo (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_getnameinfo
</UL>
<BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_read_udp_oc_socket
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_read_udp_main_socket
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_getnameinfo
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_new_socket
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_read_tcp_main_socket
</UL>

<P><STRONG><a name="[274]"></a>_eXosip_getport</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, exutils.o(i._eXosip_getport))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _eXosip_getport
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
</UL>
<BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_read_udp_oc_socket
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_read_udp_main_socket
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_read_tcp_main_socket
</UL>

<P><STRONG><a name="[275]"></a>_eXosip_guess_ip_for_destination</STRONG> (Thumb, 52 bytes, Stack size 32 bytes, exutils.o(i._eXosip_guess_ip_for_destination))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = _eXosip_guess_ip_for_destination &rArr; _eXosip_default_gateway_ipv6 &rArr; _eXosip_closesocket &rArr; lwip_close &rArr; free_socket &rArr; free_socket_free_elements &rArr; netconn_delete &rArr; netconn_prepare_delete &rArr; netconn_apimsg &rArr; tcpip_send_msg_wait_sem &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_default_gateway_ipv6
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_default_gateway_ipv4
</UL>
<BR>[Called By]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_guess_ip_for_via
</UL>

<P><STRONG><a name="[276]"></a>_eXosip_guess_ip_for_destinationsock</STRONG> (Thumb, 66 bytes, Stack size 48 bytes, exutils.o(i._eXosip_guess_ip_for_destinationsock))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = _eXosip_guess_ip_for_destinationsock &rArr; _eXosip_default_gateway_ipv6sock &rArr; _eXosip_closesocket &rArr; lwip_close &rArr; free_socket &rArr; free_socket_free_elements &rArr; netconn_delete &rArr; netconn_prepare_delete &rArr; netconn_apimsg &rArr; tcpip_send_msg_wait_sem &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_default_gateway_ipv6sock
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_default_gateway_ipv4sock
</UL>
<BR>[Called By]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_request_viamanager
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_message_contactmanager
</UL>

<P><STRONG><a name="[277]"></a>_eXosip_guess_ip_for_via</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, exutils.o(i._eXosip_guess_ip_for_via))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = _eXosip_guess_ip_for_via &rArr; _eXosip_guess_ip_for_destination &rArr; _eXosip_default_gateway_ipv6 &rArr; _eXosip_closesocket &rArr; lwip_close &rArr; free_socket &rArr; free_socket_free_elements &rArr; netconn_delete &rArr; netconn_prepare_delete &rArr; netconn_apimsg &rArr; tcpip_send_msg_wait_sem &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_guess_ip_for_destination
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_guess_localip
</UL>

<P><STRONG><a name="[278]"></a>_eXosip_handle_incoming_message</STRONG> (Thumb, 456 bytes, Stack size 40 bytes, udp_1.o(i._eXosip_handle_incoming_message))
<BR><BR>[Stack]<UL><LI>Max Depth = 2256<LI>Call Chain = _eXosip_handle_incoming_message &rArr; _eXosip_process_newrequest &rArr; _eXosip_process_new_invite &rArr; _eXosip_complete_answer_that_establish_a_dialog &rArr; osip_message_set_contact &rArr; osip_contact_parse &rArr; osip_from_parse &rArr; osip_uri_parse &rArr; osip_uri_parse_headers &rArr; __osip_uri_unescape &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_fix_last_via_header
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_find_transaction_and_add_event
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_init
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_free
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_parse
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_learn_port_from_via
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_response_out_of_transaction
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_newrequest
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_handle_rfc5626_ob
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_handle_received_rport
</UL>
<BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_read_udp_oc_socket
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_read_udp_main_socket
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_messages
</UL>

<P><STRONG><a name="[20f]"></a>_eXosip_malloc_new_random</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, jrequest.o(i._eXosip_malloc_new_random))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _eXosip_malloc_new_random &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_build_random_number
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_request_out_of_dialog
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_build_response_default
</UL>

<P><STRONG><a name="[284]"></a>_eXosip_mark_all_transaction_force_send</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, exosip.o(i._eXosip_mark_all_transaction_force_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _eXosip_mark_all_transaction_force_send &rArr; osip_gettimeofday
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_next
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_first
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_gettimeofday
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_gettimeofday
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_read_message
</UL>

<P><STRONG><a name="[285]"></a>_eXosip_mark_all_transaction_transport_error</STRONG> (Thumb, 172 bytes, Stack size 32 bytes, exosip.o(i._eXosip_mark_all_transaction_transport_error))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _eXosip_mark_all_transaction_transport_error &rArr; osip_gettimeofday
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_next
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_first
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_gettimeofday
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_gettimeofday
</UL>
<BR>[Called By]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_close_sockinfo
</UL>

<P><STRONG><a name="[286]"></a>_eXosip_mark_registration_expired</STRONG> (Thumb, 280 bytes, Stack size 32 bytes, exosip.o(i._eXosip_mark_registration_expired))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _eXosip_mark_registration_expired &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_header_get_byname
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_getsystemtime
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_wakeup
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_send_message
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_check_connection
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_read_udp_main_socket
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_set_fdset
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_send_message
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_read_message
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_keepalive
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_check_connection
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_check_all_connection
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_recv
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_read_tcp_main_socket
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcvregister_failure
</UL>

<P><STRONG><a name="[288]"></a>_eXosip_message_contactmanager</STRONG> (Thumb, 392 bytes, Stack size 200 bytes, jrequest.o(i._eXosip_message_contactmanager))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = _eXosip_message_contactmanager &rArr; _eXosip_guess_ip_for_destinationsock &rArr; _eXosip_default_gateway_ipv6sock &rArr; _eXosip_closesocket &rArr; lwip_close &rArr; free_socket &rArr; free_socket_free_elements &rArr; netconn_delete &rArr; netconn_prepare_delete &rArr; netconn_apimsg &rArr; tcpip_send_msg_wait_sem &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strdup
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_force_update
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_guess_ip_for_destinationsock
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_send_message
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_build_message
</UL>

<P><STRONG><a name="[2f4]"></a>_eXosip_reg_find</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, jreg.o(i._eXosip_reg_find))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _eXosip_reg_find
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_send_message
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcvregister_failure
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv2xx
</UL>

<P><STRONG><a name="[29a]"></a>_eXosip_reg_free</STRONG> (Thumb, 188 bytes, Stack size 16 bytes, jreg.o(i._eXosip_reg_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _eXosip_reg_free &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_add
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_delete_reserved
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_delete_nonce
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_quit
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_register_build_initial_register_withqvalue
</UL>

<P><STRONG><a name="[29b]"></a>_eXosip_reg_init</STRONG> (Thumb, 470 bytes, Stack size 416 bytes, jreg.o(i._eXosip_reg_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 896<LI>Call Chain = _eXosip_reg_init &rArr; eXosip_guess_localip &rArr; _eXosip_guess_ip_for_via &rArr; _eXosip_guess_ip_for_destination &rArr; _eXosip_default_gateway_ipv6 &rArr; _eXosip_closesocket &rArr; lwip_close &rArr; free_socket &rArr; free_socket_free_elements &rArr; netconn_delete &rArr; netconn_prepare_delete &rArr; netconn_apimsg &rArr; tcpip_send_msg_wait_sem &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strdup
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_MD5Update
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_MD5Init
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_MD5Final
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strncpy
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_guess_localip
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_generate_random
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CvtHex
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_register_build_initial_register_withqvalue
</UL>

<P><STRONG><a name="[28e]"></a>_eXosip_report_call_event</STRONG> (Thumb, 42 bytes, Stack size 32 bytes, jevents.o(i._eXosip_report_call_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = _eXosip_report_call_event &rArr; _eXosip_event_init_for_call &rArr; _eXosip_event_fill_messages &rArr; osip_message_clone &rArr; osip_from_clone &rArr; osip_uri_clone &rArr; osip_list_clone &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_event_init_for_call
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_report_event
</UL>
<BR>[Called By]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_retransmit_lost200ok
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_transport_error
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_snd123456xx
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcvrequest
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcvcancel
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv3456xx
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv2xx_4invite
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv2xx
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv1xx
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_reinvite
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_new_invite
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_bye
</UL>

<P><STRONG><a name="[28a]"></a>_eXosip_report_event</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, jevents.o(i._eXosip_report_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _eXosip_report_event &rArr; _eXosip_event_add &rArr; osip_fifo_add &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_event_add
</UL>
<BR>[Called By]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_report_call_event
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcvregister_failure
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv3456xx
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv2xx
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_ack
</UL>

<P><STRONG><a name="[20b]"></a>_eXosip_request_add_via</STRONG> (Thumb, 110 bytes, Stack size 224 bytes, jrequest.o(i._eXosip_request_add_via))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = _eXosip_request_add_via &rArr; osip_message_set_via &rArr; osip_via_parse &rArr; __osip_generic_param_parseall &rArr; osip_uri_param_add &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_build_random_number
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_via
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_request_out_of_dialog
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_build_request_within_dialog
</UL>

<P><STRONG><a name="[2a0]"></a>_eXosip_request_viamanager</STRONG> (Thumb, 346 bytes, Stack size 136 bytes, jrequest.o(i._eXosip_request_viamanager))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = _eXosip_request_viamanager &rArr; _eXosip_guess_ip_for_destinationsock &rArr; _eXosip_default_gateway_ipv6sock &rArr; _eXosip_closesocket &rArr; lwip_close &rArr; free_socket &rArr; free_socket_free_elements &rArr; netconn_delete &rArr; netconn_prepare_delete &rArr; netconn_apimsg &rArr; tcpip_send_msg_wait_sem &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strdup
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_force_update
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_guess_ip_for_destinationsock
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_send_message
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_build_message
</UL>

<P><STRONG><a name="[2a1]"></a>_eXosip_retransmit_lost200ok</STRONG> (Thumb, 208 bytes, Stack size 32 bytes, exosip.o(i._eXosip_retransmit_lost200ok))
<BR><BR>[Stack]<UL><LI>Max Depth = 3036<LI>Call Chain = _eXosip_retransmit_lost200ok &rArr; eXosip_call_terminate &rArr; eXosip_call_terminate_with_header &rArr; _eXosip_add_authentication_information &rArr; _eXosip_create_proxy_authorization_header &rArr; DigestCalcResponseAka &rArr; f1 &rArr; ComputeOPc &rArr; RijndaelEncrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_getsystemtime
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_free
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_snd_message
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_terminate
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_report_call_event
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_event_wait
</UL>

<P><STRONG><a name="[2a4]"></a>_eXosip_set_callbacks</STRONG> (Thumb, 416 bytes, Stack size 8 bytes, jcallback.o(i._eXosip_set_callbacks))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _eXosip_set_callbacks
</UL>
<BR>[Calls]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_set_transport_error_callback
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_set_message_callback
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_set_kill_transaction_callback
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_set_cb_send_message
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_init
</UL>

<P><STRONG><a name="[299]"></a>_eXosip_snd_message</STRONG> (Thumb, 448 bytes, Stack size 56 bytes, jcallback.o(i._eXosip_snd_message))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _eXosip_snd_message &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_get_byname
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_get_knownheaderlist
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Called By]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_retransmit_lost200ok
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_snd_message
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_response_out_of_transaction
</UL>

<P><STRONG><a name="[2a9]"></a>_eXosip_srv_lookup</STRONG> (Thumb, 398 bytes, Stack size 48 bytes, exutils.o(i._eXosip_srv_lookup))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _eXosip_srv_lookup &rArr; ipaddr_addr &rArr; ip4addr_aton &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipaddr_addr
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_get_byname
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_get_knownheaderlist
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_dnsutils_naptr
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
</UL>
<BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_transaction_init
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tl_resolv_naptr_destination
</UL>

<P><STRONG><a name="[1f7]"></a>_eXosip_store_nonce</STRONG> (Thumb, 234 bytes, Stack size 32 bytes, jauth.o(i._eXosip_store_nonce))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _eXosip_store_nonce &rArr; osip_www_authenticate_clone &rArr; osip_strdup &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_www_authenticate_free
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_www_authenticate_clone
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_add_authentication_information
</UL>

<P><STRONG><a name="[21b]"></a>_eXosip_strdup_printf</STRONG> (Thumb, 84 bytes, Stack size 40 bytes, exutils.o(i._eXosip_strdup_printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _eXosip_strdup_printf &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realloc
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_retry_request
</UL>

<P><STRONG><a name="[2ac]"></a>_eXosip_transaction_find</STRONG> (Thumb, 56 bytes, Stack size 40 bytes, exosip.o(i._eXosip_transaction_find))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _eXosip_transaction_find
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_next
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_first
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_message_send_answer
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_message_build_answer
</UL>

<P><STRONG><a name="[283]"></a>_eXosip_transaction_free</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, exosip.o(i._eXosip_transaction_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = _eXosip_transaction_free &rArr; osip_transaction_free &rArr; osip_transaction_free2 &rArr; osip_message_free &rArr; osip_from_free &rArr; osip_uri_free &rArr; osip_uri_param_freelist &rArr; osip_list_remove &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_free
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_dnsutils_release
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_delete_reserved
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_quit
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_kill_transaction
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_newrequest
</UL>

<P><STRONG><a name="[220]"></a>_eXosip_transaction_init</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, exosip.o(i._eXosip_transaction_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = _eXosip_transaction_init &rArr; osip_transaction_init &rArr; __osip_transaction_set_to &rArr; osip_from_clone &rArr; osip_uri_clone &rArr; osip_list_clone &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_init
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_set_reserved1
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_set_naptr_record
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_srv_lookup
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_register_send_register
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_send_request
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_retry_request
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_create_transaction
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_create_cancel_transaction
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_newrequest
</UL>

<P><STRONG><a name="[2b2]"></a>_eXosip_transport_set_dscp</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, extl_udp.o(i._eXosip_transport_set_dscp))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = _eXosip_transport_set_dscp &rArr; lwip_setsockopt &rArr; lwip_setsockopt_impl &rArr; netif_find &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_setsockopt
</UL>
<BR>[Called By]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_tl_open_oc
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_tl_open
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_new_socket
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_read_tcp_main_socket
</UL>

<P><STRONG><a name="[223]"></a>_eXosip_update</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, exosip.o(i._eXosip_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _eXosip_update
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_send_answer
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_dialog_free
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_terminate_with_header
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_retry_request
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv2xx_4invite
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv1xx
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_delete_early_dialog
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_new_invite
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_bye
</UL>

<P><STRONG><a name="[21c]"></a>_eXosip_update_top_via</STRONG> (Thumb, 142 bytes, Stack size 64 bytes, exosip.o(i._eXosip_update_top_via))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _eXosip_update_top_via &rArr; osip_strdup &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strdup
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_get_byname
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_build_random_number
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_retry_request
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_register_build_register
</UL>

<P><STRONG><a name="[201]"></a>_eXosip_wakeup</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, exosip.o(i._eXosip_wakeup))
<BR><BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_register_send_register
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_quit
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_message_send_answer
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_send_answer
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_answer_invite_123456xx
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_send_request
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_retry_request
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_create_transaction
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_create_cancel_transaction
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_mark_registration_expired
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_send_default_answer
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_newrequest
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_new_invite
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_message_within_dialog
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_cancel
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_bye
</UL>

<P><STRONG><a name="[2cf]"></a>_tcptls_tl_is_connected</STRONG> (Thumb, 272 bytes, Stack size 48 bytes, extl_tcp.o(i._tcptls_tl_is_connected))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = _tcptls_tl_is_connected &rArr; lwip_select &rArr; sys_sem_new &rArr; xQueueCreateCountingSemaphore &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_select
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getsockopt
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_send_message
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_read_message
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_keepalive
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_check_connection
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_new_socket
</UL>

<P><STRONG><a name="[2da]"></a>_tl_resolv_naptr_destination</STRONG> (Thumb, 684 bytes, Stack size 56 bytes, extl_tcp.o(i._tl_resolv_naptr_destination))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _tl_resolv_naptr_destination &rArr; _eXosip_srv_lookup &rArr; ipaddr_addr &rArr; ip4addr_aton &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_dnsutils_rotate_srv
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_dnsutils_dns_process
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_srv_lookup
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_send_message
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_send_message
</UL>

<P><STRONG><a name="[1b2]"></a>add_gettimeofday</STRONG> (Thumb, 66 bytes, Stack size 12 bytes, osip_time.o(i.add_gettimeofday))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = add_gettimeofday
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nist_snd_23456xx
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_nict_timeout_e_event
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nict_snd_request
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nict_rcv_23456xx
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nict_rcv_1xx
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_nict_init
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_ist_timeout_g_event
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ist_snd_3456xx
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ist_rcv_ack
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_ict_timeout_a_event
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ict_rcv_3456xx
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_ict_init
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_mark_all_transaction_transport_error
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_mark_all_transaction_force_send
</UL>

<P><STRONG><a name="[413]"></a>cm_backtrace_call_stack</STRONG> (Thumb, 272 bytes, Stack size 28 bytes, cm_backtrace.o(i.cm_backtrace_call_stack))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = cm_backtrace_call_stack
</UL>
<BR>[Called By]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_call_stack
</UL>

<P><STRONG><a name="[ff]"></a>cm_backtrace_fault</STRONG> (Thumb, 414 bytes, Stack size 80 bytes, cm_backtrace.o(i.cm_backtrace_fault))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = cm_backtrace_fault &rArr; print_call_stack &rArr; cm_backtrace_call_stack
</UL>
<BR>[Calls]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;statck_del_fpu_regs
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_call_stack
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fault_diagnosis
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dump_stack
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cm_backtrace_firmware_info
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>

<P><STRONG><a name="[2f9]"></a>cm_backtrace_firmware_info</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, cm_backtrace.o(i.cm_backtrace_firmware_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = cm_backtrace_firmware_info &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cm_backtrace_fault
</UL>

<P><STRONG><a name="[13e]"></a>cm_backtrace_init</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, cm_backtrace.o(i.cm_backtrace_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = cm_backtrace_init &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[12a]"></a>eXosip_add_authentication_info</STRONG> (Thumb, 254 bytes, Stack size 32 bytes, exosip.o(i.eXosip_add_authentication_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = eXosip_add_authentication_info &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_remove_authentication_info
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskCreate
</UL>

<P><STRONG><a name="[12d]"></a>eXosip_automatic_action</STRONG> (Thumb, 1394 bytes, Stack size 72 bytes, exosip.o(i.eXosip_automatic_action))
<BR><BR>[Stack]<UL><LI>Max Depth = 3116<LI>Call Chain = eXosip_automatic_action &rArr; eXosip_register_send_register &rArr; _eXosip_register_build_register &rArr; _eXosip_add_authentication_information &rArr; _eXosip_create_proxy_authorization_header &rArr; DigestCalcResponseAka &rArr; f1 &rArr; ComputeOPc &rArr; RijndaelEncrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_register_send_register
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_header
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_getsystemtime
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_send_request
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_build_request
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_retry_request
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskCreate
</UL>

<P><STRONG><a name="[130]"></a>eXosip_call_build_answer</STRONG> (Thumb, 206 bytes, Stack size 48 bytes, excall_api.o(i.eXosip_call_build_answer))
<BR><BR>[Stack]<UL><LI>Max Depth = 2200<LI>Call Chain = eXosip_call_build_answer &rArr; _eXosip_answer_invite_123456xx &rArr; _eXosip_complete_answer_that_establish_a_dialog &rArr; osip_message_set_contact &rArr; osip_contact_parse &rArr; osip_from_parse &rArr; osip_uri_parse &rArr; osip_uri_parse_headers &rArr; __osip_uri_unescape &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_complete_answer_that_establish_a_dialog
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_build_response_default
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_answer_invite_123456xx
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_transaction_find
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskCreate
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_terminate_with_header
</UL>

<P><STRONG><a name="[302]"></a>eXosip_call_build_request</STRONG> (Thumb, 242 bytes, Stack size 40 bytes, excall_api.o(i.eXosip_call_build_request))
<BR><BR>[Stack]<UL><LI>Max Depth = 2972<LI>Call Chain = eXosip_call_build_request &rArr; _eXosip_add_authentication_information &rArr; _eXosip_create_proxy_authorization_header &rArr; DigestCalcResponseAka &rArr; f1 &rArr; ComputeOPc &rArr; RijndaelEncrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_find_last_transaction
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_find_last_invite
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_dialog_find
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_build_request_within_dialog
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_add_authentication_information
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_automatic_action
</UL>

<P><STRONG><a name="[133]"></a>eXosip_call_send_answer</STRONG> (Thumb, 1104 bytes, Stack size 64 bytes, excall_api.o(i.eXosip_call_send_answer))
<BR><BR>[Stack]<UL><LI>Max Depth = 2216<LI>Call Chain = eXosip_call_send_answer &rArr; _eXosip_answer_invite_123456xx &rArr; _eXosip_complete_answer_that_establish_a_dialog &rArr; osip_message_set_contact &rArr; osip_contact_parse &rArr; osip_from_parse &rArr; osip_uri_parse &rArr; osip_uri_parse_headers &rArr; __osip_uri_unescape &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strdup
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_header
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_header_get_byname
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_add
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_disposition_parse
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_info_to_str
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_info_init
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_info_free
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_add_event
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_getsystemtime
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_free
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_add
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_get_byname
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_header_free
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_header_clone
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_new_outgoing_sipmessage
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_dialog_set_state
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_wakeup
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_update
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_dialog_set_200ok
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_answer_invite_123456xx
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_transaction_find
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_header_strcasestr
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncasecmp
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskCreate
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_terminate_with_header
</UL>

<P><STRONG><a name="[303]"></a>eXosip_call_send_request</STRONG> (Thumb, 378 bytes, Stack size 40 bytes, excall_api.o(i.eXosip_call_send_request))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = eXosip_call_send_request &rArr; _eXosip_transaction_init &rArr; osip_transaction_init &rArr; __osip_transaction_set_to &rArr; osip_from_clone &rArr; osip_uri_clone &rArr; osip_list_clone &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_add_event
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_free
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_add
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_set_reserved3
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_set_reserved2
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_new_outgoing_sipmessage
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_wakeup
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_transaction_init
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_find_last_transaction
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_find_last_invite
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_dialog_find
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_automatic_action
</UL>

<P><STRONG><a name="[2a2]"></a>eXosip_call_terminate</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, excall_api.o(i.eXosip_call_terminate))
<BR><BR>[Stack]<UL><LI>Max Depth = 3004<LI>Call Chain = eXosip_call_terminate &rArr; eXosip_call_terminate_with_header &rArr; _eXosip_add_authentication_information &rArr; _eXosip_create_proxy_authorization_header &rArr; DigestCalcResponseAka &rArr; f1 &rArr; ComputeOPc &rArr; RijndaelEncrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_terminate_with_header
</UL>
<BR>[Called By]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_retransmit_lost200ok
</UL>

<P><STRONG><a name="[305]"></a>eXosip_call_terminate_with_header</STRONG> (Thumb, 464 bytes, Stack size 48 bytes, excall_api.o(i.eXosip_call_terminate_with_header))
<BR><BR>[Stack]<UL><LI>Max Depth = 2980<LI>Call Chain = eXosip_call_terminate_with_header &rArr; _eXosip_add_authentication_information &rArr; _eXosip_create_proxy_authorization_header &rArr; DigestCalcResponseAka &rArr; f1 &rArr; ComputeOPc &rArr; RijndaelEncrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_send_answer
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_build_answer
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_header
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_get_byname
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_dialog_free
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_update
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_cancel
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_bye
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_find_last_out_invite
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_find_last_inc_invite
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_find
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_dialog_find
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_add_authentication_information
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_create_transaction
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_create_cancel_transaction
</UL>
<BR>[Called By]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_terminate
</UL>

<P><STRONG><a name="[2db]"></a>eXosip_dnsutils_dns_process</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, exutils.o(i.eXosip_dnsutils_dns_process))
<BR><BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tl_resolv_naptr_destination
</UL>

<P><STRONG><a name="[2aa]"></a>eXosip_dnsutils_naptr</STRONG> (Thumb, 10 bytes, Stack size 12 bytes, exutils.o(i.eXosip_dnsutils_naptr))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = eXosip_dnsutils_naptr
</UL>
<BR>[Called By]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_srv_lookup
</UL>

<P><STRONG><a name="[2ad]"></a>eXosip_dnsutils_release</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, exutils.o(i.eXosip_dnsutils_release))
<BR><BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_transaction_free
</UL>

<P><STRONG><a name="[2dc]"></a>eXosip_dnsutils_rotate_srv</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, exutils.o(i.eXosip_dnsutils_rotate_srv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = eXosip_dnsutils_rotate_srv
</UL>
<BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tl_resolv_naptr_destination
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_transport_error
</UL>

<P><STRONG><a name="[134]"></a>eXosip_event_free</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, jevents.o(i.eXosip_event_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = eXosip_event_free &rArr; osip_message_free &rArr; osip_from_free &rArr; osip_uri_free &rArr; osip_uri_param_freelist &rArr; osip_list_remove &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_free
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_quit
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskCreate
</UL>

<P><STRONG><a name="[135]"></a>eXosip_event_wait</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, jevents.o(i.eXosip_event_wait))
<BR><BR>[Stack]<UL><LI>Max Depth = 3060<LI>Call Chain = eXosip_event_wait &rArr; _eXosip_retransmit_lost200ok &rArr; eXosip_call_terminate &rArr; eXosip_call_terminate_with_header &rArr; _eXosip_add_authentication_information &rArr; _eXosip_create_proxy_authorization_header &rArr; DigestCalcResponseAka &rArr; f1 &rArr; ComputeOPc &rArr; RijndaelEncrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_fifo_tryget
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_unlock
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_lock
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_retransmit_lost200ok
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskCreate
</UL>

<P><STRONG><a name="[29c]"></a>eXosip_generate_random</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, jrequest.o(i.eXosip_generate_random))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = eXosip_generate_random &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_build_random_number
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_reg_init
</UL>

<P><STRONG><a name="[29d]"></a>eXosip_guess_localip</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, exconf.o(i.eXosip_guess_localip))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = eXosip_guess_localip &rArr; _eXosip_guess_ip_for_via &rArr; _eXosip_guess_ip_for_destination &rArr; _eXosip_default_gateway_ipv6 &rArr; _eXosip_closesocket &rArr; lwip_close &rArr; free_socket &rArr; free_socket_free_elements &rArr; netconn_delete &rArr; netconn_prepare_delete &rArr; netconn_apimsg &rArr; tcpip_send_msg_wait_sem &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_guess_ip_for_via
</UL>
<BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_reg_init
</UL>

<P><STRONG><a name="[125]"></a>eXosip_init</STRONG> (Thumb, 334 bytes, Stack size 16 bytes, exconf.o(i.eXosip_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = eXosip_init &rArr; osip_strdup &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strdup
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_init
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_set_application_context
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_init
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_fifo_init
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_set_callbacks
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskCreate
</UL>

<P><STRONG><a name="[126]"></a>eXosip_listen_addr</STRONG> (Thumb, 264 bytes, Stack size 32 bytes, exconf.o(i.eXosip_listen_addr))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = eXosip_listen_addr &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_transport_udp_init
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_transport_tcp_init
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskCreate
</UL>

<P><STRONG><a name="[30a]"></a>eXosip_lock</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, exosip.o(i.eXosip_lock))
<BR><BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_event_wait
</UL>

<P><STRONG><a name="[124]"></a>eXosip_malloc</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, exconf.o(i.eXosip_malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = eXosip_malloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskCreate
</UL>

<P><STRONG><a name="[12e]"></a>eXosip_message_build_answer</STRONG> (Thumb, 196 bytes, Stack size 32 bytes, exmessage_api.o(i.eXosip_message_build_answer))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = eXosip_message_build_answer &rArr; _eXosip_build_response_default &rArr; osip_from_clone &rArr; osip_uri_clone &rArr; osip_list_clone &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_header
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_header_get_byname
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_build_response_default
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_transaction_find
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncasecmp
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskCreate
</UL>

<P><STRONG><a name="[12f]"></a>eXosip_message_send_answer</STRONG> (Thumb, 300 bytes, Stack size 48 bytes, exmessage_api.o(i.eXosip_message_send_answer))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = eXosip_message_send_answer &rArr; _eXosip_build_response_default &rArr; osip_from_clone &rArr; osip_uri_clone &rArr; osip_list_clone &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_header
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_header_get_byname
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_add_event
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_free
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_new_outgoing_sipmessage
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_wakeup
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_build_response_default
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_transaction_find
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncasecmp
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskCreate
</UL>

<P><STRONG><a name="[127]"></a>eXosip_quit</STRONG> (Thumb, 584 bytes, Stack size 32 bytes, exconf.o(i.eXosip_quit))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = eXosip_quit &rArr; _eXosip_kill_transaction &rArr; _eXosip_transaction_free &rArr; osip_transaction_free &rArr; osip_transaction_free2 &rArr; osip_message_free &rArr; osip_from_free &rArr; osip_uri_free &rArr; osip_uri_param_freelist &rArr; osip_list_remove &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_event_free
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_www_authenticate_free
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_remove
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_fifo_tryget
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_release
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_eol
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_fifo_free
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_wakeup_event
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_transaction_free
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_reg_free
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_kill_transaction
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_wakeup
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_free
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskCreate
</UL>

<P><STRONG><a name="[12b]"></a>eXosip_register_build_initial_register</STRONG> (Thumb, 42 bytes, Stack size 40 bytes, exregister_api.o(i.eXosip_register_build_initial_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 3084<LI>Call Chain = eXosip_register_build_initial_register &rArr; eXosip_register_build_initial_register_withqvalue &rArr; _eXosip_register_build_register &rArr; _eXosip_add_authentication_information &rArr; _eXosip_create_proxy_authorization_header &rArr; DigestCalcResponseAka &rArr; f1 &rArr; ComputeOPc &rArr; RijndaelEncrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_register_build_initial_register_withqvalue
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskCreate
</UL>

<P><STRONG><a name="[313]"></a>eXosip_register_build_initial_register_withqvalue</STRONG> (Thumb, 358 bytes, Stack size 48 bytes, exregister_api.o(i.eXosip_register_build_initial_register_withqvalue))
<BR><BR>[Stack]<UL><LI>Max Depth = 3044<LI>Call Chain = eXosip_register_build_initial_register_withqvalue &rArr; _eXosip_register_build_register &rArr; _eXosip_add_authentication_information &rArr; _eXosip_create_proxy_authorization_header &rArr; DigestCalcResponseAka &rArr; f1 &rArr; ComputeOPc &rArr; RijndaelEncrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strncpy
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_reg_free
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_reg_init
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_register_build_register
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_register_build_initial_register
</UL>

<P><STRONG><a name="[12c]"></a>eXosip_register_send_register</STRONG> (Thumb, 192 bytes, Stack size 48 bytes, exregister_api.o(i.eXosip_register_send_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 3044<LI>Call Chain = eXosip_register_send_register &rArr; _eXosip_register_build_register &rArr; _eXosip_add_authentication_information &rArr; _eXosip_create_proxy_authorization_header &rArr; DigestCalcResponseAka &rArr; f1 &rArr; ComputeOPc &rArr; RijndaelEncrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_add_event
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_free
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_new_outgoing_sipmessage
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_force_update
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_wakeup
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_transaction_init
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_reg_find
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_register_build_register
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_automatic_action
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskCreate
</UL>

<P><STRONG><a name="[301]"></a>eXosip_remove_authentication_info</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, exosip.o(i.eXosip_remove_authentication_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = eXosip_remove_authentication_info &rArr; strcasecmp
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_add_authentication_info
</UL>

<P><STRONG><a name="[128]"></a>eXosip_set_option</STRONG> (Thumb, 1556 bytes, Stack size 120 bytes, exconf.o(i.eXosip_set_option))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = eXosip_set_option &rArr; _eXosip_get_addrinfo &rArr; osip_ip2addr &rArr; osip_he2ai &rArr; calloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strdup
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_inet_ntop
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_gettimeofday
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strncpy
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_tls_verify_certificate
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_set_tls_ctx
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_get_addrinfo
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_freeaddrinfo
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskCreate
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_send_message
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_send_message
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_learn_port_from_via
</UL>

<P><STRONG><a name="[316]"></a>eXosip_set_tls_ctx</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, extl_tls.o(i.eXosip_set_tls_ctx))
<BR><BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_set_option
</UL>

<P><STRONG><a name="[129]"></a>eXosip_set_user_agent</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, exconf.o(i.eXosip_set_user_agent))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = eXosip_set_user_agent &rArr; osip_strdup &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strdup
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskCreate
</UL>

<P><STRONG><a name="[315]"></a>eXosip_tls_verify_certificate</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, extl_tls.o(i.eXosip_tls_verify_certificate))
<BR><BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_set_option
</UL>

<P><STRONG><a name="[310]"></a>eXosip_transport_tcp_init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, extl_tcp.o(i.eXosip_transport_tcp_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = eXosip_transport_tcp_init &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_listen_addr
</UL>

<P><STRONG><a name="[30f]"></a>eXosip_transport_udp_init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, extl_udp.o(i.eXosip_transport_udp_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = eXosip_transport_udp_init &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_listen_addr
</UL>

<P><STRONG><a name="[30b]"></a>eXosip_unlock</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, exosip.o(i.eXosip_unlock))
<BR><BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_event_wait
</UL>

<P><STRONG><a name="[253]"></a>eXosip_wakeup_event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, exosip.o(i.eXosip_wakeup_event))
<BR><BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_quit
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_event_add
</UL>

<P><STRONG><a name="[36d]"></a>err_to_errno</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, err.o(i.err_to_errno))
<BR><BR>[Called By]<UL><LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_sendto
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recvfrom
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_close
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_bind
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_send
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_connect
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_accept
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recv_tcp
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getsockopt_impl
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getaddrname
</UL>

<P><STRONG><a name="[31c]"></a>etharp_cleanup_netif</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, etharp.o(i.etharp_cleanup_netif))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = etharp_cleanup_netif &rArr; etharp_free_entry &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_free_entry
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_down
</UL>

<P><STRONG><a name="[320]"></a>etharp_input</STRONG> (Thumb, 192 bytes, Stack size 48 bytes, etharp.o(i.etharp_input))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = etharp_input &rArr; etharp_update_arp_entry &rArr; etharp_find_entry &rArr; etharp_free_entry &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_update_arp_entry
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_raw
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernet_input
</UL>

<P><STRONG><a name="[b2]"></a>etharp_output</STRONG> (Thumb, 368 bytes, Stack size 40 bytes, etharp.o(i.etharp_output))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = etharp_output &rArr; etharp_query &rArr; etharp_request &rArr; etharp_request_dst &rArr; etharp_raw &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_output_to_arp_index
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_addr_isbroadcast_u32
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernet_output
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_query
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ethernetif.o(i.ethernetif_init)
</UL>
<P><STRONG><a name="[325]"></a>etharp_query</STRONG> (Thumb, 442 bytes, Stack size 48 bytes, etharp.o(i.etharp_query))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = etharp_query &rArr; etharp_request &rArr; etharp_request_dst &rArr; etharp_raw &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_ref
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_clone
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_request
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_find_entry
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_addr_isbroadcast_u32
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernet_output
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_output
</UL>

<P><STRONG><a name="[327]"></a>etharp_request</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, etharp.o(i.etharp_request))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = etharp_request &rArr; etharp_request_dst &rArr; etharp_raw &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_request_dst
</UL>
<BR>[Called By]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_issue_reports
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_output_to_arp_index
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_tmr
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_query
</UL>

<P><STRONG><a name="[f1]"></a>etharp_tmr</STRONG> (Thumb, 214 bytes, Stack size 16 bytes, etharp.o(i.etharp_tmr))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = etharp_tmr &rArr; etharp_request &rArr; etharp_request_dst &rArr; etharp_raw &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_request
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_free_entry
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timeouts.o(.constdata)
</UL>
<P><STRONG><a name="[eb]"></a>ethernet_input</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, ethernet.o(i.ethernet_input))
<BR><BR>[Stack]<UL><LI>Max Depth = 792<LI>Call Chain = ethernet_input &rArr; ip4_input &rArr; tcp_input &rArr; tcp_listen_input &rArr; tcp_alloc &rArr; tcp_kill_prio &rArr; tcp_abort &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; tcp_output_control_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_remove_header
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_input
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_input
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tcpip.o(i.tcpip_input)
</UL>
<P><STRONG><a name="[326]"></a>ethernet_output</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, ethernet.o(i.ethernet_output))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ethernet_output &rArr; pbuf_add_header &rArr; pbuf_add_header_impl &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_add_header
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_update_arp_entry
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_raw
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_output_to_arp_index
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_query
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_output
</UL>

<P><STRONG><a name="[a0]"></a>ethernetif_init</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, ethernetif.o(i.ethernetif_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = ethernetif_init &rArr; low_level_init &rArr; Bsp_Eth_Init &rArr; HAL_ETH_Init &rArr; ETH_MACDMAConfig &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_malloc
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_init
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sys_arch.o(i.TCPIP_Init)
</UL>
<P><STRONG><a name="[b6]"></a>ethernetif_input</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, ethernetif.o(i.ethernetif_input))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = ethernetif_input &rArr; low_level_input &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_input
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ethernetif.o(i.low_level_init)
</UL>
<P><STRONG><a name="[334]"></a>evt_set_type_outgoing_sipmessage</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, osip_event.o(i.evt_set_type_outgoing_sipmessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = evt_set_type_outgoing_sipmessage &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_new_outgoing_sipmessage
</UL>

<P><STRONG><a name="[153]"></a>f1</STRONG> (Thumb, 244 bytes, Stack size 112 bytes, milenage.o(i.f1))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = f1 &rArr; ComputeOPc &rArr; RijndaelEncrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RijndaelKeySchedule
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RijndaelEncrypt
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComputeOPc
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DigestCalcResponseAka
</UL>

<P><STRONG><a name="[155]"></a>f2345</STRONG> (Thumb, 396 bytes, Stack size 96 bytes, milenage.o(i.f2345))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = f2345 &rArr; ComputeOPc &rArr; RijndaelEncrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RijndaelKeySchedule
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RijndaelEncrypt
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComputeOPc
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DigestCalcResponseAka
</UL>

<P><STRONG><a name="[a1]"></a>fputc</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, bsp_debug_usart.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = fputc &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0printf)
</UL>
<P><STRONG><a name="[33b]"></a>fsm_callmethod</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, fsm_misc.o(i.fsm_callmethod))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = fsm_callmethod &rArr; fsm_findmethod
</UL>
<BR>[Calls]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_findmethod
</UL>
<BR>[Called By]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_execute
</UL>

<P><STRONG><a name="[13c]"></a>get_SLOT</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, gpio.o(i.get_SLOT))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = get_SLOT
</UL>
<BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[3fa]"></a>gettimeofday</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sip_stm_dp.o(i.gettimeofday))
<BR><BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_gettimeofday
</UL>

<P><STRONG><a name="[33f]"></a>icmp_dest_unreach</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, icmp.o(i.icmp_dest_unreach))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = icmp_dest_unreach &rArr; icmp_send_response &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_send_response
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_input
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_input
</UL>

<P><STRONG><a name="[341]"></a>icmp_input</STRONG> (Thumb, 416 bytes, Stack size 56 bytes, icmp.o(i.icmp_input))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = icmp_input &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_remove_header
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_copy
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_add_header
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum_pbuf
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_output_if
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_addr_isbroadcast_u32
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_input
</UL>

<P><STRONG><a name="[346]"></a>icmp_time_exceeded</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, icmp.o(i.icmp_time_exceeded))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = icmp_time_exceeded &rArr; icmp_send_response &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_send_response
</UL>
<BR>[Called By]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_free_complete_datagram
</UL>

<P><STRONG><a name="[347]"></a>ict_create_ack</STRONG> (Thumb, 514 bytes, Stack size 40 bytes, ict_fsm.o(i.ict_create_ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = ict_create_ack &rArr; osip_from_clone &rArr; osip_uri_clone &rArr; osip_list_clone &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strdup
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_via_clone
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_clone
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_init
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_free
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_size
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_eol
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_clone
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_add
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_clone
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_cseq_clone
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_id_clone
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_get_knownheaderlist
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ict_rcv_3456xx
</UL>

<P><STRONG><a name="[3]"></a>ict_rcv_1xx</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, ict_fsm.o(i.ict_rcv_1xx))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = ict_rcv_1xx &rArr; osip_message_free &rArr; osip_from_free &rArr; osip_uri_free &rArr; osip_uri_param_freelist &rArr; osip_list_remove &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_free
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_set_state
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ict_fsm.o(.data)
</UL>
<P><STRONG><a name="[4]"></a>ict_rcv_2xx</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, ict_fsm.o(i.ict_rcv_2xx))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = ict_rcv_2xx &rArr; osip_message_free &rArr; osip_from_free &rArr; osip_uri_free &rArr; osip_uri_param_freelist &rArr; osip_list_remove &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_free
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_set_state
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_callback
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_kill_transaction_callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ict_fsm.o(.data)
</UL>
<P><STRONG><a name="[5]"></a>ict_rcv_3456xx</STRONG> (Thumb, 552 bytes, Stack size 56 bytes, ict_fsm.o(i.ict_rcv_3456xx))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = ict_rcv_3456xx &rArr; ict_create_ack &rArr; osip_from_clone &rArr; osip_uri_clone &rArr; osip_list_clone &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strdup
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_free
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_set_state
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_callback
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_kill_transaction_callback
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ict_create_ack
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ict_handle_transport_error
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_get_byname
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_get_knownheaderlist
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_gettimeofday
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_gettimeofday
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_ict_set_destination
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ict_fsm.o(.data)
</UL>
<P><STRONG><a name="[6]"></a>ict_retransmit_ack</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, ict_fsm.o(i.ict_retransmit_ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = ict_retransmit_ack &rArr; osip_message_free &rArr; osip_from_free &rArr; osip_uri_free &rArr; osip_uri_param_freelist &rArr; osip_list_remove &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_free
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_set_state
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_callback
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ict_handle_transport_error
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ict_fsm.o(.data)
</UL>
<P><STRONG><a name="[0]"></a>ict_snd_invite</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, ict_fsm.o(i.ict_snd_invite))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ict_snd_invite &rArr; ict_handle_transport_error &rArr; __osip_kill_transaction_callback &rArr; osip_getsystemtime &rArr; osip_gettimeofday
</UL>
<BR>[Calls]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_set_state
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_callback
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ict_handle_transport_error
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;via_get_protocol
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_get_knownheaderlist
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ict_fsm.o(.data)
</UL>
<P><STRONG><a name="[342]"></a>inet_chksum_pbuf</STRONG> (Thumb, 86 bytes, Stack size 20 bytes, inet_chksum.o(i.inet_chksum_pbuf))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = inet_chksum_pbuf &rArr; lwip_standard_chksum
</UL>
<BR>[Calls]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_standard_chksum
</UL>
<BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_input
</UL>

<P><STRONG><a name="[323]"></a>ip4_addr_isbroadcast_u32</STRONG> (Thumb, 78 bytes, Stack size 12 bytes, ip4_addr.o(i.ip4_addr_isbroadcast_u32))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ip4_addr_isbroadcast_u32
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_input
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_update_arp_entry
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_input
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_input_accept
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_input
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_query
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_output
</UL>

<P><STRONG><a name="[34e]"></a>ip4_frag</STRONG> (Thumb, 512 bytes, Stack size 96 bytes, ip4_frag.o(i.ip4_frag))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_ref
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloced_custom
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_cat
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag_free_pbuf_custom_ref
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag_alloc_pbuf_custom_ref
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_output_if_src
</UL>

<P><STRONG><a name="[ec]"></a>ip4_input</STRONG> (Thumb, 402 bytes, Stack size 32 bytes, ip4.o(i.ip4_input))
<BR><BR>[Stack]<UL><LI>Max Depth = 768<LI>Call Chain = ip4_input &rArr; tcp_input &rArr; tcp_listen_input &rArr; tcp_alloc &rArr; tcp_kill_prio &rArr; tcp_abort &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; tcp_output_control_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_remove_header
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_realloc
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_header_force
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_dest_unreach
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_input
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_addr_isbroadcast_u32
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_reass
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_input_accept
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_input
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernet_input
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tcpip.o(i.tcpip_input)
</UL>
<P><STRONG><a name="[344]"></a>ip4_output_if</STRONG> (Thumb, 54 bytes, Stack size 48 bytes, ip4.o(i.ip4_output_if))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_output_if_src
</UL>
<BR>[Called By]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_segment
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_control_segment
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_input
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_send_response
</UL>

<P><STRONG><a name="[359]"></a>ip4_output_if_src</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, ip4.o(i.ip4_output_if_src))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_add_header
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_frag
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if_src
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_output_if
</UL>

<P><STRONG><a name="[355]"></a>ip4_reass</STRONG> (Thumb, 560 bytes, Stack size 56 bytes, ip4_frag.o(i.ip4_reass))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = ip4_reass &rArr; ip_reass_enqueue_new_datagram &rArr; ip_reass_remove_oldest_datagram &rArr; ip_reass_free_complete_datagram &rArr; icmp_time_exceeded &rArr; icmp_send_response &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_remove_header
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_clen
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_cat
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_remove_oldest_datagram
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_enqueue_new_datagram
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_dequeue_datagram
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_chain_frag_into_datagram_and_validate
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_input
</UL>

<P><STRONG><a name="[345]"></a>ip4_route</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, ip4.o(i.ip4_route))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ip4_route
</UL>
<BR>[Called By]<UL><LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_connect
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_route
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_listen_input
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_send_response
</UL>

<P><STRONG><a name="[35f]"></a>ip4addr_aton</STRONG> (Thumb, 406 bytes, Stack size 48 bytes, ip4_addr.o(i.ip4addr_aton))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = ip4addr_aton &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htonl
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_inet_pton
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipaddr_addr
</UL>

<P><STRONG><a name="[241]"></a>ip4addr_ntoa</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, ip4_addr.o(i.ip4addr_ntoa))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ip4addr_ntoa &rArr; ip4addr_ntoa_r
</UL>
<BR>[Calls]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4addr_ntoa_r
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udpecho_thread
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_default_gateway_ipv4sock
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_default_gateway_ipv4
</UL>

<P><STRONG><a name="[360]"></a>ip4addr_ntoa_r</STRONG> (Thumb, 168 bytes, Stack size 40 bytes, ip4_addr.o(i.ip4addr_ntoa_r))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ip4addr_ntoa_r
</UL>
<BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4addr_ntoa
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_inet_ntop
</UL>

<P><STRONG><a name="[f0]"></a>ip_reass_tmr</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, ip4_frag.o(i.ip_reass_tmr))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = ip_reass_tmr &rArr; ip_reass_free_complete_datagram &rArr; icmp_time_exceeded &rArr; icmp_send_response &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_free_complete_datagram
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timeouts.o(.constdata)
</UL>
<P><STRONG><a name="[23b]"></a>ipaddr_addr</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, ip4_addr.o(i.ipaddr_addr))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ipaddr_addr &rArr; ip4addr_aton &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4addr_aton
</UL>
<BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_inet_pton
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_default_gateway_ipv4sock
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_default_gateway_ipv4
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_srv_lookup
</UL>

<P><STRONG><a name="[e]"></a>ist_rcv_ack</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, ist_fsm.o(i.ist_rcv_ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = ist_rcv_ack &rArr; osip_message_free &rArr; osip_from_free &rArr; osip_uri_free &rArr; osip_uri_param_freelist &rArr; osip_list_remove &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_free
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_set_state
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_callback
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_gettimeofday
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_gettimeofday
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ist_fsm.o(.data)
</UL>
<P><STRONG><a name="[8]"></a>ist_rcv_invite</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, ist_fsm.o(i.ist_rcv_invite))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = ist_rcv_invite &rArr; __osip_transaction_snd_xxx &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_snd_xxx
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ist_handle_transport_error
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_free
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_set_state
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ist_fsm.o(.data)
</UL>
<P><STRONG><a name="[b]"></a>ist_snd_1xx</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, ist_fsm.o(i.ist_snd_1xx))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = ist_snd_1xx &rArr; __osip_transaction_snd_xxx &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_snd_xxx
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ist_handle_transport_error
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_free
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ist_fsm.o(.data)
</UL>
<P><STRONG><a name="[c]"></a>ist_snd_2xx</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, ist_fsm.o(i.ist_snd_2xx))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = ist_snd_2xx &rArr; __osip_transaction_snd_xxx &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_snd_xxx
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ist_handle_transport_error
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_free
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_set_state
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_callback
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_kill_transaction_callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ist_fsm.o(.data)
</UL>
<P><STRONG><a name="[d]"></a>ist_snd_3456xx</STRONG> (Thumb, 212 bytes, Stack size 16 bytes, ist_fsm.o(i.ist_snd_3456xx))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = ist_snd_3456xx &rArr; __osip_transaction_snd_xxx &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_snd_xxx
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ist_handle_transport_error
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_free
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_set_state
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_callback
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_gettimeofday
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_gettimeofday
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ist_fsm.o(.data)
</UL>
<P><STRONG><a name="[2c7]"></a>lwip_accept</STRONG> (Thumb, 448 bytes, Stack size 80 bytes, sockets.o(i.lwip_accept))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = lwip_accept &rArr; free_socket &rArr; free_socket_free_elements &rArr; netconn_delete &rArr; netconn_prepare_delete &rArr; netconn_apimsg &rArr; tcpip_send_msg_wait_sem &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;err_to_errno
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mutex_unlock
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mutex_lock
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_getaddr
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_delete
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_accept
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_socket
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_socket
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_socket
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_read_tcp_main_socket
</UL>

<P><STRONG><a name="[243]"></a>lwip_bind</STRONG> (Thumb, 172 bytes, Stack size 40 bytes, sockets.o(i.lwip_bind))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = lwip_bind &rArr; netconn_bind &rArr; netconn_apimsg &rArr; tcpip_send_msg_wait_sem &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;err_to_errno
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_bind
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_socket
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udpecho_thread
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_default_gateway_ipv6sock
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_default_gateway_ipv4sock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_tl_open_oc
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_tl_open
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_new_socket
</UL>

<P><STRONG><a name="[227]"></a>lwip_close</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, sockets.o(i.lwip_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = lwip_close &rArr; free_socket &rArr; free_socket_free_elements &rArr; netconn_delete &rArr; netconn_prepare_delete &rArr; netconn_apimsg &rArr; tcpip_send_msg_wait_sem &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;err_to_errno
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_prepare_delete
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_socket
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_socket
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udpecho_thread
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_closesocket
</UL>

<P><STRONG><a name="[23f]"></a>lwip_connect</STRONG> (Thumb, 194 bytes, Stack size 40 bytes, sockets.o(i.lwip_connect))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = lwip_connect &rArr; netconn_connect &rArr; netconn_apimsg &rArr; tcpip_send_msg_wait_sem &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;err_to_errno
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_disconnect
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_connect
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_socket
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_default_gateway_ipv6sock
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_default_gateway_ipv6
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_default_gateway_ipv4sock
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_default_gateway_ipv4
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_new_socket
</UL>

<P><STRONG><a name="[2ce]"></a>lwip_fcntl</STRONG> (Thumb, 252 bytes, Stack size 32 bytes, sockets.o(i.lwip_fcntl))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = lwip_fcntl &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mutex_unlock
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mutex_lock
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_socket
</UL>
<BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_new_socket
</UL>

<P><STRONG><a name="[271]"></a>lwip_gethostbyname</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sip_stm_dp.o(i.lwip_gethostbyname))
<BR><BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_get_addrinfo
</UL>

<P><STRONG><a name="[240]"></a>lwip_getsockname</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, sockets.o(i.lwip_getsockname))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = lwip_getsockname &rArr; lwip_getaddrname &rArr; netconn_getaddr &rArr; netconn_apimsg &rArr; tcpip_send_msg_wait_sem &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getaddrname
</UL>
<BR>[Called By]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_default_gateway_ipv6sock
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_default_gateway_ipv6
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_default_gateway_ipv4sock
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_default_gateway_ipv4
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_tl_open_oc
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_tl_open
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_new_socket
</UL>

<P><STRONG><a name="[2d9]"></a>lwip_getsockopt</STRONG> (Thumb, 118 bytes, Stack size 40 bytes, sockets.o(i.lwip_getsockopt))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = lwip_getsockopt &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mutex_unlock
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mutex_lock
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getsockopt_impl
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_socket
</UL>
<BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcptls_tl_is_connected
</UL>

<P><STRONG><a name="[2df]"></a>lwip_htonl</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, def.o(i.lwip_htonl))
<BR><BR>[Called By]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4addr_aton
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_segment
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_alloc_header_common
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_create_segment
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send_empty_ack
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rexmit
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_free_acked_segments
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_zero_window_probe
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_split_unsent_seg
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rexmit_rto_prepare
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_keepalive
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_keepalive
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_read_udp_main_socket
</UL>

<P><STRONG><a name="[23c]"></a>lwip_htons</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, def.o(i.lwip_htons))
<BR><BR>[Called By]<UL><LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_sendto
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_bind
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udpecho_thread
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_input
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_connect
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_accept
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_sock_make_addr
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getaddrname
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_raw
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_output_if_src
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if_src
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_input
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_segment
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_alloc_header_common
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_create_segment
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_free_acked_segments
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_zero_window_probe
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_split_unsent_seg
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send_fin
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rexmit_rto_prepare
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_chain_frag_into_datagram_and_validate
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_reass
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_frag
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernet_output
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_he2ai
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_default_gateway_ipv6sock
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_default_gateway_ipv6
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_default_gateway_ipv4sock
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_default_gateway_ipv4
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_keepalive
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_tl_open
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_read_udp_main_socket
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_getport
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_open
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_new_socket
</UL>

<P><STRONG><a name="[246]"></a>lwip_inet_ntop</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, sockets.o(i.lwip_inet_ntop))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = lwip_inet_ntop &rArr; ip4addr_ntoa_r
</UL>
<BR>[Calls]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4addr_ntoa_r
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_set_option
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_default_gateway_ipv6sock
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_default_gateway_ipv6
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_send_message
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_read_udp_main_socket
</UL>

<P><STRONG><a name="[245]"></a>lwip_inet_pton</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, sockets.o(i.lwip_inet_pton))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = lwip_inet_pton &rArr; ip4addr_aton &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4addr_aton
</UL>
<BR>[Called By]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_default_gateway_ipv6sock
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_default_gateway_ipv6
</UL>

<P><STRONG><a name="[37b]"></a>lwip_init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, init.o(i.lwip_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = lwip_init &rArr; mem_init &rArr; sys_mutex_new &rArr; xQueueCreateMutex &rArr; prvInitialiseMutex &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_init
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_init
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timeouts_init
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_init
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_init
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_init
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_init
</UL>

<P><STRONG><a name="[be]"></a>lwip_netconn_do_bind</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, api_msg.o(i.lwip_netconn_do_bind))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = lwip_netconn_do_bind &rArr; tcp_bind &rArr; tcp_timer_needed &rArr; sys_timeout &rArr; sys_timeout_abs &rArr; memp_malloc &rArr; do_memp_malloc_pool &rArr; sys_arch_unprotect &rArr; vPortExitCritical &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_bind
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_bind
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_lib.o(i.netconn_bind)
</UL>
<P><STRONG><a name="[bf]"></a>lwip_netconn_do_close</STRONG> (Thumb, 190 bytes, Stack size 16 bytes, api_msg.o(i.lwip_netconn_do_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 672<LI>Call Chain = lwip_netconn_do_close &rArr; lwip_netconn_do_close_internal &rArr; tcp_abort &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; tcp_output_control_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mutex_unlock
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mutex_lock
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_sem_wait
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_drain
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_close_internal
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_lib.o(i.netconn_close_shutdown)
</UL>
<P><STRONG><a name="[c0]"></a>lwip_netconn_do_connect</STRONG> (Thumb, 276 bytes, Stack size 24 bytes, api_msg.o(i.lwip_netconn_do_connect))
<BR><BR>[Stack]<UL><LI>Max Depth = 592<LI>Call Chain = lwip_netconn_do_connect &rArr; tcp_connect &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; tcp_output_control_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_connect
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_connect
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mutex_unlock
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mutex_lock
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_sem_wait
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_tcp
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_lib.o(i.netconn_connect)
</UL>
<P><STRONG><a name="[c4]"></a>lwip_netconn_do_delconn</STRONG> (Thumb, 316 bytes, Stack size 16 bytes, api_msg.o(i.lwip_netconn_do_delconn))
<BR><BR>[Stack]<UL><LI>Max Depth = 672<LI>Call Chain = lwip_netconn_do_delconn &rArr; lwip_netconn_do_close_internal &rArr; tcp_abort &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; tcp_output_control_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_remove
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mutex_unlock
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mutex_lock
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_sem_wait
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_drain
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_close_internal
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_valid
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_lib.o(i.netconn_prepare_delete)
</UL>
<P><STRONG><a name="[c1]"></a>lwip_netconn_do_disconnect</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, api_msg.o(i.lwip_netconn_do_disconnect))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lwip_netconn_do_disconnect &rArr; udp_disconnect &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_disconnect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_lib.o(i.netconn_disconnect)
</UL>
<P><STRONG><a name="[c2]"></a>lwip_netconn_do_getaddr</STRONG> (Thumb, 182 bytes, Stack size 16 bytes, api_msg.o(i.lwip_netconn_do_getaddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = lwip_netconn_do_getaddr &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_lib.o(i.netconn_getaddr)
</UL>
<P><STRONG><a name="[c3]"></a>lwip_netconn_do_newconn</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, api_msg.o(i.lwip_netconn_do_newconn))
<BR><BR>[Stack]<UL><LI>Max Depth = 696<LI>Call Chain = lwip_netconn_do_newconn &rArr; pcb_new &rArr; tcp_new_ip_type &rArr; tcp_alloc &rArr; tcp_kill_prio &rArr; tcp_abort &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; tcp_output_control_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcb_new
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_lib.o(i.netconn_new_with_proto_and_callback)
</UL>
<P><STRONG><a name="[c6]"></a>lwip_netconn_do_recv</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, api_msg.o(i.lwip_netconn_do_recv))
<BR><BR>[Stack]<UL><LI>Max Depth = 576<LI>Call Chain = lwip_netconn_do_recv &rArr; tcp_recved &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; tcp_output_control_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recved
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_lib.o(i.netconn_tcp_recvd_msg)
</UL>
<P><STRONG><a name="[c5]"></a>lwip_netconn_do_send</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, api_msg.o(i.lwip_netconn_do_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = lwip_netconn_do_send &rArr; udp_send &rArr; udp_sendto &rArr; udp_sendto_if &rArr; udp_sendto_if_src &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_send
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_err
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_lib.o(i.netconn_send)
</UL>
<P><STRONG><a name="[c7]"></a>lwip_netconn_do_write</STRONG> (Thumb, 192 bytes, Stack size 16 bytes, api_msg.o(i.lwip_netconn_do_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = lwip_netconn_do_write &rArr; lwip_netconn_do_writemore &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; tcp_output_control_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mutex_unlock
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mutex_lock
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_sem_wait
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_writemore
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_err
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_lib.o(i.netconn_write_vectors_partly)
</UL>
<P><STRONG><a name="[39d]"></a>lwip_netconn_is_err_msg</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, api_msg.o(i.lwip_netconn_is_err_msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = lwip_netconn_is_err_msg &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_drain
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_accept
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recv_data
</UL>

<P><STRONG><a name="[2d1]"></a>lwip_recv</STRONG> (Thumb, 34 bytes, Stack size 32 bytes, sockets.o(i.lwip_recv))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = lwip_recv &rArr; lwip_recvfrom &rArr; lwip_recv_tcp &rArr; netconn_recv_tcp_pbuf_flags &rArr; netconn_recv_data_tcp &rArr; netconn_close_shutdown &rArr; netconn_apimsg &rArr; tcpip_send_msg_wait_sem &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recvfrom
</UL>
<BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_recv
</UL>

<P><STRONG><a name="[2de]"></a>lwip_recvfrom</STRONG> (Thumb, 244 bytes, Stack size 96 bytes, sockets.o(i.lwip_recvfrom))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = lwip_recvfrom &rArr; lwip_recv_tcp &rArr; netconn_recv_tcp_pbuf_flags &rArr; netconn_recv_data_tcp &rArr; netconn_close_shutdown &rArr; netconn_apimsg &rArr; tcpip_send_msg_wait_sem &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;err_to_errno
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recvfrom_udp_raw
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recv_tcp_from
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recv_tcp
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_socket
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udpecho_thread
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recv
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_read_udp_oc_socket
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_read_udp_main_socket
</UL>

<P><STRONG><a name="[2d8]"></a>lwip_select</STRONG> (Thumb, 906 bytes, Stack size 112 bytes, sockets.o(i.lwip_select))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = lwip_select &rArr; sys_sem_new &rArr; xQueueCreateCountingSemaphore &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_new
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_sem_wait
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_free
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tryget_socket_unconn_locked
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_unlink_select_cb
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_selscan
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_link_select_cb
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcptls_tl_is_connected
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_send_sockinfo
</UL>

<P><STRONG><a name="[2d7]"></a>lwip_send</STRONG> (Thumb, 156 bytes, Stack size 48 bytes, sockets.o(i.lwip_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + In Cycle
<LI>Call Chain = lwip_send &rArr;  lwip_sendto (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_sendto
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;err_to_errno
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_write_partly
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_socket
</UL>
<BR>[Called By]<UL><LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_sendto
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_keepalive
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_send_sockinfo
</UL>

<P><STRONG><a name="[3ab]"></a>lwip_sendto</STRONG> (Thumb, 280 bytes, Stack size 72 bytes, sockets.o(i.lwip_sendto))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = lwip_sendto &rArr; lwip_send &rArr;  lwip_sendto (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbuf_ref
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbuf_free
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;err_to_errno
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_send
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_send
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_socket
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udpecho_thread
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_send
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_send_message
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_keepalive
</UL>

<P><STRONG><a name="[23e]"></a>lwip_setsockopt</STRONG> (Thumb, 120 bytes, Stack size 40 bytes, sockets.o(i.lwip_setsockopt))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = lwip_setsockopt &rArr; lwip_setsockopt_impl &rArr; netif_find &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mutex_unlock
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mutex_lock
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_setsockopt_impl
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_socket
</UL>
<BR>[Called By]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setsockopt_ipv6only
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_default_gateway_ipv6
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_default_gateway_ipv4
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_tl_open_oc
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_tl_open
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_transport_set_dscp
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_open
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_new_socket
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_read_tcp_main_socket
</UL>

<P><STRONG><a name="[23d]"></a>lwip_socket</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, sockets.o(i.lwip_socket))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = lwip_socket &rArr; netconn_new_with_proto_and_callback &rArr; netconn_alloc &rArr; sys_sem_new &rArr; xQueueCreateCountingSemaphore &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_new_with_proto_and_callback
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_delete
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_socket
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udpecho_thread
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_default_gateway_ipv6sock
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_default_gateway_ipv6
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_default_gateway_ipv4sock
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_default_gateway_ipv4
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_tl_open_oc
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_tl_open
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_open
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_new_socket
</UL>

<P><STRONG><a name="[34d]"></a>lwip_standard_chksum</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, inet_chksum.o(i.lwip_standard_chksum))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lwip_standard_chksum
</UL>
<BR>[Called By]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum_pbuf
</UL>

<P><STRONG><a name="[97]"></a>main</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = main &rArr; vTaskStartScheduler &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_SendString
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[3b7]"></a>mem_free</STRONG> (Thumb, 228 bytes, Stack size 16 bytes, mem.o(i.mem_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plug_holes
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_link_valid
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mutex_unlock
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mutex_lock
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
</UL>

<P><STRONG><a name="[37d]"></a>mem_init</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, mem.o(i.mem_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = mem_init &rArr; sys_mutex_new &rArr; xQueueCreateMutex &rArr; prvInitialiseMutex &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_to_mem
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mutex_new
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_init
</UL>

<P><STRONG><a name="[32e]"></a>mem_malloc</STRONG> (Thumb, 380 bytes, Stack size 32 bytes, mem.o(i.mem_malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = mem_malloc &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_to_mem
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_to_ptr
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mutex_unlock
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mutex_lock
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernetif_init
</UL>

<P><STRONG><a name="[3bd]"></a>mem_trim</STRONG> (Thumb, 380 bytes, Stack size 40 bytes, mem.o(i.mem_trim))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = mem_trim &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_to_mem
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_to_ptr
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mutex_unlock
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mutex_lock
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_realloc
</UL>

<P><STRONG><a name="[362]"></a>memp_free</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, memp.o(i.memp_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = memp_free &rArr; do_memp_free_pool &rArr; sys_arch_unprotect &rArr; vPortExitCritical &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_memp_free_pool
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_free_listen
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_remove
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbuf_delete
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_free
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_alloc
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_new_with_proto_and_callback
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_check_timeouts
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_inpkt
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_thread_handle_msg
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_seg_free
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_free
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_dequeue_datagram
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag_free_pbuf_custom_ref
</UL>

<P><STRONG><a name="[37e]"></a>memp_init</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, memp.o(i.memp_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = memp_init &rArr; memp_init_pool
</UL>
<BR>[Calls]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_init_pool
</UL>
<BR>[Called By]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_init
</UL>

<P><STRONG><a name="[3be]"></a>memp_init_pool</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, memp.o(i.memp_init_pool))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memp_init_pool
</UL>
<BR>[Called By]<UL><LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_init
</UL>

<P><STRONG><a name="[361]"></a>memp_malloc</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, memp.o(i.memp_malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = memp_malloc &rArr; do_memp_malloc_pool &rArr; sys_arch_unprotect &rArr; vPortExitCritical &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_memp_malloc_pool
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc_reference
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_udp
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_alloc
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_inpkt
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_new
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timeout_abs
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_create_segment
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_alloc
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_enqueue_new_datagram
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag_alloc_pbuf_custom_ref
</UL>

<P><STRONG><a name="[339]"></a>netbuf_delete</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, netbuf.o(i.netbuf_delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = netbuf_delete &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_udp
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_drain
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recvfrom_udp_raw
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_socket_free_elements
</UL>

<P><STRONG><a name="[3af]"></a>netbuf_free</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, netbuf.o(i.netbuf_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = netbuf_free &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_sendto
</UL>

<P><STRONG><a name="[3ad]"></a>netbuf_ref</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, netbuf.o(i.netbuf_ref))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = netbuf_ref &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_sendto
</UL>

<P><STRONG><a name="[36c]"></a>netconn_accept</STRONG> (Thumb, 186 bytes, Stack size 24 bytes, api_lib.o(i.netconn_accept))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = netconn_accept &rArr; sys_arch_mbox_fetch &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_valid
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_mbox_tryfetch
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_mbox_fetch
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_is_err_msg
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_err
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_accept
</UL>

<P><STRONG><a name="[3c6]"></a>netconn_alloc</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, api_msg.o(i.netconn_alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = netconn_alloc &rArr; sys_sem_new &rArr; xQueueCreateCountingSemaphore &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_new
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_set_invalid
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_new
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_free
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_new_with_proto_and_callback
</UL>

<P><STRONG><a name="[371]"></a>netconn_bind</STRONG> (Thumb, 60 bytes, Stack size 56 bytes, api_lib.o(i.netconn_bind))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = netconn_bind &rArr; netconn_apimsg &rArr; tcpip_send_msg_wait_sem &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_apimsg
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_bind
</UL>

<P><STRONG><a name="[374]"></a>netconn_connect</STRONG> (Thumb, 60 bytes, Stack size 56 bytes, api_lib.o(i.netconn_connect))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = netconn_connect &rArr; netconn_apimsg &rArr; tcpip_send_msg_wait_sem &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_apimsg
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_connect
</UL>

<P><STRONG><a name="[33a]"></a>netconn_delete</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, api_lib.o(i.netconn_delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = netconn_delete &rArr; netconn_prepare_delete &rArr; netconn_apimsg &rArr; tcpip_send_msg_wait_sem &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_free
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_prepare_delete
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_socket
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_accept
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_socket_free_elements
</UL>

<P><STRONG><a name="[373]"></a>netconn_disconnect</STRONG> (Thumb, 46 bytes, Stack size 48 bytes, api_lib.o(i.netconn_disconnect))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = netconn_disconnect &rArr; netconn_apimsg &rArr; tcpip_send_msg_wait_sem &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_apimsg
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_connect
</UL>

<P><STRONG><a name="[37a]"></a>netconn_err</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, api_lib.o(i.netconn_err))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = netconn_err &rArr; sys_arch_unprotect &rArr; vPortExitCritical &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_write
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_send
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_accept
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recv_data_tcp
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recv_data
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getsockopt_impl
</UL>

<P><STRONG><a name="[3cc]"></a>netconn_free</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, api_msg.o(i.netconn_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = netconn_free &rArr; sys_sem_free &rArr; vQueueDelete &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_set_invalid
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_free
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_valid
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_drain
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_delete
</UL>

<P><STRONG><a name="[370]"></a>netconn_getaddr</STRONG> (Thumb, 108 bytes, Stack size 56 bytes, api_lib.o(i.netconn_getaddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = netconn_getaddr &rArr; netconn_apimsg &rArr; tcpip_send_msg_wait_sem &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_apimsg
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_accept
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recv_tcp_from
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getaddrname
</UL>

<P><STRONG><a name="[3b4]"></a>netconn_new_with_proto_and_callback</STRONG> (Thumb, 176 bytes, Stack size 56 bytes, api_lib.o(i.netconn_new_with_proto_and_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = netconn_new_with_proto_and_callback &rArr; netconn_alloc &rArr; sys_sem_new &rArr; xQueueCreateCountingSemaphore &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_valid
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_free
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_valid
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_free
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_alloc
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_apimsg
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_socket
</UL>

<P><STRONG><a name="[372]"></a>netconn_prepare_delete</STRONG> (Thumb, 42 bytes, Stack size 48 bytes, api_lib.o(i.netconn_prepare_delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = netconn_prepare_delete &rArr; netconn_apimsg &rArr; tcpip_send_msg_wait_sem &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_apimsg
</UL>
<BR>[Called By]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_close
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_delete
</UL>

<P><STRONG><a name="[39f]"></a>netconn_recv_tcp_pbuf_flags</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, api_lib.o(i.netconn_recv_tcp_pbuf_flags))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = netconn_recv_tcp_pbuf_flags &rArr; netconn_recv_data_tcp &rArr; netconn_close_shutdown &rArr; netconn_apimsg &rArr; tcpip_send_msg_wait_sem &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recv_data_tcp
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recv_tcp
</UL>

<P><STRONG><a name="[3a6]"></a>netconn_recv_udp_raw_netbuf_flags</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, api_lib.o(i.netconn_recv_udp_raw_netbuf_flags))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = netconn_recv_udp_raw_netbuf_flags &rArr; netconn_recv_data &rArr; sys_arch_mbox_fetch &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recv_data
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recvfrom_udp_raw
</UL>

<P><STRONG><a name="[3ae]"></a>netconn_send</STRONG> (Thumb, 50 bytes, Stack size 48 bytes, api_lib.o(i.netconn_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = netconn_send &rArr; netconn_apimsg &rArr; tcpip_send_msg_wait_sem &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_apimsg
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_sendto
</UL>

<P><STRONG><a name="[3a2]"></a>netconn_tcp_recvd</STRONG> (Thumb, 58 bytes, Stack size 48 bytes, api_lib.o(i.netconn_tcp_recvd))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = netconn_tcp_recvd &rArr; netconn_tcp_recvd_msg &rArr; netconn_apimsg &rArr; tcpip_send_msg_wait_sem &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_tcp_recvd_msg
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recv_tcp
</UL>

<P><STRONG><a name="[3ac]"></a>netconn_write_partly</STRONG> (Thumb, 40 bytes, Stack size 40 bytes, api_lib.o(i.netconn_write_partly))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = netconn_write_partly &rArr; netconn_write_vectors_partly &rArr; netconn_apimsg &rArr; tcpip_send_msg_wait_sem &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_write_vectors_partly
</UL>
<BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_send
</UL>

<P><STRONG><a name="[3d1]"></a>netconn_write_vectors_partly</STRONG> (Thumb, 256 bytes, Stack size 72 bytes, api_lib.o(i.netconn_write_vectors_partly))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = netconn_write_vectors_partly &rArr; netconn_apimsg &rArr; tcpip_send_msg_wait_sem &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_apimsg
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_write_partly
</UL>

<P><STRONG><a name="[189]"></a>netif_add</STRONG> (Thumb, 282 bytes, Stack size 40 bytes, netif.o(i.netif_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 768<LI>Call Chain = netif_add &rArr; netif_set_addr &rArr; netif_do_set_ipaddr &rArr; netif_do_ip_addr_changed &rArr; tcp_netif_ip_addr_changed &rArr; tcp_netif_ip_addr_changed_pcblist &rArr; tcp_abort &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; tcp_output_control_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_addr
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCPIP_Init
</UL>

<P><STRONG><a name="[3b1]"></a>netif_find</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, netif.o(i.netif_find))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = netif_find &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Called By]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_setsockopt_impl
</UL>

<P><STRONG><a name="[44e]"></a>netif_get_by_index</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, netif.o(i.netif_get_by_index))
<BR><BR>[Called By]<UL><LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_connect
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_route
</UL>

<P><STRONG><a name="[37f]"></a>netif_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, netif.o(i.netif_init))
<BR><BR>[Called By]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_init
</UL>

<P><STRONG><a name="[3d2]"></a>netif_set_addr</STRONG> (Thumb, 92 bytes, Stack size 40 bytes, netif.o(i.netif_set_addr))
<BR><BR>[Stack]<UL><LI>Max Depth = 728<LI>Call Chain = netif_set_addr &rArr; netif_do_set_ipaddr &rArr; netif_do_ip_addr_changed &rArr; tcp_netif_ip_addr_changed &rArr; tcp_netif_ip_addr_changed_pcblist &rArr; tcp_abort &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; tcp_output_control_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_do_set_netmask
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_do_set_ipaddr
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_do_set_gw
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_add
</UL>

<P><STRONG><a name="[18a]"></a>netif_set_default</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, netif.o(i.netif_set_default))
<BR><BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCPIP_Init
</UL>

<P><STRONG><a name="[18c]"></a>netif_set_down</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, netif.o(i.netif_set_down))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = netif_set_down &rArr; etharp_cleanup_netif &rArr; etharp_free_entry &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_cleanup_netif
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCPIP_Init
</UL>

<P><STRONG><a name="[18b]"></a>netif_set_up</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, netif.o(i.netif_set_up))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = netif_set_up &rArr; netif_issue_reports &rArr; etharp_request &rArr; etharp_request_dst &rArr; etharp_raw &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_issue_reports
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCPIP_Init
</UL>

<P><STRONG><a name="[1a7]"></a>next_separator</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, osip_uri.o(i.next_separator))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = next_separator
</UL>
<BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
</UL>
<BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_parse
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_generic_param_parseall
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_parse_params
</UL>

<P><STRONG><a name="[13]"></a>nict_rcv_1xx</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, nict_fsm.o(i.nict_rcv_1xx))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = nict_rcv_1xx &rArr; osip_message_free &rArr; osip_from_free &rArr; osip_uri_free &rArr; osip_uri_param_freelist &rArr; osip_list_remove &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_free
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_set_state
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_callback
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_gettimeofday
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_gettimeofday
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nict_fsm.o(.data)
</UL>
<P><STRONG><a name="[14]"></a>nict_rcv_23456xx</STRONG> (Thumb, 186 bytes, Stack size 16 bytes, nict_fsm.o(i.nict_rcv_23456xx))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = nict_rcv_23456xx &rArr; osip_message_free &rArr; osip_from_free &rArr; osip_uri_free &rArr; osip_uri_param_freelist &rArr; osip_list_remove &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_free
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_set_state
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_callback
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_gettimeofday
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_gettimeofday
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nict_fsm.o(.data)
</UL>
<P><STRONG><a name="[10]"></a>nict_snd_request</STRONG> (Thumb, 458 bytes, Stack size 32 bytes, nict_fsm.o(i.nict_snd_request))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = nict_snd_request &rArr; nict_handle_transport_error &rArr; __osip_kill_transaction_callback &rArr; osip_getsystemtime &rArr; osip_gettimeofday
</UL>
<BR>[Calls]<UL><LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nict_handle_transport_error
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_set_state
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_callback
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;via_get_protocol
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_get_knownheaderlist
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_gettimeofday
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_gettimeofday
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nict_fsm.o(.data)
</UL>
<P><STRONG><a name="[16]"></a>nist_rcv_request</STRONG> (Thumb, 368 bytes, Stack size 16 bytes, nist_fsm.o(i.nist_rcv_request))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = nist_rcv_request &rArr; __osip_transaction_snd_xxx &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nist_handle_transport_error
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_snd_xxx
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_free
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_set_state
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_callback
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nist_fsm.o(.data)
</UL>
<P><STRONG><a name="[17]"></a>nist_snd_1xx</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, nist_fsm.o(i.nist_snd_1xx))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = nist_snd_1xx &rArr; __osip_transaction_snd_xxx &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nist_handle_transport_error
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_snd_xxx
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_free
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_set_state
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nist_fsm.o(.data)
</UL>
<P><STRONG><a name="[18]"></a>nist_snd_23456xx</STRONG> (Thumb, 206 bytes, Stack size 16 bytes, nist_fsm.o(i.nist_snd_23456xx))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = nist_snd_23456xx &rArr; __osip_transaction_snd_xxx &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nist_handle_transport_error
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_snd_xxx
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_free
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_set_state
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_callback
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_gettimeofday
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_gettimeofday
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nist_fsm.o(.data)
</UL>
<P><STRONG><a name="[14c]"></a>osip_MD5Final</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, osip_md5c.o(i.osip_MD5Final))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = osip_MD5Final &rArr; osip_MD5Update &rArr; osip_MD5Transform &rArr; osip_Decode
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_MD5Update
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_MD5_memset
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_Encode
</UL>
<BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_reg_init
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DigestCalcResponse
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DigestCalcHA1
</UL>

<P><STRONG><a name="[149]"></a>osip_MD5Init</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, osip_md5c.o(i.osip_MD5Init))
<BR><BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_reg_init
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DigestCalcResponse
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DigestCalcHA1
</UL>

<P><STRONG><a name="[14b]"></a>osip_MD5Update</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, osip_md5c.o(i.osip_MD5Update))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = osip_MD5Update &rArr; osip_MD5Transform &rArr; osip_Decode
</UL>
<BR>[Calls]<UL><LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_MD5_memcpy
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_MD5Transform
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_MD5Final
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_reg_init
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DigestCalcResponse
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DigestCalcHA1
</UL>

<P><STRONG><a name="[b4]"></a>osip_authorization_clone</STRONG> (Thumb, 558 bytes, Stack size 24 bytes, osip_authorization.o(i.osip_authorization_clone))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = osip_authorization_clone &rArr; osip_strdup &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strdup
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_authorization_init
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_authorization_free
</UL>
<BR>[Called By]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_response_out_of_transaction
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ict_fsm.o(i.ict_create_ack)
<LI> osip_message.o(i.osip_message_clone)
</UL>
<P><STRONG><a name="[a4]"></a>osip_authorization_free</STRONG> (Thumb, 190 bytes, Stack size 8 bytes, osip_authorization.o(i.osip_authorization_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = osip_authorization_free &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_authorization_clone
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_authorization
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_proxy_authorization
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_create_proxy_authorization_header
</UL>
<BR>[Address Reference Count : 3]<UL><LI> osip_message.o(i.osip_message_free)
<LI> excall_api.o(i._eXosip_call_retry_request)
<LI> exregister_api.o(i._eXosip_register_build_register)
</UL>
<P><STRONG><a name="[234]"></a>osip_authorization_get_realm</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, osip_authorization.o(i.osip_authorization_get_realm))
<BR><BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_create_proxy_authorization_header
</UL>

<P><STRONG><a name="[229]"></a>osip_authorization_init</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, osip_authorization.o(i.osip_authorization_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = osip_authorization_init &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_authorization_clone
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_authorization
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_proxy_authorization
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_create_proxy_authorization_header
</UL>

<P><STRONG><a name="[3e1]"></a>osip_authorization_parse</STRONG> (Thumb, 828 bytes, Stack size 40 bytes, osip_authorization.o(i.osip_authorization_parse))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = osip_authorization_parse &rArr; __osip_quoted_string_set &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strncpy
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_token_set
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_quoted_string_set
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_quote_find
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_authorization
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_proxy_authorization
</UL>

<P><STRONG><a name="[232]"></a>osip_authorization_set_algorithm</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, osip_authorization.o(i.osip_authorization_set_algorithm))
<BR><BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_create_proxy_authorization_header
</UL>

<P><STRONG><a name="[22a]"></a>osip_authorization_set_auth_type</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, osip_authorization.o(i.osip_authorization_set_auth_type))
<BR><BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_create_proxy_authorization_header
</UL>

<P><STRONG><a name="[238]"></a>osip_authorization_set_cnonce</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, osip_authorization.o(i.osip_authorization_set_cnonce))
<BR><BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_create_proxy_authorization_header
</UL>

<P><STRONG><a name="[236]"></a>osip_authorization_set_message_qop</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, osip_authorization.o(i.osip_authorization_set_message_qop))
<BR><BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_create_proxy_authorization_header
</UL>

<P><STRONG><a name="[22e]"></a>osip_authorization_set_nonce</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, osip_authorization.o(i.osip_authorization_set_nonce))
<BR><BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_create_proxy_authorization_header
</UL>

<P><STRONG><a name="[237]"></a>osip_authorization_set_nonce_count</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, osip_authorization.o(i.osip_authorization_set_nonce_count))
<BR><BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_create_proxy_authorization_header
</UL>

<P><STRONG><a name="[230]"></a>osip_authorization_set_opaque</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, osip_authorization.o(i.osip_authorization_set_opaque))
<BR><BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_create_proxy_authorization_header
</UL>

<P><STRONG><a name="[22c]"></a>osip_authorization_set_realm</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, osip_authorization.o(i.osip_authorization_set_realm))
<BR><BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_create_proxy_authorization_header
</UL>

<P><STRONG><a name="[239]"></a>osip_authorization_set_response</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, osip_authorization.o(i.osip_authorization_set_response))
<BR><BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_create_proxy_authorization_header
</UL>

<P><STRONG><a name="[231]"></a>osip_authorization_set_uri</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, osip_authorization.o(i.osip_authorization_set_uri))
<BR><BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_create_proxy_authorization_header
</UL>

<P><STRONG><a name="[f7]"></a>osip_authorization_to_str</STRONG> (Thumb, 994 bytes, Stack size 24 bytes, osip_authorization.o(i.osip_authorization_to_str))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = osip_authorization_to_str &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strn_append
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_str_append
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osip_message_to_str.o(.constdata)
</UL>
<P><STRONG><a name="[d1]"></a>osip_body_clone</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, osip_body.o(i.osip_body_clone))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = osip_body_clone &rArr; osip_content_type_clone &rArr; osip_uri_param_clone &rArr; osip_strdup &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_clone
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_type_clone
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_init
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_free
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osip_message.o(i.osip_message_clone)
</UL>
<P><STRONG><a name="[d5]"></a>osip_body_free</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, osip_body.o(i.osip_body_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = osip_body_free &rArr; osip_content_type_free &rArr; osip_uri_param_freelist &rArr; osip_list_remove &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_type_free
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_special_free
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_body_mime
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_body
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_clone
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osip_message.o(i.osip_message_free)
</UL>
<P><STRONG><a name="[3e2]"></a>osip_body_init</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, osip_body.o(i.osip_body_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = osip_body_init &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_init
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_body_mime
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_body
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_clone
</UL>

<P><STRONG><a name="[3e5]"></a>osip_body_parse</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, osip_body.o(i.osip_body_parse))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = osip_body_parse &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_body
</UL>

<P><STRONG><a name="[3e9]"></a>osip_body_parse_mime</STRONG> (Thumb, 182 bytes, Stack size 32 bytes, osip_body.o(i.osip_body_parse_mime))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = osip_body_parse_mime &rArr; osip_body_parse_header &rArr; osip_body_set_contenttype &rArr; osip_content_type_parse &rArr; __osip_generic_param_parseall &rArr; osip_uri_param_add &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_parse_header
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_body_mime
</UL>

<P><STRONG><a name="[3e7]"></a>osip_body_set_contenttype</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, osip_body.o(i.osip_body_set_contenttype))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = osip_body_set_contenttype &rArr; osip_content_type_parse &rArr; __osip_generic_param_parseall &rArr; osip_uri_param_add &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_type_parse
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_type_init
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_type_free
</UL>
<BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_parse_header
</UL>

<P><STRONG><a name="[3e8]"></a>osip_body_set_header</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, osip_body.o(i.osip_body_set_header))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = osip_body_set_header &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strdup
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_add
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_header_init
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_header_free
</UL>
<BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_parse_header
</UL>

<P><STRONG><a name="[2c1]"></a>osip_body_to_str</STRONG> (Thumb, 502 bytes, Stack size 64 bytes, osip_body.o(i.osip_body_to_str))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = osip_body_to_str &rArr; osip_content_type_to_str &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_next
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_first
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_size
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_header_to_str
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_type_to_str
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strn_append
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_str_append
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realloc
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_osip_message_to_str
</UL>

<P><STRONG><a name="[1f2]"></a>osip_build_random_number</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, osip_port.o(i.osip_build_random_number))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = osip_build_random_number
</UL>
<BR>[Calls]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_update_top_via
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_add_authentication_information
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_keepalive
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_request_add_via
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_malloc_new_random
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_generate_random
</UL>

<P><STRONG><a name="[1e2]"></a>osip_call_id_clone</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, osip_call_id.o(i.osip_call_id_clone))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = osip_call_id_clone &rArr; osip_strdup &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strdup
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_id_init
</UL>
<BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_clone
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ict_create_ack
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_set_call_id
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_cancel
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_build_response_default
</UL>

<P><STRONG><a name="[3ef]"></a>osip_call_id_free</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, osip_call_id.o(i.osip_call_id_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = osip_call_id_free &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_call_id
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_free
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_free2
</UL>

<P><STRONG><a name="[26c]"></a>osip_call_id_init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, osip_call_id.o(i.osip_call_id_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = osip_call_id_init &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_call_id
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_id_clone
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_request_out_of_dialog
</UL>

<P><STRONG><a name="[1dc]"></a>osip_call_id_match</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, osip_call_id.o(i.osip_call_id_match))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = osip_call_id_match &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_matching_request_osip_to_xist_17_2_3
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_match_update_for_invite
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cancel_match_invite
</UL>

<P><STRONG><a name="[3f0]"></a>osip_call_id_parse</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, osip_call_id.o(i.osip_call_id_parse))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = osip_call_id_parse &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_clrncpy
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_call_id
</UL>

<P><STRONG><a name="[26d]"></a>osip_call_id_set_number</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, osip_call_id.o(i.osip_call_id_set_number))
<BR><BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_request_out_of_dialog
</UL>

<P><STRONG><a name="[f4]"></a>osip_call_id_to_str</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, osip_call_id.o(i.osip_call_id_to_str))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = osip_call_id_to_str &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_dialog_match_as_uas
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_dialog_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osip_message_to_str.o(.constdata)
</UL>
<P><STRONG><a name="[cd]"></a>osip_call_info_clone</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, osip_call_info.o(i.osip_call_info_clone))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = osip_call_info_clone &rArr; osip_list_clone &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strdup
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_info_init
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_info_free
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_clone
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osip_message.o(i.osip_message_clone)
</UL>
<P><STRONG><a name="[d2]"></a>osip_call_info_free</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, osip_call_info.o(i.osip_call_info_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = osip_call_info_free &rArr; osip_uri_param_freelist &rArr; osip_list_remove &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_freelist
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_send_answer
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_call_info
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_info_clone
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_retry_request
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv2xx_4invite
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv2xx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osip_message.o(i.osip_message_free)
</UL>
<P><STRONG><a name="[21e]"></a>osip_call_info_init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, osip_call_info.o(i.osip_call_info_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = osip_call_info_init &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_init
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_send_answer
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_call_info
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_info_clone
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_retry_request
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv2xx_4invite
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv2xx
</UL>

<P><STRONG><a name="[3f2]"></a>osip_call_info_parse</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, osip_call_info.o(i.osip_call_info_parse))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = osip_call_info_parse &rArr; __osip_generic_param_parseall &rArr; osip_uri_param_add &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_generic_param_parseall
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_clrncpy
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
</UL>
<BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_call_info
</UL>

<P><STRONG><a name="[f9]"></a>osip_call_info_to_str</STRONG> (Thumb, 182 bytes, Stack size 56 bytes, osip_call_info.o(i.osip_call_info_to_str))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = osip_call_info_to_str &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_next
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_first
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realloc
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_send_answer
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_retry_request
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osip_message_to_str.o(.constdata)
</UL>
<P><STRONG><a name="[1bf]"></a>osip_clrncpy</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, osip_port.o(i.osip_clrncpy))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = osip_clrncpy &rArr; osip_clrspace &rArr; strspn
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strncpy
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_clrspace
</UL>
<BR>[Called By]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_multiple_header
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msg_headers_parse
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_startline_parsereq
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_header
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_parse
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_cseq_parse
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_disposition_parse
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_parse
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_info_parse
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_id_parse
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_type_parse
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_parse_header
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_token_set
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_via_parse
</UL>

<P><STRONG><a name="[3f3]"></a>osip_clrspace</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, osip_port.o(i.osip_clrspace))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = osip_clrspace &rArr; strspn
</UL>
<BR>[Calls]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strspn
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_clrncpy
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_set
</UL>

<P><STRONG><a name="[3f4]"></a>osip_contact_parse</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, osip_contact.o(i.osip_contact_parse))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = osip_contact_parse &rArr; osip_from_parse &rArr; osip_uri_parse &rArr; osip_uri_parse_headers &rArr; __osip_uri_unescape &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strdup
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_parse
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_contact
</UL>

<P><STRONG><a name="[f6]"></a>osip_contact_to_str</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, osip_contact.o(i.osip_contact_to_str))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = osip_contact_to_str &rArr; osip_from_to_str &rArr; osip_uri_to_str &rArr; __osip_uri_escape_userinfo &rArr; __osip_uri_escape_nonascii_and_nondef &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strdup
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_to_str
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osip_message_to_str.o(.constdata)
</UL>
<P><STRONG><a name="[21f]"></a>osip_content_disposition_parse</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, osip_content_disposition.o(i.osip_content_disposition_parse))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = osip_content_disposition_parse &rArr; __osip_generic_param_parseall &rArr; osip_uri_param_add &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_generic_param_parseall
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_clrncpy
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_send_answer
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_retry_request
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv2xx_4invite
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv2xx
</UL>

<P><STRONG><a name="[3f5]"></a>osip_content_length_clone</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, osip_content_length.o(i.osip_content_length_clone))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = osip_content_length_clone &rArr; osip_strdup &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strdup
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_length_init
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_length_free
</UL>
<BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_clone
</UL>

<P><STRONG><a name="[2b9]"></a>osip_content_length_free</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, osip_content_length.o(i.osip_content_length_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = osip_content_length_free &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_osip_message_parse
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_content_length
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_length_clone
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_free
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_mime_version
</UL>

<P><STRONG><a name="[3f6]"></a>osip_content_length_init</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, osip_content_length.o(i.osip_content_length_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = osip_content_length_init &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_content_length
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_length_clone
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_mime_version
</UL>

<P><STRONG><a name="[3f7]"></a>osip_content_length_parse</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, osip_content_length.o(i.osip_content_length_parse))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = osip_content_length_parse &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strncpy
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_content_length
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_mime_version
</UL>

<P><STRONG><a name="[fb]"></a>osip_content_length_to_str</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, osip_content_length.o(i.osip_content_length_to_str))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = osip_content_length_to_str &rArr; osip_strdup &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strdup
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osip_message_to_str.o(.constdata)
</UL>
<P><STRONG><a name="[3e3]"></a>osip_content_type_clone</STRONG> (Thumb, 132 bytes, Stack size 48 bytes, osip_content_type.o(i.osip_content_type_clone))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = osip_content_type_clone &rArr; osip_uri_param_clone &rArr; osip_strdup &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strdup
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_clone
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_next
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_first
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_add
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_type_init
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_type_free
</UL>
<BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_clone
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_clone
</UL>

<P><STRONG><a name="[3e4]"></a>osip_content_type_free</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, osip_content_type.o(i.osip_content_type_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = osip_content_type_free &rArr; osip_uri_param_freelist &rArr; osip_list_remove &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_freelist
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_content_type
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_free
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_type_clone
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_set_contenttype
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_free
</UL>

<P><STRONG><a name="[3ea]"></a>osip_content_type_init</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, osip_content_type.o(i.osip_content_type_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = osip_content_type_init &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_init
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_content_type
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_type_clone
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_set_contenttype
</UL>

<P><STRONG><a name="[3eb]"></a>osip_content_type_parse</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, osip_content_type.o(i.osip_content_type_parse))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = osip_content_type_parse &rArr; __osip_generic_param_parseall &rArr; osip_uri_param_add &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_generic_param_parseall
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_clrncpy
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_content_type
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_set_contenttype
</UL>

<P><STRONG><a name="[fa]"></a>osip_content_type_to_str</STRONG> (Thumb, 242 bytes, Stack size 56 bytes, osip_content_type.o(i.osip_content_type_to_str))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = osip_content_type_to_str &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_next
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_first
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_size
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realloc
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_to_str
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osip_message_to_str.o(.constdata)
</UL>
<P><STRONG><a name="[1e4]"></a>osip_cseq_clone</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, osip_cseq.o(i.osip_cseq_clone))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = osip_cseq_clone &rArr; osip_strdup &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strdup
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_cseq_init
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_cseq_free
</UL>
<BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_clone
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ict_create_ack
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_set_cseq
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_cancel
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_build_response_default
</UL>

<P><STRONG><a name="[207]"></a>osip_cseq_free</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, osip_cseq.o(i.osip_cseq_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = osip_cseq_free &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_cseq
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_free
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_cseq_clone
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_free2
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_build_request_within_dialog
</UL>

<P><STRONG><a name="[206]"></a>osip_cseq_init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, osip_cseq.o(i.osip_cseq_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = osip_cseq_init &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_cseq
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_cseq_clone
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_request_out_of_dialog
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_build_request_within_dialog
</UL>

<P><STRONG><a name="[1de]"></a>osip_cseq_match</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, osip_cseq.o(i.osip_cseq_match))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = osip_cseq_match &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_matching_request_osip_to_xist_17_2_3
</UL>

<P><STRONG><a name="[3f8]"></a>osip_cseq_parse</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, osip_cseq.o(i.osip_cseq_parse))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = osip_cseq_parse &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_clrncpy
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_cseq
</UL>

<P><STRONG><a name="[209]"></a>osip_cseq_set_method</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, osip_cseq.o(i.osip_cseq_set_method))
<BR><BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_request_out_of_dialog
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_build_request_within_dialog
</UL>

<P><STRONG><a name="[208]"></a>osip_cseq_set_number</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, osip_cseq.o(i.osip_cseq_set_number))
<BR><BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_request_out_of_dialog
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_build_request_within_dialog
</UL>

<P><STRONG><a name="[f5]"></a>osip_cseq_to_str</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, osip_cseq.o(i.osip_cseq_to_str))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = osip_cseq_to_str &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osip_message_to_str.o(.constdata)
</UL>
<P><STRONG><a name="[19c]"></a>osip_dialog_free</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, osip_dialog.o(i.osip_dialog_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = osip_dialog_free &rArr; osip_from_free &rArr; osip_uri_free &rArr; osip_uri_param_freelist &rArr; osip_list_remove &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_special_free
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_free
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_dialog_init
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_dialog_free
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_terminate_with_header
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_dialog_init_as_uas
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_dialog_init_as_uac
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv2xx_4invite
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv1xx
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_delete_early_dialog
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_response_out_of_transaction
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_newrequest
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_bye
</UL>

<P><STRONG><a name="[24e]"></a>osip_dialog_init_as_uac</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, osip_dialog.o(i.osip_dialog_init_as_uac))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = osip_dialog_init_as_uac &rArr; __osip_dialog_init &rArr; osip_from_clone &rArr; osip_uri_clone &rArr; osip_list_clone &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_dialog_init
</UL>
<BR>[Called By]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_dialog_init_as_uac
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv2xx_4invite
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv1xx
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_response_out_of_transaction
</UL>

<P><STRONG><a name="[24d]"></a>osip_dialog_init_as_uac_with_remote_request</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, osip_dialog.o(i.osip_dialog_init_as_uac_with_remote_request))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = osip_dialog_init_as_uac_with_remote_request &rArr; __osip_dialog_init &rArr; osip_from_clone &rArr; osip_uri_clone &rArr; osip_list_clone &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_dialog_init
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Called By]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_dialog_init_as_uac
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_newrequest
</UL>

<P><STRONG><a name="[250]"></a>osip_dialog_init_as_uas</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, osip_dialog.o(i.osip_dialog_init_as_uas))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = osip_dialog_init_as_uas &rArr; __osip_dialog_init &rArr; osip_from_clone &rArr; osip_uri_clone &rArr; osip_list_clone &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_dialog_init
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Called By]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_dialog_init_as_uas
</UL>

<P><STRONG><a name="[294]"></a>osip_dialog_match_as_uas</STRONG> (Thumb, 224 bytes, Stack size 24 bytes, osip_dialog.o(i.osip_dialog_match_as_uas))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = osip_dialog_match_as_uas &rArr; osip_call_id_to_str &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_get_byname
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_compare
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_id_to_str
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_newrequest
</UL>

<P><STRONG><a name="[1ff]"></a>osip_dialog_set_state</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, osip_dialog.o(i.osip_dialog_set_state))
<BR><BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_send_answer
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_answer_invite_123456xx
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv2xx_4invite
</UL>

<P><STRONG><a name="[296]"></a>osip_dialog_update_osip_cseq_as_uas</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, osip_dialog.o(i.osip_dialog_update_osip_cseq_as_uas))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = osip_dialog_update_osip_cseq_as_uas &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_newrequest
</UL>

<P><STRONG><a name="[2f2]"></a>osip_dialog_update_route_set_as_uac</STRONG> (Thumb, 230 bytes, Stack size 32 bytes, osip_dialog.o(i.osip_dialog_update_route_set_as_uac))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = osip_dialog_update_route_set_as_uac &rArr; osip_from_clone &rArr; osip_uri_clone &rArr; osip_list_clone &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_init
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_size
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_eol
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_add
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_clone
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_special_free
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_free
</UL>
<BR>[Called By]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv2xx_4invite
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv1xx
</UL>

<P><STRONG><a name="[297]"></a>osip_dialog_update_route_set_as_uas</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, osip_dialog.o(i.osip_dialog_update_route_set_as_uas))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = osip_dialog_update_route_set_as_uas &rArr; osip_from_clone &rArr; osip_uri_clone &rArr; osip_list_clone &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_eol
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_clone
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_free
</UL>
<BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_newrequest
</UL>

<P><STRONG><a name="[2f3]"></a>osip_dialog_update_tag_as_uac</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, osip_dialog.o(i.osip_dialog_update_tag_as_uac))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = osip_dialog_update_tag_as_uac &rArr; osip_strdup &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strdup
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_get_byname
</UL>
<BR>[Called By]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv2xx_4invite
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv1xx
</UL>

<P><STRONG><a name="[28b]"></a>osip_event_free</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, osip_event.o(i.osip_event_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = osip_event_free &rArr; osip_message_free &rArr; osip_from_free &rArr; osip_uri_free &rArr; osip_uri_param_freelist &rArr; osip_list_remove &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_free
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_response_out_of_transaction
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_newrequest
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_ack
</UL>

<P><STRONG><a name="[252]"></a>osip_fifo_add</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, port_fifo.o(i.osip_fifo_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = osip_fifo_add &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_add
</UL>
<BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_add_event
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_event_add
</UL>

<P><STRONG><a name="[312]"></a>osip_fifo_free</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, port_fifo.o(i.osip_fifo_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = osip_fifo_free &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_quit
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_free2
</UL>

<P><STRONG><a name="[30e]"></a>osip_fifo_init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, port_fifo.o(i.osip_fifo_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = osip_fifo_init
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_init
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_init
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_init
</UL>

<P><STRONG><a name="[309]"></a>osip_fifo_tryget</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, port_fifo.o(i.osip_fifo_tryget))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = osip_fifo_tryget &rArr; osip_list_remove &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_remove
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_size
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_quit
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_event_wait
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_nist_execute
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_ist_execute
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_free2
</UL>

<P><STRONG><a name="[27e]"></a>osip_find_transaction_and_add_event</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, osip.o(i.osip_find_transaction_and_add_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = osip_find_transaction_and_add_event &rArr; __osip_find_transaction &rArr; osip_transaction_find &rArr; __osip_transaction_matching_request_osip_to_xist_17_2_3 &rArr; osip_via_match &rArr; osip_via_to_str &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_find_transaction
</UL>
<BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_handle_incoming_message
</UL>

<P><STRONG><a name="[ce]"></a>osip_from_clone</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, osip_from.o(i.osip_from_clone))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = osip_from_clone &rArr; osip_uri_clone &rArr; osip_list_clone &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strdup
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_init
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_clone
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_clone
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_free
</UL>
<BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_clone
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ict_create_ack
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_set_to
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_set_from
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_dialog_update_route_set_as_uas
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_dialog_update_route_set_as_uac
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_dialog_init
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_cancel
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_complete_answer_that_establish_a_dialog
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_build_response_default
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_build_request_within_dialog
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog_fill_route_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osip_message.o(i.osip_message_clone)
</UL>
<P><STRONG><a name="[3f9]"></a>osip_from_compare</STRONG> (Thumb, 282 bytes, Stack size 40 bytes, osip_from.o(i.osip_from_compare))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = osip_from_compare &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_next
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_first
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_dialog_match_as_uas
</UL>

<P><STRONG><a name="[cc]"></a>osip_from_free</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, osip_from.o(i.osip_from_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = osip_from_free &rArr; osip_uri_free &rArr; osip_uri_param_freelist &rArr; osip_list_remove &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_free
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_freelist
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_from
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_contact
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_free
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_clone
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_free2
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_dialog_update_route_set_as_uas
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_dialog_update_route_set_as_uac
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_dialog_free
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_to
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_route
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_record_route
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_request_out_of_dialog
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_retry_request
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_register_add_contact
</UL>
<BR>[Address Reference Count : 3]<UL><LI> osip_dialog.o(i.osip_dialog_free)
<LI> osip_dialog.o(i.osip_dialog_update_route_set_as_uac)
<LI> osip_message.o(i.osip_message_free)
</UL>
<P><STRONG><a name="[26a]"></a>osip_from_init</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, osip_from.o(i.osip_from_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = osip_from_init &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_init
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_from
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_contact
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_clone
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_to
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_route
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_record_route
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_request_out_of_dialog
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_register_add_contact
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog_fill_route_set
</UL>

<P><STRONG><a name="[26b]"></a>osip_from_parse</STRONG> (Thumb, 630 bytes, Stack size 48 bytes, osip_from.o(i.osip_from_parse))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = osip_from_parse &rArr; osip_uri_parse &rArr; osip_uri_parse_headers &rArr; __osip_uri_unescape &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_parse
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_init
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_generic_param_parseall
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_clrncpy
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strncpy
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_quote_find
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_from
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_contact_parse
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_to
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_route
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_record_route
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_request_out_of_dialog
</UL>

<P><STRONG><a name="[1dd]"></a>osip_from_tag_match</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, osip_from.o(i.osip_from_tag_match))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = osip_from_tag_match &rArr; osip_uri_param_get_byname &rArr; strncasecmp
</UL>
<BR>[Calls]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_get_byname
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_matching_request_osip_to_xist_17_2_3
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cancel_match_invite
</UL>

<P><STRONG><a name="[f3]"></a>osip_from_to_str</STRONG> (Thumb, 284 bytes, Stack size 64 bytes, osip_from.o(i.osip_from_to_str))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = osip_from_to_str &rArr; osip_uri_to_str &rArr; __osip_uri_escape_userinfo &rArr; __osip_uri_escape_nonascii_and_nondef &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_to_str
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_next
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_first
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realloc
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_contact_to_str
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osip_message_to_str.o(.constdata)
</UL>
<P><STRONG><a name="[1b7]"></a>osip_getsystemtime</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, osip_time.o(i.osip_getsystemtime))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = osip_getsystemtime &rArr; osip_gettimeofday
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_gettimeofday
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_send_answer
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_automatic_action
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_init
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_kill_transaction_callback
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_dialog_set_200ok
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_send_message
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_keepalive
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_check_connection
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_send_message
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_keepalive
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_check_connection
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_check_all_connection
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_new_socket
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_retransmit_lost200ok
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_mark_registration_expired
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_dialog_init_as_uas
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_dialog_init_as_uac
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv2xx_4invite
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv2xx
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_register_contact_is_modified
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_renew_expire_time
</UL>

<P><STRONG><a name="[1b1]"></a>osip_gettimeofday</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, osip_time.o(i.osip_gettimeofday))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = osip_gettimeofday
</UL>
<BR>[Calls]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gettimeofday
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_set_option
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_init
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_getsystemtime
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nist_snd_23456xx
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_nict_timeout_e_event
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nict_snd_request
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nict_rcv_23456xx
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nict_rcv_1xx
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_nict_init
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_ist_timeout_g_event
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ist_snd_3456xx
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ist_rcv_ack
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_kill_transaction_callback
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_ict_timeout_a_event
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ict_rcv_3456xx
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_ict_init
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_mark_all_transaction_transport_error
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_mark_all_transaction_force_send
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcvregister_failure
</UL>

<P><STRONG><a name="[1ba]"></a>osip_hash</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, osip_port.o(i.osip_hash))
<BR><BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_is_known_header
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parser_init
</UL>

<P><STRONG><a name="[c9]"></a>osip_header_clone</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, osip_header.o(i.osip_header_clone))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = osip_header_clone &rArr; osip_strdup &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strdup
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_header_init
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_header_free
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_send_answer
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_retry_request
</UL>
<BR>[Address Reference Count : 2]<UL><LI> osip_body.o(i.osip_body_clone)
<LI> osip_message.o(i.osip_message_clone)
</UL>
<P><STRONG><a name="[ca]"></a>osip_header_free</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, osip_header.o(i.osip_header_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = osip_header_free &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_send_answer
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_header
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_header_clone
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_set_header
</UL>
<BR>[Address Reference Count : 2]<UL><LI> osip_body.o(i.osip_body_free)
<LI> osip_message.o(i.osip_message_free)
</UL>
<P><STRONG><a name="[3ec]"></a>osip_header_init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, osip_header.o(i.osip_header_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = osip_header_init &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_header
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_header_clone
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_set_header
</UL>

<P><STRONG><a name="[2c0]"></a>osip_header_to_str</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, osip_header.o(i.osip_header_to_str))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = osip_header_to_str &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_to_str
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_osip_message_to_str
</UL>

<P><STRONG><a name="[1b3]"></a>osip_ict_set_destination</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, ict.o(i.osip_ict_set_destination))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = osip_ict_set_destination &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ict_rcv_3456xx
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_ict_init
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_send_message
</UL>

<P><STRONG><a name="[1]"></a>osip_ict_timeout_a_event</STRONG> (Thumb, 192 bytes, Stack size 32 bytes, ict_fsm.o(i.osip_ict_timeout_a_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = osip_ict_timeout_a_event &rArr; ict_handle_transport_error &rArr; __osip_kill_transaction_callback &rArr; osip_getsystemtime &rArr; osip_gettimeofday
</UL>
<BR>[Calls]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_callback
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ict_handle_transport_error
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;via_get_protocol
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_get_knownheaderlist
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_gettimeofday
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_gettimeofday
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ict_fsm.o(.data)
</UL>
<P><STRONG><a name="[2]"></a>osip_ict_timeout_b_event</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, ict_fsm.o(i.osip_ict_timeout_b_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = osip_ict_timeout_b_event &rArr; ict_handle_transport_error &rArr; __osip_kill_transaction_callback &rArr; osip_getsystemtime &rArr; osip_gettimeofday
</UL>
<BR>[Calls]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_set_state
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_callback
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_kill_transaction_callback
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ict_handle_transport_error
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ict_fsm.o(.data)
</UL>
<P><STRONG><a name="[7]"></a>osip_ict_timeout_d_event</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, ict_fsm.o(i.osip_ict_timeout_d_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = osip_ict_timeout_d_event &rArr; __osip_kill_transaction_callback &rArr; osip_getsystemtime &rArr; osip_gettimeofday
</UL>
<BR>[Calls]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_set_state
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_kill_transaction_callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ict_fsm.o(.data)
</UL>
<P><STRONG><a name="[405]"></a>osip_id_mutex_lock</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, osip.o(i.osip_id_mutex_lock))
<BR><BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_init
</UL>

<P><STRONG><a name="[406]"></a>osip_id_mutex_unlock</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, osip.o(i.osip_id_mutex_unlock))
<BR><BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_init
</UL>

<P><STRONG><a name="[30c]"></a>osip_init</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, osip.o(i.osip_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = osip_init &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parser_init
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_init
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_init
</UL>

<P><STRONG><a name="[292]"></a>osip_ist_execute</STRONG> (Thumb, 156 bytes, Stack size 48 bytes, osip.o(i.osip_ist_execute))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = osip_ist_execute &rArr; osip_transaction_execute &rArr; osip_message_free &rArr; osip_from_free &rArr; osip_uri_free &rArr; osip_uri_param_freelist &rArr; osip_list_remove &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_execute
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_next
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_first
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_fifo_tryget
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_size
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_reinvite
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_new_invite
</UL>

<P><STRONG><a name="[9]"></a>osip_ist_timeout_g_event</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, ist_fsm.o(i.osip_ist_timeout_g_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = osip_ist_timeout_g_event &rArr; __osip_transaction_snd_xxx &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_snd_xxx
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ist_handle_transport_error
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_callback
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_gettimeofday
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_gettimeofday
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ist_fsm.o(.data)
</UL>
<P><STRONG><a name="[a]"></a>osip_ist_timeout_h_event</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, ist_fsm.o(i.osip_ist_timeout_h_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = osip_ist_timeout_h_event &rArr; __osip_kill_transaction_callback &rArr; osip_getsystemtime &rArr; osip_gettimeofday
</UL>
<BR>[Calls]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_set_state
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_kill_transaction_callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ist_fsm.o(.data)
</UL>
<P><STRONG><a name="[f]"></a>osip_ist_timeout_i_event</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, ist_fsm.o(i.osip_ist_timeout_i_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = osip_ist_timeout_i_event &rArr; __osip_kill_transaction_callback &rArr; osip_getsystemtime &rArr; osip_gettimeofday
</UL>
<BR>[Calls]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_set_state
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_kill_transaction_callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ist_fsm.o(.data)
</UL>
<P><STRONG><a name="[196]"></a>osip_list_add</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, osip_list.o(i.osip_list_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_send_answer
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_header
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_add
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_contact
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_call_info
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_fifo_add
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_add_nist
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_add_nict
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_add_ist
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_add_ict
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_clone
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ict_create_ack
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_type_clone
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_body_mime
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_body
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_set_header
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_authorization
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_dialog_update_route_set_as_uac
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_dialog_init
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_www_authenticate
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_via
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_route
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_record_route
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_proxy_authorization
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_proxy_authenticate
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_reg_free
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_request_out_of_dialog
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_cancel
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_dialog_free
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_complete_answer_that_establish_a_dialog
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_free
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_build_response_default
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_add_authentication_information
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_send_request
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_retry_request
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_create_transaction
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_send_message
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_build_message
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_register_build_register
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_register_add_contact
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog_fill_route_set
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_response_out_of_transaction
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_reinvite
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_newrequest
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_new_invite
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_message_within_dialog
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_cancel
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_bye
</UL>

<P><STRONG><a name="[348]"></a>osip_list_clone</STRONG> (Thumb, 80 bytes, Stack size 48 bytes, osip_list.o(i.osip_list_clone))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = osip_list_clone &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_next
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_first
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_add
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_info_clone
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_clone
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_via_clone
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_clone
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_clone
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ict_create_ack
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_clone
</UL>

<P><STRONG><a name="[1a0]"></a>osip_list_eol</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, osip_list.o(i.osip_list_eol))
<BR><BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_quit
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_free
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_freelist
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ict_create_ack
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_special_free
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_dialog_update_route_set_as_uas
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_dialog_update_route_set_as_uac
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_dialog_init
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_osip_message_to_str
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_kill_transaction
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_dialog_free
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_build_request_within_dialog
</UL>

<P><STRONG><a name="[19f]"></a>osip_list_get</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, osip_list.o(i.osip_list_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = osip_list_get
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_quit
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_automatic_action
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_fix_last_via_header
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_header_get_byname
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_free
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_freelist
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_init
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_fifo_tryget
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_matching_response_osip_to_xict_17_1_3
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_matching_request_osip_to_xist_17_2_3
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_snd_xxx
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ict_create_ack
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_get_knownheaderlist
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_special_free
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_dialog_update_route_set_as_uas
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_dialog_update_route_set_as_uac
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_dialog_init
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_kill_transaction
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_update_top_via
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_snd_message
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_request_out_of_dialog
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_dialog_free
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_complete_answer_that_establish_a_dialog
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_retry_request
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_request_viamanager
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_message_contactmanager
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_srv_lookup
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_handle_rfc5626_ob
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_handle_received_rport
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cancel_match_invite
</UL>

<P><STRONG><a name="[1d2]"></a>osip_list_get_first</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, osip_list.o(i.osip_list_get_first))
<BR><BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_to_str
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_to_str
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_info_to_str
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_find
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_nist_execute
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_ist_execute
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_remove_nist_transaction
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_remove_nict_transaction
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_remove_ist_transaction
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_remove_ict_transaction
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_clone
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_get_byname
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_type_to_str
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_type_clone
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_to_str
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_compare
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_via_to_str
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat_headers_one_per_line
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_osip_message_to_str
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_request_out_of_dialog
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_cancel
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_find_last_out_invite
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_find_last_inc_invite
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_complete_answer_that_establish_a_dialog
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_build_response_default
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_transaction_find
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_retry_request
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_tl_update_contact
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_update_contact
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_register_build_register
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_mark_all_transaction_transport_error
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_mark_all_transaction_force_send
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_check_allow_header
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_transaction_find
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog_fill_route_set
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_update_expires_according_to_contact
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_cancel
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_find_last_out_transaction
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_find_last_inc_transaction
</UL>

<P><STRONG><a name="[1d4]"></a>osip_list_get_next</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, osip_list.o(i.osip_list_get_next))
<BR><BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_to_str
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_to_str
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_info_to_str
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_find
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_nist_execute
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_ist_execute
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_remove_nist_transaction
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_remove_nict_transaction
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_remove_ist_transaction
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_remove_ict_transaction
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_clone
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_get_byname
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_type_to_str
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_type_clone
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_to_str
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_compare
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_via_to_str
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat_headers_one_per_line
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_osip_message_to_str
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_request_out_of_dialog
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_cancel
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_find_last_out_invite
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_find_last_inc_invite
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_complete_answer_that_establish_a_dialog
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_build_response_default
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_transaction_find
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_retry_request
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_tl_update_contact
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_update_contact
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_register_build_register
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_mark_all_transaction_transport_error
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_mark_all_transaction_force_send
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_check_allow_header
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_transaction_find
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog_fill_route_set
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_update_expires_according_to_contact
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_cancel
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_find_last_out_transaction
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_find_last_inc_transaction
</UL>

<P><STRONG><a name="[19e]"></a>osip_list_init</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, osip_list.o(i.osip_list_init))
<BR><BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_init
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_init
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_init
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_info_init
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_init
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_init
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_type_init
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_init
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_fifo_init
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_dialog_update_route_set_as_uac
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_dialog_init
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_via_init
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_dialog_init_as_uas
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_dialog_init_as_uac
</UL>

<P><STRONG><a name="[1d3]"></a>osip_list_iterator_remove</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, osip_list.o(i.osip_list_iterator_remove))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = osip_list_iterator_remove &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_remove_nist_transaction
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_remove_nict_transaction
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_remove_ist_transaction
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_remove_ict_transaction
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_request_out_of_dialog
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_register_build_register
</UL>

<P><STRONG><a name="[219]"></a>osip_list_remove</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, osip_list.o(i.osip_list_remove))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = osip_list_remove &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_quit
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_free
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_freelist
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_fifo_tryget
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_special_free
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_request_out_of_dialog
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_dialog_free
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_retry_request
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_send_message
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_build_message
</UL>

<P><STRONG><a name="[269]"></a>osip_list_size</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, osip_list.o(i.osip_list_size))
<BR><BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_header_get_byname
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_fifo_tryget
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_nist_execute
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_ist_execute
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ict_create_ack
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_get_knownheaderlist
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_type_to_str
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_to_str
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_dialog_update_route_set_as_uac
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_request_out_of_dialog
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_update_expires_according_to_contact
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_handle_rfc5626_ob
</UL>

<P><STRONG><a name="[21a]"></a>osip_list_special_free</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, osip_list.o(i.osip_list_special_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = osip_list_special_free &rArr; osip_list_remove &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_remove
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_eol
</UL>
<BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_free
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_free
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_dialog_update_route_set_as_uac
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_dialog_free
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_retry_request
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_register_build_register
</UL>

<P><STRONG><a name="[217]"></a>osip_message_clone</STRONG> (Thumb, 742 bytes, Stack size 24 bytes, osip_message.o(i.osip_message_clone))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = osip_message_clone &rArr; osip_from_clone &rArr; osip_uri_clone &rArr; osip_list_clone &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strdup
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_length_clone
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_clone
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_init
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_free
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_clone
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_clone
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_cseq_clone
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_id_clone
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_type_clone
</UL>
<BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_dialog_set_200ok
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_retry_request
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_register_build_register
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_event_fill_messages
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_ack
</UL>

<P><STRONG><a name="[27a]"></a>osip_message_fix_last_via_header</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, osip_message_parse.o(i.osip_message_fix_last_via_header))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = osip_message_fix_last_via_header &rArr; osip_uri_param_add &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strdup
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_add
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_get_byname
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_handle_incoming_message
</UL>

<P><STRONG><a name="[1f5]"></a>osip_message_force_update</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, osip_message_to_str.o(i.osip_message_force_update))
<BR><BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_register_send_register
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_add_authentication_information
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_retry_request
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_send_message
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_tl_update_contact
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_request_viamanager
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_message_contactmanager
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_update_contact
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_build_message
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_register_build_register
</UL>

<P><STRONG><a name="[1fd]"></a>osip_message_free</STRONG> (Thumb, 254 bytes, Stack size 8 bytes, osip_message.o(i.osip_message_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = osip_message_free &rArr; osip_from_free &rArr; osip_uri_free &rArr; osip_uri_param_freelist &rArr; osip_list_remove &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_free
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_length_free
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_type_free
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_cseq_free
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_id_free
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_special_free
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_free
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_register_send_register
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_message_send_answer
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_event_free
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_send_answer
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_execute
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_clone
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nist_snd_23456xx
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nist_snd_1xx
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nist_rcv_request
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nict_rcv_23456xx
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nict_rcv_1xx
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ist_snd_3456xx
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ist_snd_2xx
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ist_snd_1xx
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ist_rcv_invite
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ist_rcv_ack
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ict_retransmit_ack
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ict_rcv_3456xx
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ict_rcv_2xx
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ict_rcv_1xx
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ict_create_ack
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_free2
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_event_free
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_request_out_of_dialog
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_cancel
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_dialog_set_200ok
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_dialog_free
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_build_response_default
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_build_request_within_dialog
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_answer_invite_123456xx
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_send_request
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_retry_request
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_create_transaction
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_create_cancel_transaction
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_handle_incoming_message
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_register_build_register
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_retransmit_lost200ok
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_response_out_of_transaction
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_new_invite
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_ack
</UL>

<P><STRONG><a name="[2bd]"></a>osip_message_get__property</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, osip_message_to_str.o(i.osip_message_get__property))
<BR><BR>[Called By]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_osip_message_to_str
</UL>

<P><STRONG><a name="[1af]"></a>osip_message_get_knownheaderlist</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, osip_message.o(i.osip_message_get_knownheaderlist))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = osip_message_get_knownheaderlist &rArr; osip_list_get
</UL>
<BR>[Calls]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_size
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get
</UL>
<BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_nist_init
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_nict_timeout_e_event
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nict_snd_request
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_nict_init
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_ist_init
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_ict_timeout_a_event
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ict_snd_invite
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ict_rcv_3456xx
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ict_create_ack
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_ict_init
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_snd_message
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_cancel
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_dialog_add_contact
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_complete_answer_that_establish_a_dialog
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_add_authentication_information
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_retry_request
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_send_message
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_tl_update_contact
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_build_message
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_register_build_register
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_register_add_contact
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_srv_lookup
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proxyauthorization_already_exist_for_realm
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;authorization_already_exist_for_realm
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_register_contact_is_modified
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_learn_port_from_via
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_response_out_of_transaction
</UL>

<P><STRONG><a name="[20e]"></a>osip_message_get_reason</STRONG> (Thumb, 98 bytes, Stack size 12 bytes, osip_message_parse.o(i.osip_message_get_reason))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = osip_message_get_reason
</UL>
<BR>[Called By]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_build_response_default
</UL>

<P><STRONG><a name="[2a3]"></a>osip_message_get_reason_phrase</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, osip_message_to_str.o(i.osip_message_get_reason_phrase))
<BR><BR>[Called By]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_send_default_answer
</UL>

<P><STRONG><a name="[21d]"></a>osip_message_header_get_byname</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, osip_header.o(i.osip_message_header_get_byname))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = osip_message_header_get_byname &rArr; strcasecmp
</UL>
<BR>[Calls]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_size
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_message_send_answer
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_message_build_answer
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_send_answer
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_retry_request
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_header_strcasestr
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_register_build_register
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_mark_registration_expired
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv2xx_4invite
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv2xx
</UL>

<P><STRONG><a name="[203]"></a>osip_message_init</STRONG> (Thumb, 206 bytes, Stack size 8 bytes, osip_message.o(i.osip_message_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = osip_message_init &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_init
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_clone
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ict_create_ack
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_request_out_of_dialog
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_cancel
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_build_response_default
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_build_request_within_dialog
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_handle_incoming_message
</UL>

<P><STRONG><a name="[279]"></a>osip_message_parse</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, osip_message_parse.o(i.osip_message_parse))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = osip_message_parse &rArr; _osip_message_parse &rArr; msg_osip_body_parse &rArr; osip_message_set_body_mime &rArr; osip_body_parse_mime &rArr; osip_body_parse_header &rArr; osip_body_set_contenttype &rArr; osip_content_type_parse &rArr; __osip_generic_param_parseall &rArr; osip_uri_param_add &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_osip_message_parse
</UL>
<BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_handle_incoming_message
</UL>

<P><STRONG><a name="[d6]"></a>osip_message_set_authorization</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, osip_authorization.o(i.osip_message_set_authorization))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = osip_message_set_authorization &rArr; osip_authorization_parse &rArr; __osip_quoted_string_set &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_add
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_authorization_parse
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_authorization_init
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_authorization_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osip_parser_cfg.o(i.parser_init)
</UL>
<P><STRONG><a name="[3c1]"></a>osip_message_set_body</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, osip_body.o(i.osip_message_set_body))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = osip_message_set_body &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_add
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_parse
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_init
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_free
</UL>
<BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msg_osip_body_parse
</UL>

<P><STRONG><a name="[3c3]"></a>osip_message_set_body_mime</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, osip_body.o(i.osip_message_set_body_mime))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = osip_message_set_body_mime &rArr; osip_body_parse_mime &rArr; osip_body_parse_header &rArr; osip_body_set_contenttype &rArr; osip_content_type_parse &rArr; __osip_generic_param_parseall &rArr; osip_uri_param_add &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_add
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_parse_mime
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_init
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_free
</UL>
<BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msg_osip_body_parse
</UL>

<P><STRONG><a name="[d8]"></a>osip_message_set_call_id</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, osip_call_id.o(i.osip_message_set_call_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = osip_message_set_call_id &rArr; osip_call_id_parse &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_id_parse
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_id_init
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_id_free
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_build_request_within_dialog
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osip_parser_cfg.o(i.parser_init)
</UL>
<P><STRONG><a name="[267]"></a>osip_message_set_call_info</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, osip_call_info.o(i.osip_message_set_call_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = osip_message_set_call_info &rArr; osip_call_info_parse &rArr; __osip_generic_param_parseall &rArr; osip_uri_param_add &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_info_parse
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_info_init
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_info_free
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_add
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_request_out_of_dialog
</UL>

<P><STRONG><a name="[d9]"></a>osip_message_set_contact</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, osip_contact.o(i.osip_message_set_contact))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = osip_message_set_contact &rArr; osip_contact_parse &rArr; osip_from_parse &rArr; osip_uri_parse &rArr; osip_uri_parse_headers &rArr; __osip_uri_unescape &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_init
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_contact_parse
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_add
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_free
</UL>
<BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_dialog_add_contact
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_complete_answer_that_establish_a_dialog
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_register
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osip_parser_cfg.o(i.parser_init)
</UL>
<P><STRONG><a name="[da]"></a>osip_message_set_content_length</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, osip_content_length.o(i.osip_message_set_content_length))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = osip_message_set_content_length &rArr; osip_content_length_parse &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_length_parse
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_length_init
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_length_free
</UL>
<BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msg_osip_body_parse
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_osip_message_parse
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_register
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_send_default_answer
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_new_invite
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_cancel
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_bye
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osip_parser_cfg.o(i.parser_init)
</UL>
<P><STRONG><a name="[d7]"></a>osip_message_set_content_type</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, osip_content_type.o(i.osip_message_set_content_type))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = osip_message_set_content_type &rArr; osip_content_type_parse &rArr; __osip_generic_param_parseall &rArr; osip_uri_param_add &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_type_parse
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_type_init
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_type_free
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_request_out_of_dialog
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osip_parser_cfg.o(i.parser_init)
</UL>
<P><STRONG><a name="[db]"></a>osip_message_set_cseq</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, osip_cseq.o(i.osip_message_set_cseq))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = osip_message_set_cseq &rArr; osip_cseq_parse &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_cseq_parse
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_cseq_init
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_cseq_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osip_parser_cfg.o(i.parser_init)
</UL>
<P><STRONG><a name="[dc]"></a>osip_message_set_from</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, osip_from.o(i.osip_message_set_from))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = osip_message_set_from &rArr; osip_from_parse &rArr; osip_uri_parse &rArr; osip_uri_parse_headers &rArr; __osip_uri_unescape &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_parse
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_init
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_free
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_request_out_of_dialog
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osip_parser_cfg.o(i.parser_init)
</UL>
<P><STRONG><a name="[20a]"></a>osip_message_set_header</STRONG> (Thumb, 184 bytes, Stack size 32 bytes, osip_header.o(i.osip_message_set_header))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = osip_message_set_header &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_add
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_header_init
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_header_free
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_clrncpy
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_message_send_answer
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_message_build_answer
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_send_answer
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_automatic_action
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set__header
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_request_out_of_dialog
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_cancel
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_build_response_default
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_build_request_within_dialog
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_terminate_with_header
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_retry_request
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_register
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_send_default_answer
</UL>

<P><STRONG><a name="[261]"></a>osip_message_set_method</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, osip_message.o(i.osip_message_set_method))
<BR><BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_request_out_of_dialog
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_cancel
</UL>

<P><STRONG><a name="[dd]"></a>osip_message_set_mime_version</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, osip_mime_version.o(i.osip_message_set_mime_version))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = osip_message_set_mime_version &rArr; osip_content_length_parse &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_length_parse
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_length_init
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_length_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osip_parser_cfg.o(i.parser_init)
</UL>
<P><STRONG><a name="[3c0]"></a>osip_message_set_multiple_header</STRONG> (Thumb, 426 bytes, Stack size 56 bytes, osip_message_parse.o(i.osip_message_set_multiple_header))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = osip_message_set_multiple_header &rArr; osip_message_set__header &rArr; osip_message_set_header &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_tolower
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_is_header_comma_separated
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set__header
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_clrncpy
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncasecmp
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
</UL>
<BR>[Called By]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msg_headers_parse
</UL>

<P><STRONG><a name="[de]"></a>osip_message_set_proxy_authenticate</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, osip_proxy_authenticate.o(i.osip_message_set_proxy_authenticate))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = osip_message_set_proxy_authenticate &rArr; osip_www_authenticate_parse &rArr; __osip_quoted_string_set &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_www_authenticate_free
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_add
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_www_authenticate_parse
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_www_authenticate_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osip_parser_cfg.o(i.parser_init)
</UL>
<P><STRONG><a name="[df]"></a>osip_message_set_proxy_authorization</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, osip_proxy_authorization.o(i.osip_message_set_proxy_authorization))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = osip_message_set_proxy_authorization &rArr; osip_authorization_parse &rArr; __osip_quoted_string_set &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_add
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_authorization_parse
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_authorization_init
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_authorization_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osip_parser_cfg.o(i.parser_init)
</UL>
<P><STRONG><a name="[263]"></a>osip_message_set_reason_phrase</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, osip_message.o(i.osip_message_set_reason_phrase))
<BR><BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_request_out_of_dialog
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_cancel
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_send_default_answer
</UL>

<P><STRONG><a name="[e0]"></a>osip_message_set_record_route</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, osip_record_route.o(i.osip_message_set_record_route))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = osip_message_set_record_route &rArr; osip_from_parse &rArr; osip_uri_parse &rArr; osip_uri_parse_headers &rArr; __osip_uri_unescape &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_parse
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_init
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_add
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osip_parser_cfg.o(i.parser_init)
</UL>
<P><STRONG><a name="[e1]"></a>osip_message_set_route</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, osip_route.o(i.osip_message_set_route))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = osip_message_set_route &rArr; osip_from_parse &rArr; osip_uri_parse &rArr; osip_uri_parse_headers &rArr; __osip_uri_unescape &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_parse
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_init
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_add
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_free
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_request_out_of_dialog
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osip_parser_cfg.o(i.parser_init)
</UL>
<P><STRONG><a name="[20d]"></a>osip_message_set_status_code</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, osip_message.o(i.osip_message_set_status_code))
<BR><BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_request_out_of_dialog
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_cancel
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_build_response_default
</UL>

<P><STRONG><a name="[e2]"></a>osip_message_set_to</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, osip_to.o(i.osip_message_set_to))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = osip_message_set_to &rArr; osip_from_parse &rArr; osip_uri_parse &rArr; osip_uri_parse_headers &rArr; __osip_uri_unescape &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_parse
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_init
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_free
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_request_out_of_dialog
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osip_parser_cfg.o(i.parser_init)
</UL>
<P><STRONG><a name="[262]"></a>osip_message_set_version</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, osip_message.o(i.osip_message_set_version))
<BR><BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_request_out_of_dialog
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_cancel
</UL>

<P><STRONG><a name="[e3]"></a>osip_message_set_via</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, osip_via.o(i.osip_message_set_via))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = osip_message_set_via &rArr; osip_via_parse &rArr; __osip_generic_param_parseall &rArr; osip_uri_param_add &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_add
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_via_free
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_via_parse
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_via_init
</UL>
<BR>[Called By]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_request_add_via
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osip_parser_cfg.o(i.parser_init)
</UL>
<P><STRONG><a name="[e4]"></a>osip_message_set_www_authenticate</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, osip_www_authenticate.o(i.osip_message_set_www_authenticate))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = osip_message_set_www_authenticate &rArr; osip_www_authenticate_parse &rArr; __osip_quoted_string_set &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_www_authenticate_free
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_add
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_www_authenticate_parse
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_www_authenticate_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osip_parser_cfg.o(i.parser_init)
</UL>
<P><STRONG><a name="[2ca]"></a>osip_message_to_str</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, osip_message_to_str.o(i.osip_message_to_str))
<BR><BR>[Stack]<UL><LI>Max Depth = 1168<LI>Call Chain = osip_message_to_str &rArr; _osip_message_to_str &rArr; __osip_message_startline_to_str &rArr; __osip_message_startline_to_strreq &rArr; osip_uri_to_str &rArr; __osip_uri_escape_userinfo &rArr; __osip_uri_escape_nonascii_and_nondef &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_osip_message_to_str
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_send_message
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_build_message
</UL>

<P><STRONG><a name="[200]"></a>osip_new_outgoing_sipmessage</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, osip_event.o(i.osip_new_outgoing_sipmessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = osip_new_outgoing_sipmessage &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;evt_set_type_outgoing_sipmessage
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_register_send_register
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_message_send_answer
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_send_answer
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_answer_invite_123456xx
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_send_request
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_retry_request
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_create_transaction
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_create_cancel_transaction
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_send_default_answer
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_new_invite
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_cancel
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_bye
</UL>

<P><STRONG><a name="[1cd]"></a>osip_nict_set_destination</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, nict.o(i.osip_nict_set_destination))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = osip_nict_set_destination &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_nict_init
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_send_message
</UL>

<P><STRONG><a name="[12]"></a>osip_nict_timeout_e_event</STRONG> (Thumb, 350 bytes, Stack size 40 bytes, nict_fsm.o(i.osip_nict_timeout_e_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = osip_nict_timeout_e_event &rArr; nict_handle_transport_error &rArr; __osip_kill_transaction_callback &rArr; osip_getsystemtime &rArr; osip_gettimeofday
</UL>
<BR>[Calls]<UL><LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nict_handle_transport_error
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_callback
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;via_get_protocol
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_get_knownheaderlist
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_gettimeofday
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_gettimeofday
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nict_fsm.o(.data)
</UL>
<P><STRONG><a name="[11]"></a>osip_nict_timeout_f_event</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, nict_fsm.o(i.osip_nict_timeout_f_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = osip_nict_timeout_f_event &rArr; nict_handle_transport_error &rArr; __osip_kill_transaction_callback &rArr; osip_getsystemtime &rArr; osip_gettimeofday
</UL>
<BR>[Calls]<UL><LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nict_handle_transport_error
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_set_state
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_callback
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_kill_transaction_callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nict_fsm.o(.data)
</UL>
<P><STRONG><a name="[15]"></a>osip_nict_timeout_k_event</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, nict_fsm.o(i.osip_nict_timeout_k_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = osip_nict_timeout_k_event &rArr; __osip_kill_transaction_callback &rArr; osip_getsystemtime &rArr; osip_gettimeofday
</UL>
<BR>[Calls]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_set_state
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_kill_transaction_callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nict_fsm.o(.data)
</UL>
<P><STRONG><a name="[28d]"></a>osip_nist_execute</STRONG> (Thumb, 156 bytes, Stack size 48 bytes, osip.o(i.osip_nist_execute))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = osip_nist_execute &rArr; osip_transaction_execute &rArr; osip_message_free &rArr; osip_from_free &rArr; osip_uri_free &rArr; osip_uri_param_freelist &rArr; osip_list_remove &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_execute
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_next
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_first
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_fifo_tryget
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_size
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_bye
</UL>

<P><STRONG><a name="[19]"></a>osip_nist_timeout_j_event</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, nist_fsm.o(i.osip_nist_timeout_j_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = osip_nist_timeout_j_event &rArr; __osip_kill_transaction_callback &rArr; osip_getsystemtime &rArr; osip_gettimeofday
</UL>
<BR>[Calls]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_set_state
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_kill_transaction_callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nist_fsm.o(.data)
</UL>
<P><STRONG><a name="[311]"></a>osip_release</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, osip.o(i.osip_release))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = osip_release &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_quit
</UL>

<P><STRONG><a name="[2f8]"></a>osip_remove_transaction</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, osip.o(i.osip_remove_transaction))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = osip_remove_transaction &rArr; __osip_remove_nist_transaction &rArr; osip_list_iterator_remove &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_remove_nist_transaction
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_remove_nict_transaction
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_remove_ist_transaction
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_remove_ict_transaction
</UL>
<BR>[Called By]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_free
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_xixt_kill_transaction
</UL>

<P><STRONG><a name="[30d]"></a>osip_set_application_context</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, osip.o(i.osip_set_application_context))
<BR><BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_init
</UL>

<P><STRONG><a name="[2a5]"></a>osip_set_cb_send_message</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, osip.o(i.osip_set_cb_send_message))
<BR><BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_set_callbacks
</UL>

<P><STRONG><a name="[2a6]"></a>osip_set_kill_transaction_callback</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, osip.o(i.osip_set_kill_transaction_callback))
<BR><BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_set_callbacks
</UL>

<P><STRONG><a name="[2a7]"></a>osip_set_message_callback</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, osip.o(i.osip_set_message_callback))
<BR><BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_set_callbacks
</UL>

<P><STRONG><a name="[2a8]"></a>osip_set_transport_error_callback</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, osip.o(i.osip_set_transport_error_callback))
<BR><BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_set_callbacks
</UL>

<P><STRONG><a name="[1c7]"></a>osip_str_append</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, osip_port.o(i.osip_str_append))
<BR><BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_to_str
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_authorization_to_str
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_www_authenticate_to_str
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat_simple_header
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat_headers_one_per_line
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_osip_message_to_str
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_startline_to_strresp
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_startline_to_strreq
</UL>

<P><STRONG><a name="[218]"></a>osip_strcasestr</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, osip_port.o(i.osip_strcasestr))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = osip_strcasestr &rArr; strncasecmp
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncasecmp
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tolower
</UL>
<BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_retry_request
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_header_strcasestr
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_messages
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_check_allow_header
</UL>

<P><STRONG><a name="[132]"></a>osip_strdup</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, osip_port.o(i.osip_strdup))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = osip_strdup &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strncpy
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_set_user_agent
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_set_option
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_init
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_send_answer
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskCreate
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_fix_last_via_header
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_www_authenticate_clone
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_length_to_str
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_length_clone
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_contact_to_str
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_contact_parse
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_clone
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_info_clone
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_clone
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_nict_init
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_via_clone
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_clone
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_clone
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_cseq_clone
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_id_clone
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_authorization_clone
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ict_rcv_3456xx
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ict_create_ack
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_ict_init
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_header_clone
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_type_clone
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_set_header
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_dialog_update_tag_as_uac
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_dialog_init
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_osip_message_to_str
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_update_top_via
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_request_out_of_dialog
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_cancel
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_dialog_add_contact
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_complete_answer_that_establish_a_dialog
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_build_response_default
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_build_request_within_dialog
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_retry_request
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_send_message
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_tl_update_contact
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_request_viamanager
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_message_contactmanager
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_update_contact
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_reg_init
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_register_build_register
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_register_add_contact
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_create_proxy_authorization_header
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_send_default_answer
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_handle_rfc5626_ob
</UL>

<P><STRONG><a name="[235]"></a>osip_strdup_without_quote</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, osip_port.o(i.osip_strdup_without_quote))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = osip_strdup_without_quote &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strncpy
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_create_proxy_authorization_header
</UL>

<P><STRONG><a name="[1ca]"></a>osip_strn_append</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, osip_port.o(i.osip_strn_append))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = osip_strn_append &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_to_str
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_authorization_to_str
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_www_authenticate_to_str
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat_simple_header
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat_headers_one_per_line
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_osip_message_to_str
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_startline_to_strresp
</UL>

<P><STRONG><a name="[1ab]"></a>osip_strncpy</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, osip_port.o(i.osip_strncpy))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = osip_strncpy &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strdup
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_set_option
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_startline_parseresp
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_startline_parsereq
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_parse
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_length_parse
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_parse
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_generic_param_parseall
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_clrncpy
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_quoted_string_set
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_authorization_parse
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_via_parse
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_parse_params
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_parse_headers
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_www_authenticate_parse
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strdup_without_quote
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat_headers_one_per_line
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_osip_message_to_str
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_default_gateway_ipv4sock
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_default_gateway_ipv4
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_new_socket
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_read_tcp_main_socket
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_reg_init
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_register_build_initial_register_withqvalue
</UL>

<P><STRONG><a name="[3ff]"></a>osip_tolower</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, osip_port.o(i.osip_tolower))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = osip_tolower
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_multiple_header
</UL>

<P><STRONG><a name="[1a5]"></a>osip_transaction_add_event</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, osip_transaction.o(i.osip_transaction_add_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = osip_transaction_add_event &rArr; osip_fifo_add &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_fifo_add
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_register_send_register
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_message_send_answer
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_send_answer
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_find_transaction
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_answer_invite_123456xx
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_send_request
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_retry_request
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_create_transaction
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_create_cancel_transaction
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_send_default_answer
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_newrequest
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_new_invite
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_cancel
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_bye
</UL>

<P><STRONG><a name="[3fc]"></a>osip_transaction_execute</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, osip_transaction.o(i.osip_transaction_execute))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = osip_transaction_execute &rArr; osip_message_free &rArr; osip_from_free &rArr; osip_uri_free &rArr; osip_uri_param_freelist &rArr; osip_list_remove &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_free
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_callmethod
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_nist_execute
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_ist_execute
</UL>

<P><STRONG><a name="[1a4]"></a>osip_transaction_find</STRONG> (Thumb, 222 bytes, Stack size 40 bytes, osip.o(i.osip_transaction_find))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = osip_transaction_find &rArr; __osip_transaction_matching_request_osip_to_xist_17_2_3 &rArr; osip_via_match &rArr; osip_via_to_str &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_next
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_first
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_matching_response_osip_to_xict_17_1_3
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_matching_request_osip_to_xist_17_2_3
</UL>
<BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_find_transaction
</UL>

<P><STRONG><a name="[2ae]"></a>osip_transaction_free</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, osip_transaction.o(i.osip_transaction_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = osip_transaction_free &rArr; osip_transaction_free2 &rArr; osip_message_free &rArr; osip_from_free &rArr; osip_uri_free &rArr; osip_uri_param_freelist &rArr; osip_list_remove &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_remove_transaction
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_free2
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_init
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_transaction_free
</UL>

<P><STRONG><a name="[404]"></a>osip_transaction_free2</STRONG> (Thumb, 192 bytes, Stack size 16 bytes, osip_transaction.o(i.osip_transaction_free2))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = osip_transaction_free2 &rArr; osip_message_free &rArr; osip_from_free &rArr; osip_uri_free &rArr; osip_uri_param_freelist &rArr; osip_list_remove &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_fifo_tryget
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_nist_free
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_nict_free
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_ist_free
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_free
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_ict_free
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_via_free
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_fifo_free
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_cseq_free
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_id_free
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_free
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_free
</UL>

<P><STRONG><a name="[2ef]"></a>osip_transaction_get_reserved1</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, osip_transaction.o(i.osip_transaction_get_reserved1))
<BR><BR>[Called By]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcvregister_failure
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_xixt_kill_transaction
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_transport_error
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_snd_message
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_snd123456xx
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcvrequest
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcvregister
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcvcancel
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv3456xx
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv2xx_4invite
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv2xx
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv1xx
</UL>

<P><STRONG><a name="[2f0]"></a>osip_transaction_get_reserved2</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, osip_transaction.o(i.osip_transaction_get_reserved2))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_transport_error
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_snd123456xx
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcvrequest
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcvcancel
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv3456xx
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv2xx_4invite
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv2xx
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv1xx
</UL>

<P><STRONG><a name="[2f1]"></a>osip_transaction_get_reserved3</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, osip_transaction.o(i.osip_transaction_get_reserved3))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_transport_error
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_snd123456xx
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcvrequest
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcvcancel
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv3456xx
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv2xx_4invite
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv2xx
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv1xx
</UL>

<P><STRONG><a name="[2af]"></a>osip_transaction_init</STRONG> (Thumb, 580 bytes, Stack size 32 bytes, osip_transaction.o(i.osip_transaction_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = osip_transaction_init &rArr; __osip_transaction_set_to &rArr; osip_from_clone &rArr; osip_uri_clone &rArr; osip_list_clone &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_getsystemtime
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_id_mutex_unlock
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_id_mutex_lock
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_add_nist
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_add_nict
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_add_ist
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_add_ict
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_nist_init
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_nict_init
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_ist_init
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_gettimeofday
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_ict_init
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_fifo_init
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_free
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_set_topvia
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_set_to
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_set_from
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_set_cseq
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_set_call_id
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_transaction_init
</UL>

<P><STRONG><a name="[2b1]"></a>osip_transaction_set_naptr_record</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, osip_transaction.o(i.osip_transaction_set_naptr_record))
<BR><BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_transaction_init
</UL>

<P><STRONG><a name="[293]"></a>osip_transaction_set_out_socket</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, osip_transaction.o(i.osip_transaction_set_out_socket))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_send_message
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_newrequest
</UL>

<P><STRONG><a name="[2b0]"></a>osip_transaction_set_reserved1</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, osip_transaction.o(i.osip_transaction_set_reserved1))
<BR><BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_transaction_init
</UL>

<P><STRONG><a name="[221]"></a>osip_transaction_set_reserved2</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, osip_transaction.o(i.osip_transaction_set_reserved2))
<BR><BR>[Called By]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_send_request
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_retry_request
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_create_transaction
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_create_cancel_transaction
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_delete_reserved
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_send_default_answer
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_reinvite
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_newrequest
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_new_invite
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_message_within_dialog
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_cancel
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_bye
</UL>

<P><STRONG><a name="[222]"></a>osip_transaction_set_reserved3</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, osip_transaction.o(i.osip_transaction_set_reserved3))
<BR><BR>[Called By]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_send_request
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_retry_request
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_create_transaction
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_create_cancel_transaction
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_delete_reserved
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv2xx_4invite
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv1xx
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_reinvite
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_new_invite
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_message_within_dialog
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_cancel
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_bye
</UL>

<P><STRONG><a name="[24a]"></a>osip_transaction_set_reserved4</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, osip_transaction.o(i.osip_transaction_set_reserved4))
<BR><BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_delete_reserved
</UL>

<P><STRONG><a name="[24b]"></a>osip_transaction_set_reserved5</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, osip_transaction.o(i.osip_transaction_set_reserved5))
<BR><BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_delete_reserved
</UL>

<P><STRONG><a name="[204]"></a>osip_uri_clone</STRONG> (Thumb, 192 bytes, Stack size 24 bytes, osip_uri.o(i.osip_uri_clone))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = osip_uri_clone &rArr; osip_list_clone &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strdup
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_init
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_free
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_clone
</UL>
<BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_clone
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_clone
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ict_create_ack
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_request_out_of_dialog
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_cancel
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_build_request_within_dialog
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_retry_request
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog_fill_route_set
</UL>

<P><STRONG><a name="[1c2]"></a>osip_uri_free</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, osip_uri.o(i.osip_uri_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = osip_uri_free &rArr; osip_uri_param_freelist &rArr; osip_list_remove &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_freelist
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_remove
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_eol
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_free
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_startline_parsereq
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_clone
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_free
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_free
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_retry_request
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog_fill_route_set
</UL>

<P><STRONG><a name="[1c0]"></a>osip_uri_init</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, osip_uri.o(i.osip_uri_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = osip_uri_init &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_init
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_startline_parsereq
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_parse
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_clone
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_request_out_of_dialog
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_register_add_contact
</UL>

<P><STRONG><a name="[1ac]"></a>osip_uri_param_add</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, osip_uri.o(i.osip_uri_param_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = osip_uri_param_add &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_add
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_set
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_init
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_free
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_send_answer
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_fix_last_via_header
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_generic_param_parseall
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_parse_params
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_parse_headers
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_request_out_of_dialog
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_build_response_default
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_register_build_register
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_register_add_contact
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_handle_rfc5626_ob
</UL>

<P><STRONG><a name="[cb]"></a>osip_uri_param_clone</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, osip_uri.o(i.osip_uri_param_clone))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = osip_uri_param_clone &rArr; osip_strdup &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strdup
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_init
</UL>
<BR>[Called By]<UL><LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_type_clone
</UL>
<BR>[Address Reference Count : 4]<UL><LI> osip_uri.o(i.osip_uri_clone)
<LI> osip_call_info.o(i.osip_call_info_clone)
<LI> osip_from.o(i.osip_from_clone)
<LI> osip_via.o(i.osip_via_clone)
</UL>
<P><STRONG><a name="[268]"></a>osip_uri_param_free</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, osip_uri.o(i.osip_uri_param_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = osip_uri_param_free &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_add
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_free
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_freelist
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_request_out_of_dialog
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_register_build_register
</UL>

<P><STRONG><a name="[3f1]"></a>osip_uri_param_freelist</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, osip_uri.o(i.osip_uri_param_freelist))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = osip_uri_param_freelist &rArr; osip_list_remove &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_remove
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_eol
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_free
</UL>
<BR>[Called By]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_free
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_info_free
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_type_free
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_via_free
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_free
</UL>

<P><STRONG><a name="[19d]"></a>osip_uri_param_get_byname</STRONG> (Thumb, 108 bytes, Stack size 48 bytes, osip_uri.o(i.osip_uri_param_get_byname))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = osip_uri_param_get_byname &rArr; strncasecmp
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_next
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_first
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncasecmp
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_send_answer
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_fix_last_via_header
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msg_osip_body_parse
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_dialog_match_as_uas
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_matching_response_osip_to_xict_17_1_3
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_matching_request_osip_to_xist_17_2_3
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_nict_init
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_snd_xxx
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ict_rcv_3456xx
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_ict_init
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_tag_match
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_dialog_update_tag_as_uac
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_dialog_init
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_osip_message_to_str
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_update_top_via
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_snd_message
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_request_out_of_dialog
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_build_response_default
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_add_authentication_information
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_terminate_with_header
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_retry_request
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_send_message
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_build_message
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_register_build_register
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_srv_lookup
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog_fill_route_set
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv2xx_4invite
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv2xx
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv1xx
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_update_expires_according_to_contact
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_register_contact_is_modified
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_learn_port_from_via
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_response_out_of_transaction
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_newrequest
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_new_invite
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_match_update_for_invite
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_handle_rfc5626_ob
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_handle_received_rport
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cancel_match_invite
</UL>

<P><STRONG><a name="[407]"></a>osip_uri_param_init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, osip_uri.o(i.osip_uri_param_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = osip_uri_param_init &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_add
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_clone
</UL>

<P><STRONG><a name="[408]"></a>osip_uri_param_set</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, osip_uri.o(i.osip_uri_param_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = osip_uri_param_set &rArr; osip_clrspace &rArr; strspn
</UL>
<BR>[Calls]<UL><LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_clrspace
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_add
</UL>

<P><STRONG><a name="[1c1]"></a>osip_uri_parse</STRONG> (Thumb, 770 bytes, Stack size 48 bytes, osip_uri.o(i.osip_uri_parse))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = osip_uri_parse &rArr; osip_uri_parse_headers &rArr; __osip_uri_unescape &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;next_separator
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_clrncpy
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strncpy
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_parse_params
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_parse_headers
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_uri_unescape
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncasecmp
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
</UL>
<BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_startline_parsereq
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_parse
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_request_out_of_dialog
</UL>

<P><STRONG><a name="[409]"></a>osip_uri_parse_headers</STRONG> (Thumb, 346 bytes, Stack size 40 bytes, osip_uri.o(i.osip_uri_parse_headers))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = osip_uri_parse_headers &rArr; __osip_uri_unescape &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_add
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strncpy
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_uri_unescape
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
</UL>
<BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_parse
</UL>

<P><STRONG><a name="[40a]"></a>osip_uri_parse_params</STRONG> (Thumb, 418 bytes, Stack size 32 bytes, osip_uri.o(i.osip_uri_parse_params))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = osip_uri_parse_params &rArr; __osip_uri_unescape &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_add
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;next_separator
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strncpy
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_uri_unescape
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
</UL>
<BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_parse
</UL>

<P><STRONG><a name="[1c6]"></a>osip_uri_to_str</STRONG> (Thumb, 1036 bytes, Stack size 80 bytes, osip_uri.o(i.osip_uri_to_str))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = osip_uri_to_str &rArr; __osip_uri_escape_userinfo &rArr; __osip_uri_escape_nonascii_and_nondef &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_next
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_first
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_uri_escape_userinfo
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_uri_escape_uri_param
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_uri_escape_password
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_uri_escape_header_param
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realloc
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_to_str
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_startline_to_strreq
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_add_authentication_information
</UL>

<P><STRONG><a name="[d0]"></a>osip_via_clone</STRONG> (Thumb, 256 bytes, Stack size 24 bytes, osip_via.o(i.osip_via_clone))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = osip_via_clone &rArr; osip_list_clone &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strdup
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_clone
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_via_free
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_via_init
</UL>
<BR>[Called By]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ict_create_ack
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_set_topvia
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_cancel
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_build_response_default
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osip_message.o(i.osip_message_clone)
</UL>
<P><STRONG><a name="[d4]"></a>osip_via_free</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, osip_via.o(i.osip_via_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = osip_via_free &rArr; osip_uri_param_freelist &rArr; osip_list_remove &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_freelist
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_via_clone
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_free2
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_via
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osip_message.o(i.osip_message_free)
</UL>
<P><STRONG><a name="[402]"></a>osip_via_init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, osip_via.o(i.osip_via_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = osip_via_init &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_init
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_via_clone
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_via
</UL>

<P><STRONG><a name="[1df]"></a>osip_via_match</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, osip_via.o(i.osip_via_match))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = osip_via_match &rArr; osip_via_to_str &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_via_to_str
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_matching_request_osip_to_xist_17_2_3
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cancel_match_invite
</UL>

<P><STRONG><a name="[403]"></a>osip_via_parse</STRONG> (Thumb, 708 bytes, Stack size 56 bytes, osip_via.o(i.osip_via_parse))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = osip_via_parse &rArr; __osip_generic_param_parseall &rArr; osip_uri_param_add &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_generic_param_parseall
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_clrncpy
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strncpy
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_via
</UL>

<P><STRONG><a name="[f2]"></a>osip_via_to_str</STRONG> (Thumb, 362 bytes, Stack size 56 bytes, osip_via.o(i.osip_via_to_str))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = osip_via_to_str &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_next
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_first
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realloc
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
</UL>
<BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_via_match
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osip_message_to_str.o(.constdata)
</UL>
<P><STRONG><a name="[cf]"></a>osip_www_authenticate_clone</STRONG> (Thumb, 440 bytes, Stack size 24 bytes, osip_www_authenticate.o(i.osip_www_authenticate_clone))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = osip_www_authenticate_clone &rArr; osip_strdup &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strdup
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_www_authenticate_free
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_www_authenticate_init
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_store_nonce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osip_message.o(i.osip_message_clone)
</UL>
<P><STRONG><a name="[d3]"></a>osip_www_authenticate_free</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, osip_www_authenticate.o(i.osip_www_authenticate_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = osip_www_authenticate_free &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_quit
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_www_authenticate_clone
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_www_authenticate
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_proxy_authenticate
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_store_nonce
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_delete_nonce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osip_message.o(i.osip_message_free)
</UL>
<P><STRONG><a name="[22d]"></a>osip_www_authenticate_get_nonce</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, osip_www_authenticate.o(i.osip_www_authenticate_get_nonce))
<BR><BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_create_proxy_authorization_header
</UL>

<P><STRONG><a name="[22f]"></a>osip_www_authenticate_get_opaque</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, osip_www_authenticate.o(i.osip_www_authenticate_get_opaque))
<BR><BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_create_proxy_authorization_header
</UL>

<P><STRONG><a name="[233]"></a>osip_www_authenticate_get_qop_options</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, osip_www_authenticate.o(i.osip_www_authenticate_get_qop_options))
<BR><BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_create_proxy_authorization_header
</UL>

<P><STRONG><a name="[22b]"></a>osip_www_authenticate_get_realm</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, osip_www_authenticate.o(i.osip_www_authenticate_get_realm))
<BR><BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_create_proxy_authorization_header
</UL>

<P><STRONG><a name="[400]"></a>osip_www_authenticate_init</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, osip_www_authenticate.o(i.osip_www_authenticate_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = osip_www_authenticate_init &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_www_authenticate_clone
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_www_authenticate
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_proxy_authenticate
</UL>

<P><STRONG><a name="[401]"></a>osip_www_authenticate_parse</STRONG> (Thumb, 590 bytes, Stack size 40 bytes, osip_www_authenticate.o(i.osip_www_authenticate_parse))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = osip_www_authenticate_parse &rArr; __osip_quoted_string_set &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strncpy
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_token_set
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_quoted_string_set
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_quote_find
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_www_authenticate
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_proxy_authenticate
</UL>

<P><STRONG><a name="[f8]"></a>osip_www_authenticate_to_str</STRONG> (Thumb, 510 bytes, Stack size 24 bytes, osip_www_authenticate.o(i.osip_www_authenticate_to_str))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = osip_www_authenticate_to_str &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strn_append
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_str_append
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osip_message_to_str.o(.constdata)
</UL>
<P><STRONG><a name="[3fb]"></a>parser_init</STRONG> (Thumb, 3374 bytes, Stack size 16 bytes, osip_parser_cfg.o(i.parser_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = parser_init &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_hash
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_init
</UL>

<P><STRONG><a name="[32d]"></a>pbuf_add_header</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, pbuf.o(i.pbuf_add_header))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = pbuf_add_header &rArr; pbuf_add_header_impl &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_add_header_impl
</UL>
<BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_output_if_src
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if_src
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_create_segment
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_input
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernet_output
</UL>

<P><STRONG><a name="[32b]"></a>pbuf_alloc</STRONG> (Thumb, 374 bytes, Stack size 48 bytes, pbuf.o(i.pbuf_alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc_reference
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_init_alloced_pbuf
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_malloc
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_clone
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbuf_ref
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_raw
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if_src
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pbuf_prealloc
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_alloc_header_common
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_split_unsent_seg
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_enqueue_flags
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_input
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_frag
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_input
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_send_response
</UL>

<P><STRONG><a name="[40c]"></a>pbuf_alloc_reference</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, pbuf.o(i.pbuf_alloc_reference))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = pbuf_alloc_reference &rArr; memp_malloc &rArr; do_memp_malloc_pool &rArr; sys_arch_unprotect &rArr; vPortExitCritical &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_init_alloced_pbuf
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
</UL>

<P><STRONG><a name="[350]"></a>pbuf_alloced_custom</STRONG> (Thumb, 82 bytes, Stack size 48 bytes, pbuf.o(i.pbuf_alloced_custom))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = pbuf_alloced_custom &rArr; pbuf_init_alloced_pbuf
</UL>
<BR>[Calls]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_init_alloced_pbuf
</UL>
<BR>[Called By]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_frag
</UL>

<P><STRONG><a name="[352]"></a>pbuf_cat</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, pbuf.o(i.pbuf_cat))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = pbuf_cat &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_chain
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_reass
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_frag
</UL>

<P><STRONG><a name="[40e]"></a>pbuf_chain</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, pbuf.o(i.pbuf_chain))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = pbuf_chain &rArr; pbuf_ref &rArr; sys_arch_unprotect &rArr; vPortExitCritical &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_ref
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_cat
</UL>
<BR>[Called By]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if_src
</UL>

<P><STRONG><a name="[35a]"></a>pbuf_clen</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, pbuf.o(i.pbuf_clen))
<BR><BR>[Called By]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_free_acked_segments
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_split_unsent_seg
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_enqueue_flags
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_free_complete_datagram
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_reass
</UL>

<P><STRONG><a name="[329]"></a>pbuf_clone</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, pbuf.o(i.pbuf_clone))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = pbuf_clone &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_copy
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_query
</UL>

<P><STRONG><a name="[343]"></a>pbuf_copy</STRONG> (Thumb, 252 bytes, Stack size 24 bytes, pbuf.o(i.pbuf_copy))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = pbuf_copy &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_clone
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_input
</UL>

<P><STRONG><a name="[3a0]"></a>pbuf_copy_partial</STRONG> (Thumb, 148 bytes, Stack size 40 bytes, pbuf.o(i.pbuf_copy_partial))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = pbuf_copy_partial &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recvfrom_udp_raw
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recv_tcp
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_zero_window_probe
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_split_unsent_seg
</UL>

<P><STRONG><a name="[31f]"></a>pbuf_free</STRONG> (Thumb, 204 bytes, Stack size 32 bytes, pbuf.o(i.pbuf_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_realloc
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbuf_ref
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbuf_free
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_shutdown
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbuf_delete
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_udp
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_tcp
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_drain
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_input
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernet_input
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_thread_handle_msg
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free_header
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recv_tcp
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_socket_free_elements
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_update_arp_entry
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_raw
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_free_entry
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if_src
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_input
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_control_segment
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_create_segment
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_split_unsent_seg
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_seg_free
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recv_null
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_purge
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernetif_input
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipfrag_free_pbuf_custom
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_free_complete_datagram
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_reass
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_frag
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_input
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_send_response
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_query
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_input
</UL>

<P><STRONG><a name="[3a1]"></a>pbuf_free_header</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, pbuf.o(i.pbuf_free_header))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = pbuf_free_header &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_remove_header
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
</UL>
<BR>[Called By]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recv_tcp
</UL>

<P><STRONG><a name="[358]"></a>pbuf_header_force</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, pbuf.o(i.pbuf_header_force))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = pbuf_header_force &rArr; pbuf_header_impl &rArr; pbuf_add_header_impl &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_header_impl
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_input
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_input
</UL>

<P><STRONG><a name="[353]"></a>pbuf_realloc</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, pbuf.o(i.pbuf_realloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = pbuf_realloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_trim
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_input
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_split_unsent_seg
</UL>

<P><STRONG><a name="[32a]"></a>pbuf_ref</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, pbuf.o(i.pbuf_ref))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = pbuf_ref &rArr; sys_arch_unprotect &rArr; vPortExitCritical &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_chain
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_frag
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_query
</UL>

<P><STRONG><a name="[32c]"></a>pbuf_remove_header</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, pbuf.o(i.pbuf_remove_header))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = pbuf_remove_header &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_header_impl
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_input
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernet_input
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free_header
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_input
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_reass
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_input
</UL>

<P><STRONG><a name="[42f]"></a>pvPortMalloc</STRONG> (Thumb, 262 bytes, Stack size 24 bytes, heap_4.o(i.pvPortMalloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertBlockIntoFreeList
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvHeapInit
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udpecho_thread
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
</UL>

<P><STRONG><a name="[48a]"></a>pvTaskIncrementMutexHeldCount</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, tasks.o(i.pvTaskIncrementMutexHeldCount))
<BR><BR>[Called By]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[428]"></a>pxPortInitialiseStack</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, port.o(i.pxPortInitialiseStack))
<BR><BR>[Called By]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
</UL>

<P><STRONG><a name="[1eb]"></a>realloc</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, mallocr.o(i.realloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_to_str
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_to_str
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_info_to_str
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_type_to_str
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_to_str
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_uri_escape_nonascii_and_nondef
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_via_to_str
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat_simple_header
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat_headers_one_per_line
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_osip_message_to_str
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_osip_message_realloc
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_strdup_printf
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_send_message
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_recv
</UL>

<P><STRONG><a name="[2cd]"></a>setsockopt_ipv6only</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, exconf.o(i.setsockopt_ipv6only))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = setsockopt_ipv6only &rArr; lwip_setsockopt &rArr; lwip_setsockopt_impl &rArr; netif_find &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_setsockopt
</UL>
<BR>[Called By]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_tl_open_oc
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_tl_open
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_open
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_new_socket
</UL>

<P><STRONG><a name="[3c5]"></a>sys_arch_mbox_fetch</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, sys_arch.o(i.sys_arch_mbox_fetch))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = sys_arch_mbox_fetch &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_now
</UL>
<BR>[Called By]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_accept
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recv_data
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_timeouts_mbox_fetch
</UL>

<P><STRONG><a name="[3c4]"></a>sys_arch_mbox_tryfetch</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, sys_arch.o(i.sys_arch_mbox_tryfetch))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = sys_arch_mbox_tryfetch &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_drain
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_accept
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recv_data
</UL>

<P><STRONG><a name="[2ea]"></a>sys_arch_protect</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, sys_arch.o(i.sys_arch_protect))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = sys_arch_protect &rArr; vPortEnterCritical &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_ref
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_memp_malloc_pool
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_memp_free_pool
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_trim
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;err_tcp
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_err
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_select
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_accept
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_selscan
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_socket
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_callback
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_socket
</UL>

<P><STRONG><a name="[36a]"></a>sys_arch_sem_wait</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, sys_arch.o(i.sys_arch_sem_wait))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = sys_arch_sem_wait &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_write
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_delconn
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_connect
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_close
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_select
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_output
</UL>

<P><STRONG><a name="[2eb]"></a>sys_arch_unprotect</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, sys_arch.o(i.sys_arch_unprotect))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = sys_arch_unprotect &rArr; vPortExitCritical &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_ref
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_memp_malloc_pool
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_memp_free_pool
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_trim
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;err_tcp
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_err
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_select
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_accept
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_selscan
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_socket
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_callback
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_socket
</UL>

<P><STRONG><a name="[434]"></a>sys_check_timeouts</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, timeouts.o(i.sys_check_timeouts))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = sys_check_timeouts &rArr; memp_free &rArr; do_memp_free_pool &rArr; sys_arch_unprotect &rArr; vPortExitCritical &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_now
</UL>
<BR>[Called By]<UL><LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_timeouts_mbox_fetch
</UL>

<P><STRONG><a name="[37c]"></a>sys_init</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, sys_arch.o(i.sys_init))
<BR><BR>[Called By]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_init
</UL>

<P><STRONG><a name="[3c7]"></a>sys_mbox_free</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, sys_arch.o(i.sys_mbox_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = sys_mbox_free &rArr; vQueueDelete &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueDelete
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxQueueMessagesWaiting
</UL>
<BR>[Called By]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_drain
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_alloc
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_new_with_proto_and_callback
</UL>

<P><STRONG><a name="[367]"></a>sys_mbox_new</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, sys_arch.o(i.sys_mbox_new))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = sys_mbox_new &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_alloc
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_init
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_init
</UL>

<P><STRONG><a name="[3c8]"></a>sys_mbox_set_invalid</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sys_arch.o(i.sys_mbox_set_invalid))
<BR><BR>[Called By]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_drain
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_alloc
</UL>

<P><STRONG><a name="[319]"></a>sys_mbox_trypost</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, sys_arch.o(i.sys_mbox_trypost))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = sys_mbox_trypost &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_udp
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_tcp
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;err_tcp
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_inpkt
</UL>

<P><STRONG><a name="[318]"></a>sys_mbox_valid</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, sys_arch.o(i.sys_mbox_valid))
<BR><BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_udp
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_tcp
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_drain
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;err_tcp
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_free
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_new_with_proto_and_callback
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_accept
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recv_data_tcp
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recv_data
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_inpkt
</UL>

<P><STRONG><a name="[36e]"></a>sys_mutex_lock</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, sys_arch.o(i.sys_mutex_lock))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = sys_mutex_lock &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_trim
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_malloc
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_send_msg_wait_sem
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_write
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_delconn
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_connect
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_close
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_timeouts_mbox_fetch
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_thread
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_setsockopt
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getsockopt
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_fcntl
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_accept
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_unlink_select_cb
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_link_select_cb
</UL>

<P><STRONG><a name="[3bb]"></a>sys_mutex_new</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, sys_arch.o(i.sys_mutex_new))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = sys_mutex_new &rArr; xQueueCreateMutex &rArr; prvInitialiseMutex &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateMutex
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_init
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_init
</UL>

<P><STRONG><a name="[36f]"></a>sys_mutex_unlock</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, sys_arch.o(i.sys_mutex_unlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_trim
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_malloc
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_send_msg_wait_sem
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_write
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_delconn
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_connect
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_close
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_timeouts_mbox_fetch
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_setsockopt
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getsockopt
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_fcntl
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_accept
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_unlink_select_cb
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_link_select_cb
</UL>

<P><STRONG><a name="[375]"></a>sys_now</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, sys_arch.o(i.sys_now))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sys_now
</UL>
<BR>[Calls]<UL><LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
</UL>
<BR>[Called By]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_mbox_fetch
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timeouts_sleeptime
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_check_timeouts
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timeout
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_cyclic_timer
</UL>

<P><STRONG><a name="[3aa]"></a>sys_sem_free</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, sys_arch.o(i.sys_sem_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = sys_sem_free &rArr; vQueueDelete &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueDelete
</UL>
<BR>[Called By]<UL><LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_free
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_new_with_proto_and_callback
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_select
</UL>

<P><STRONG><a name="[366]"></a>sys_sem_new</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, sys_arch.o(i.sys_sem_new))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = sys_sem_new &rArr; xQueueCreateCountingSemaphore &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphore
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_alloc
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_select
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_output
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_init
</UL>

<P><STRONG><a name="[3cd]"></a>sys_sem_set_invalid</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sys_arch.o(i.sys_sem_set_invalid))
<BR><BR>[Called By]<UL><LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_free
</UL>

<P><STRONG><a name="[31b]"></a>sys_sem_signal</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, sys_arch.o(i.sys_sem_signal))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = sys_sem_signal &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_new
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_writemore
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_connected
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_close_internal
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;err_tcp
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;select_check_waiters
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_output
</UL>

<P><STRONG><a name="[31a]"></a>sys_sem_valid</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, sys_arch.o(i.sys_sem_valid))
<BR><BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;err_tcp
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_delconn
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_new_with_proto_and_callback
</UL>

<P><STRONG><a name="[368]"></a>sys_thread_new</STRONG> (Thumb, 68 bytes, Stack size 40 bytes, sys_arch.o(i.sys_thread_new))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = sys_thread_new &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udpecho_init
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_init
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_init
</UL>

<P><STRONG><a name="[439]"></a>sys_timeout</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, timeouts.o(i.sys_timeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = sys_timeout &rArr; sys_timeout_abs &rArr; memp_malloc &rArr; do_memp_malloc_pool &rArr; sys_arch_unprotect &rArr; vPortExitCritical &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_now
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timeout_abs
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timeouts_init
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_tcp_timer
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_timer_needed
</UL>

<P><STRONG><a name="[382]"></a>sys_timeouts_init</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, timeouts.o(i.sys_timeouts_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = sys_timeouts_init &rArr; sys_timeout &rArr; sys_timeout_abs &rArr; memp_malloc &rArr; do_memp_malloc_pool &rArr; sys_arch_unprotect &rArr; vPortExitCritical &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timeout
</UL>
<BR>[Called By]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_init
</UL>

<P><STRONG><a name="[43a]"></a>sys_timeouts_sleeptime</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, timeouts.o(i.sys_timeouts_sleeptime))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = sys_timeouts_sleeptime &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_now
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_timeouts_mbox_fetch
</UL>

<P><STRONG><a name="[43b]"></a>tcp_abandon</STRONG> (Thumb, 256 bytes, Stack size 56 bytes, tcp.o(i.tcp_abandon))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; tcp_output_control_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_segs_free
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_remove
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_free
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_kill_state
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abort
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_listen_input
</UL>

<P><STRONG><a name="[390]"></a>tcp_abort</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, tcp.o(i.tcp_abort))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = tcp_abort &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; tcp_output_control_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abandon
</UL>
<BR>[Called By]<UL><LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_netif_ip_addr_changed_pcblist
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_kill_timewait
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_kill_prio
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_drain
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_close_internal
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process
</UL>

<P><STRONG><a name="[389]"></a>tcp_accept</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, tcp.o(i.tcp_accept))
<BR><BR>[Called By]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_close_internal
</UL>

<P><STRONG><a name="[440]"></a>tcp_alloc</STRONG> (Thumb, 174 bytes, Stack size 16 bytes, tcp.o(i.tcp_alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = tcp_alloc &rArr; tcp_kill_prio &rArr; tcp_abort &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; tcp_output_control_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_kill_timewait
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_kill_state
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_kill_prio
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_handle_closepend
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_new_ip_type
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_listen_input
</UL>

<P><STRONG><a name="[388]"></a>tcp_arg</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tcp.o(i.tcp_arg))
<BR><BR>[Called By]<UL><LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_tcp
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_close_internal
</UL>

<P><STRONG><a name="[385]"></a>tcp_bind</STRONG> (Thumb, 184 bytes, Stack size 32 bytes, tcp.o(i.tcp_bind))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = tcp_bind &rArr; tcp_timer_needed &rArr; sys_timeout &rArr; sys_timeout_abs &rArr; memp_malloc &rArr; do_memp_malloc_pool &rArr; sys_arch_unprotect &rArr; vPortExitCritical &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_new_port
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_timer_needed
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_bind
</UL>

<P><STRONG><a name="[3b2]"></a>tcp_bind_netif</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, tcp.o(i.tcp_bind_netif))
<BR><BR>[Called By]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_setsockopt_impl
</UL>

<P><STRONG><a name="[38e]"></a>tcp_close</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, tcp.o(i.tcp_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 576<LI>Call Chain = tcp_close &rArr; tcp_close_shutdown &rArr; tcp_close_shutdown_fin &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; tcp_output_control_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close_shutdown
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_close_internal
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recv_null
</UL>

<P><STRONG><a name="[393]"></a>tcp_connect</STRONG> (Thumb, 372 bytes, Stack size 40 bytes, tcp.o(i.tcp_connect))
<BR><BR>[Stack]<UL><LI>Max Depth = 568<LI>Call Chain = tcp_connect &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; tcp_output_control_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_new_port
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_get_by_index
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_timer_needed
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_enqueue_flags
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_route
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_next_iss
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_eff_send_mss_netif
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_connect
</UL>

<P><STRONG><a name="[450]"></a>tcp_eff_send_mss_netif</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, tcp.o(i.tcp_eff_send_mss_netif))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = tcp_eff_send_mss_netif &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_connect
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_segment
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_listen_input
</UL>

<P><STRONG><a name="[451]"></a>tcp_enqueue_flags</STRONG> (Thumb, 358 bytes, Stack size 32 bytes, tcp_out.o(i.tcp_enqueue_flags))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = tcp_enqueue_flags &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_clen
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_create_segment
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_connect
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_listen_input
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send_fin
</UL>

<P><STRONG><a name="[38d]"></a>tcp_err</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, tcp.o(i.tcp_err))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = tcp_err &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_tcp
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_close_internal
</UL>

<P><STRONG><a name="[454]"></a>tcp_fasttmr</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, tcp.o(i.tcp_fasttmr))
<BR><BR>[Stack]<UL><LI>Max Depth = 640<LI>Call Chain = tcp_fasttmr &rArr; tcp_process_refused_data &rArr; tcp_recv_null &rArr; tcp_close &rArr; tcp_close_shutdown &rArr; tcp_close_shutdown_fin &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; tcp_output_control_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close_shutdown_fin
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process_refused_data
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tmr
</UL>

<P><STRONG><a name="[43d]"></a>tcp_free</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, tcp.o(i.tcp_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = tcp_free &rArr; memp_free &rArr; do_memp_free_pool &rArr; sys_arch_unprotect &rArr; vPortExitCritical &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close_shutdown
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input_delayed_close
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_slowtmr
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abandon
</UL>

<P><STRONG><a name="[381]"></a>tcp_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tcp.o(i.tcp_init))
<BR><BR>[Called By]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_init
</UL>

<P><STRONG><a name="[357]"></a>tcp_input</STRONG> (Thumb, 1846 bytes, Stack size 48 bytes, tcp_in.o(i.tcp_input))
<BR><BR>[Stack]<UL><LI>Max Depth = 736<LI>Call Chain = tcp_input &rArr; tcp_listen_input &rArr; tcp_alloc &rArr; tcp_kill_prio &rArr; tcp_abort &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; tcp_output_control_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_remove_header
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abort
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htonl
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send_empty_ack
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_addr_isbroadcast_u32
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_timewait_input
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_listen_input
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input_delayed_close
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recv_null
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process_refused_data
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_remove
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_free
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_input
</UL>

<P><STRONG><a name="[45c]"></a>tcp_keepalive</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, tcp_out.o(i.tcp_keepalive))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = tcp_keepalive &rArr; tcp_output_control_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htonl
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_fill_options
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_control_segment
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_alloc_header
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_slowtmr
</UL>

<P><STRONG><a name="[3d4]"></a>tcp_netif_ip_addr_changed</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, tcp.o(i.tcp_netif_ip_addr_changed))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = tcp_netif_ip_addr_changed &rArr; tcp_netif_ip_addr_changed_pcblist &rArr; tcp_abort &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; tcp_output_control_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_netif_ip_addr_changed_pcblist
</UL>
<BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_do_ip_addr_changed
</UL>

<P><STRONG><a name="[412]"></a>tcp_new_ip_type</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, tcp.o(i.tcp_new_ip_type))
<BR><BR>[Stack]<UL><LI>Max Depth = 664<LI>Call Chain = tcp_new_ip_type &rArr; tcp_alloc &rArr; tcp_kill_prio &rArr; tcp_abort &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; tcp_output_control_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcb_new
</UL>

<P><STRONG><a name="[44f]"></a>tcp_next_iss</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, tcp.o(i.tcp_next_iss))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = tcp_next_iss &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_connect
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_listen_input
</UL>

<P><STRONG><a name="[39c]"></a>tcp_output</STRONG> (Thumb, 658 bytes, Stack size 40 bytes, tcp_out.o(i.tcp_output))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = tcp_output &rArr; tcp_send_empty_ack &rArr; tcp_output_control_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htonl
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_route
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_segment
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send_empty_ack
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_seg_free
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close_shutdown_fin
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recved
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_connect
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_writemore
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_timewait_input
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_listen_input
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rexmit_rto_commit
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_slowtmr
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_remove
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_fasttmr
</UL>

<P><STRONG><a name="[448]"></a>tcp_pcb_purge</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, tcp.o(i.tcp_pcb_purge))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = tcp_pcb_purge &rArr; tcp_segs_free &rArr; tcp_seg_free &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_segs_free
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close_shutdown
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_slowtmr
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_remove
</UL>

<P><STRONG><a name="[43c]"></a>tcp_pcb_remove</STRONG> (Thumb, 184 bytes, Stack size 16 bytes, tcp.o(i.tcp_pcb_remove))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = tcp_pcb_remove &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; tcp_output_control_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_purge
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close_shutdown
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input_delayed_close
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abandon
</UL>

<P><STRONG><a name="[38c]"></a>tcp_poll</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, tcp.o(i.tcp_poll))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = tcp_poll &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_tcp
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_close_internal
</UL>

<P><STRONG><a name="[455]"></a>tcp_process_refused_data</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, tcp.o(i.tcp_process_refused_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = tcp_process_refused_data &rArr; tcp_recv_null &rArr; tcp_close &rArr; tcp_close_shutdown &rArr; tcp_close_shutdown_fin &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; tcp_output_control_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recv_null
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_fasttmr
</UL>

<P><STRONG><a name="[38a]"></a>tcp_recv</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, tcp.o(i.tcp_recv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = tcp_recv &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_tcp
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_close_internal
</UL>

<P><STRONG><a name="[e8]"></a>tcp_recv_null</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, tcp.o(i.tcp_recv_null))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = tcp_recv_null &rArr; tcp_close &rArr; tcp_close_shutdown &rArr; tcp_close_shutdown_fin &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; tcp_output_control_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recved
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process_refused_data
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tcp.o(i.tcp_alloc)
</UL>
<P><STRONG><a name="[397]"></a>tcp_recved</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, tcp.o(i.tcp_recved))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = tcp_recved &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; tcp_output_control_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_update_rcv_ann_wnd
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_tcp
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_recv
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recv_null
</UL>

<P><STRONG><a name="[46b]"></a>tcp_rexmit</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, tcp_out.o(i.tcp_rexmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = tcp_rexmit &rArr; tcp_output_segment_busy &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htonl
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_segment_busy
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rexmit_fast
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process
</UL>

<P><STRONG><a name="[46c]"></a>tcp_rexmit_fast</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, tcp_out.o(i.tcp_rexmit_fast))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = tcp_rexmit_fast &rArr; tcp_rexmit &rArr; tcp_output_segment_busy &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rexmit
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
</UL>

<P><STRONG><a name="[469]"></a>tcp_rexmit_rto</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, tcp_out.o(i.tcp_rexmit_rto))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = tcp_rexmit_rto &rArr; tcp_rexmit_rto_commit &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; tcp_output_control_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rexmit_rto_prepare
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rexmit_rto_commit
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process
</UL>

<P><STRONG><a name="[46f]"></a>tcp_rexmit_rto_commit</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, tcp_out.o(i.tcp_rexmit_rto_commit))
<BR><BR>[Stack]<UL><LI>Max Depth = 536<LI>Call Chain = tcp_rexmit_rto_commit &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; tcp_output_control_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rexmit_rto
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_slowtmr
</UL>

<P><STRONG><a name="[46e]"></a>tcp_rexmit_rto_prepare</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, tcp_out.o(i.tcp_rexmit_rto_prepare))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = tcp_rexmit_rto_prepare &rArr; tcp_output_segment_busy &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htonl
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_segment_busy
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rexmit_rto
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_slowtmr
</UL>

<P><STRONG><a name="[43f]"></a>tcp_rst</STRONG> (Thumb, 128 bytes, Stack size 56 bytes, tcp_out.o(i.tcp_rst))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = tcp_rst &rArr; tcp_output_control_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htonl
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_fill_options
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_control_segment
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_alloc_header_common
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close_shutdown
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_timewait_input
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_listen_input
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_slowtmr
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abandon
</UL>

<P><STRONG><a name="[453]"></a>tcp_seg_free</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, tcp.o(i.tcp_seg_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = tcp_seg_free &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
</UL>
<BR>[Called By]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_create_segment
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_free_acked_segments
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_segs_free
</UL>

<P><STRONG><a name="[43e]"></a>tcp_segs_free</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, tcp.o(i.tcp_segs_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = tcp_segs_free &rArr; tcp_seg_free &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_seg_free
</UL>
<BR>[Called By]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_purge
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abandon
</UL>

<P><STRONG><a name="[459]"></a>tcp_send_empty_ack</STRONG> (Thumb, 184 bytes, Stack size 32 bytes, tcp_out.o(i.tcp_send_empty_ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = tcp_send_empty_ack &rArr; tcp_output_control_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htonl
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_fill_options
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_control_segment
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_alloc_header
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
</UL>

<P><STRONG><a name="[44d]"></a>tcp_send_fin</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, tcp_out.o(i.tcp_send_fin))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = tcp_send_fin &rArr; tcp_enqueue_flags &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_enqueue_flags
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close_shutdown_fin
</UL>

<P><STRONG><a name="[38b]"></a>tcp_sent</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, tcp.o(i.tcp_sent))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = tcp_sent &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_tcp
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_close_internal
</UL>

<P><STRONG><a name="[38f]"></a>tcp_shutdown</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, tcp.o(i.tcp_shutdown))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = tcp_shutdown &rArr; tcp_close_shutdown &rArr; tcp_close_shutdown_fin &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; tcp_output_control_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close_shutdown
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_close_internal
</UL>

<P><STRONG><a name="[470]"></a>tcp_slowtmr</STRONG> (Thumb, 1486 bytes, Stack size 56 bytes, tcp.o(i.tcp_slowtmr))
<BR><BR>[Stack]<UL><LI>Max Depth = 592<LI>Call Chain = tcp_slowtmr &rArr; tcp_rexmit_rto_commit &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; tcp_output_control_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_zero_window_probe
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_split_unsent_seg
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rexmit_rto_prepare
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rexmit_rto_commit
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_keepalive
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_purge
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_free
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tmr
</UL>

<P><STRONG><a name="[472]"></a>tcp_split_unsent_seg</STRONG> (Thumb, 468 bytes, Stack size 56 bytes, tcp_out.o(i.tcp_split_unsent_seg))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = tcp_split_unsent_seg &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_realloc
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_clen
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htonl
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_copy_partial
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_create_segment
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_slowtmr
</UL>

<P><STRONG><a name="[446]"></a>tcp_timer_needed</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, timeouts.o(i.tcp_timer_needed))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = tcp_timer_needed &rArr; sys_timeout &rArr; sys_timeout_abs &rArr; memp_malloc &rArr; do_memp_malloc_pool &rArr; sys_arch_unprotect &rArr; vPortExitCritical &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timeout
</UL>
<BR>[Called By]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_connect
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_bind
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_listen_input
</UL>

<P><STRONG><a name="[ef]"></a>tcp_tmr</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, tcp.o(i.tcp_tmr))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = tcp_tmr &rArr; tcp_fasttmr &rArr; tcp_process_refused_data &rArr; tcp_recv_null &rArr; tcp_close &rArr; tcp_close_shutdown &rArr; tcp_close_shutdown_fin &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; tcp_output_control_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_slowtmr
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_fasttmr
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_tcp_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timeouts.o(.constdata)
</UL>
<P><STRONG><a name="[449]"></a>tcp_trigger_input_pcb_close</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, tcp_in.o(i.tcp_trigger_input_pcb_close))
<BR><BR>[Called By]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close_shutdown
</UL>

<P><STRONG><a name="[46d]"></a>tcp_update_rcv_ann_wnd</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, tcp.o(i.tcp_update_rcv_ann_wnd))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = tcp_update_rcv_ann_wnd &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recved
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
</UL>

<P><STRONG><a name="[39b]"></a>tcp_write</STRONG> (Thumb, 1712 bytes, Stack size 120 bytes, tcp_out.o(i.tcp_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = tcp_write &rArr; tcp_pbuf_prealloc &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_clen
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_cat
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write_checks
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pbuf_prealloc
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_create_segment
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_segs_free
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_writemore
</UL>

<P><STRONG><a name="[471]"></a>tcp_zero_window_probe</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, tcp_out.o(i.tcp_zero_window_probe))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = tcp_zero_window_probe &rArr; tcp_output_control_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htonl
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_copy_partial
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_fill_options
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_control_segment
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_alloc_header
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_slowtmr
</UL>

<P><STRONG><a name="[188]"></a>tcpip_init</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, tcpip.o(i.tcpip_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = tcpip_init &rArr; sys_thread_new &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_thread_new
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_new
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mutex_new
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_init
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCPIP_Init
</UL>

<P><STRONG><a name="[475]"></a>tcpip_inpkt</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, tcpip.o(i.tcpip_inpkt))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = tcpip_inpkt &rArr; sys_mbox_trypost &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_trypost
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_valid
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_input
</UL>

<P><STRONG><a name="[9f]"></a>tcpip_input</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, tcpip.o(i.tcpip_input))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = tcpip_input &rArr; tcpip_inpkt &rArr; sys_mbox_trypost &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_inpkt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sys_arch.o(i.TCPIP_Init)
</UL>
<P><STRONG><a name="[3ca]"></a>tcpip_send_msg_wait_sem</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, tcpip.o(i.tcpip_send_msg_wait_sem))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = tcpip_send_msg_wait_sem &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mutex_unlock
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mutex_lock
</UL>
<BR>[Called By]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_apimsg
</UL>

<P><STRONG><a name="[384]"></a>udp_bind</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, udp.o(i.udp_bind))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = udp_bind &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_new_port
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_connect
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_bind
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if_src
</UL>

<P><STRONG><a name="[3b3]"></a>udp_bind_netif</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, udp.o(i.udp_bind_netif))
<BR><BR>[Called By]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_setsockopt_impl
</UL>

<P><STRONG><a name="[391]"></a>udp_connect</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, udp.o(i.udp_connect))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = udp_connect &rArr; udp_bind &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_bind
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_connect
</UL>

<P><STRONG><a name="[395]"></a>udp_disconnect</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, udp.o(i.udp_disconnect))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = udp_disconnect &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_disconnect
</UL>

<P><STRONG><a name="[380]"></a>udp_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, udp.o(i.udp_init))
<BR><BR>[Called By]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_init
</UL>

<P><STRONG><a name="[356]"></a>udp_input</STRONG> (Thumb, 388 bytes, Stack size 48 bytes, udp.o(i.udp_input))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = udp_input &rArr; icmp_dest_unreach &rArr; icmp_send_response &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_remove_header
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_header_force
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_dest_unreach
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_input_local_match
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_addr_isbroadcast_u32
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_input
</UL>

<P><STRONG><a name="[3d5]"></a>udp_netif_ip_addr_changed</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, udp.o(i.udp_netif_ip_addr_changed))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = udp_netif_ip_addr_changed
</UL>
<BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_do_ip_addr_changed
</UL>

<P><STRONG><a name="[47c]"></a>udp_new</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, udp.o(i.udp_new))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = udp_new &rArr; memp_malloc &rArr; do_memp_malloc_pool &rArr; sys_arch_unprotect &rArr; vPortExitCritical &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_new_ip_type
</UL>

<P><STRONG><a name="[410]"></a>udp_new_ip_type</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, udp.o(i.udp_new_ip_type))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = udp_new_ip_type &rArr; udp_new &rArr; memp_malloc &rArr; do_memp_malloc_pool &rArr; sys_arch_unprotect &rArr; vPortExitCritical &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_new
</UL>
<BR>[Called By]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcb_new
</UL>

<P><STRONG><a name="[411]"></a>udp_recv</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, udp.o(i.udp_recv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = udp_recv &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcb_new
</UL>

<P><STRONG><a name="[394]"></a>udp_remove</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, udp.o(i.udp_remove))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = udp_remove &rArr; memp_free &rArr; do_memp_free_pool &rArr; sys_arch_unprotect &rArr; vPortExitCritical &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_delconn
</UL>

<P><STRONG><a name="[398]"></a>udp_send</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, udp.o(i.udp_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = udp_send &rArr; udp_sendto &rArr; udp_sendto_if &rArr; udp_sendto_if_src &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_send
</UL>

<P><STRONG><a name="[399]"></a>udp_sendto</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, udp.o(i.udp_sendto))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = udp_sendto &rArr; udp_sendto_if &rArr; udp_sendto_if_src &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_get_by_index
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_route
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_send
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_send
</UL>

<P><STRONG><a name="[47d]"></a>udp_sendto_if</STRONG> (Thumb, 162 bytes, Stack size 40 bytes, udp.o(i.udp_sendto_if))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = udp_sendto_if &rArr; udp_sendto_if_src &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if_src
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto
</UL>

<P><STRONG><a name="[47e]"></a>udp_sendto_if_src</STRONG> (Thumb, 332 bytes, Stack size 72 bytes, udp.o(i.udp_sendto_if_src))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = udp_sendto_if_src &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_chain
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_add_header
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_bind
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_output_if_src
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if
</UL>

<P><STRONG><a name="[120]"></a>udpecho_init</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, udpecho.o(i.udpecho_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = udpecho_init &rArr; sys_thread_new &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_thread_new
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskCreate
</UL>

<P><STRONG><a name="[415]"></a>uxListRemove</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, list.o(i.uxListRemove))
<BR><BR>[Called By]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPriorityInherit
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
</UL>

<P><STRONG><a name="[435]"></a>uxQueueMessagesWaiting</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, queue.o(i.uxQueueMessagesWaiting))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = uxQueueMessagesWaiting &rArr; vPortExitCritical &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_free
</UL>

<P><STRONG><a name="[429]"></a>vListInitialise</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, list.o(i.vListInitialise))
<BR><BR>[Called By]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseTaskLists
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
</UL>

<P><STRONG><a name="[427]"></a>vListInitialiseItem</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, list.o(i.vListInitialiseItem))
<BR><BR>[Called By]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
</UL>

<P><STRONG><a name="[417]"></a>vListInsert</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, list.o(i.vListInsert))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
</UL>

<P><STRONG><a name="[416]"></a>vListInsertEnd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, list.o(i.vListInsertEnd))
<BR><BR>[Called By]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPriorityInherit
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
</UL>

<P><STRONG><a name="[123]"></a>vPortEnterCritical</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, port.o(i.vPortEnterCritical))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = vPortEnterCritical &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskCreate
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxQueueMessagesWaiting
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueFull
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernetif_input
</UL>

<P><STRONG><a name="[136]"></a>vPortExitCritical</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, port.o(i.vPortExitCritical))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = vPortExitCritical &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskCreate
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxQueueMessagesWaiting
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueFull
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernetif_input
</UL>

<P><STRONG><a name="[421]"></a>vPortFree</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, heap_4.o(i.vPortFree))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertBlockIntoFreeList
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvDeleteTCB
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueDelete
</UL>

<P><STRONG><a name="[486]"></a>vPortSetupTimerInterrupt</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, port.o(i.vPortSetupTimerInterrupt))
<BR><BR>[Called By]<UL><LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[47f]"></a>vPortValidateInterruptPriority</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, port.o(i.vPortValidateInterruptPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = vPortValidateInterruptPriority &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortGetIPSR
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveFromISR
</UL>

<P><STRONG><a name="[436]"></a>vQueueDelete</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, queue.o(i.vQueueDelete))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = vQueueDelete &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueUnregisterQueue
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_free
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_free
</UL>

<P><STRONG><a name="[481]"></a>vQueueUnregisterQueue</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, queue.o(i.vQueueUnregisterQueue))
<BR><BR>[Called By]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueDelete
</UL>

<P><STRONG><a name="[42e]"></a>vTaskMissedYield</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tasks.o(i.vTaskMissedYield))
<BR><BR>[Called By]<UL><LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
</UL>

<P><STRONG><a name="[482]"></a>vTaskPlaceOnEventList</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, tasks.o(i.vTaskPlaceOnEventList))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[483]"></a>vTaskPriorityInherit</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, tasks.o(i.vTaskPriorityInherit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = vTaskPriorityInherit
</UL>
<BR>[Calls]<UL><LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[484]"></a>vTaskSetTimeOutState</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, tasks.o(i.vTaskSetTimeOutState))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = vTaskSetTimeOutState &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[3b6]"></a>vTaskStartScheduler</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, tasks.o(i.vTaskStartScheduler))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = vTaskStartScheduler &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[41b]"></a>vTaskSuspendAll</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, tasks.o(i.vTaskSuspendAll))
<BR><BR>[Called By]<UL><LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
</UL>

<P><STRONG><a name="[fe]"></a>vTaskSwitchContext</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, tasks.o(i.vTaskSwitchContext))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = vTaskSwitchContext &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>

<P><STRONG><a name="[1db]"></a>via_get_host</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, osip_via.o(i.via_get_host))
<BR><BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_matching_request_osip_to_xist_17_2_3
</UL>

<P><STRONG><a name="[1da]"></a>via_get_port</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, osip_via.o(i.via_get_port))
<BR><BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_matching_request_osip_to_xist_17_2_3
</UL>

<P><STRONG><a name="[1b0]"></a>via_get_protocol</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, osip_via.o(i.via_get_protocol))
<BR><BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_nist_init
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_nict_timeout_e_event
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nict_snd_request
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_nict_init
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_ist_init
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_ict_timeout_a_event
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ict_snd_invite
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_ict_init
</UL>

<P><STRONG><a name="[485]"></a>xPortStartScheduler</STRONG> (Thumb, 258 bytes, Stack size 16 bytes, port.o(i.xPortStartScheduler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = xPortStartScheduler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortSetupTimerInterrupt
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___6_port_c_39a90d8d__prvEnableVFP
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___6_port_c_39a90d8d__prvStartFirstTask
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[186]"></a>xPortSysTickHandler</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, port.o(i.xPortSysTickHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = xPortSysTickHandler &rArr; xTaskIncrementTick &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[365]"></a>xQueueCreateCountingSemaphore</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, queue.o(i.xQueueCreateCountingSemaphore))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = xQueueCreateCountingSemaphore &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_new
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_init
</UL>

<P><STRONG><a name="[438]"></a>xQueueCreateMutex</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, queue.o(i.xQueueCreateMutex))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = xQueueCreateMutex &rArr; prvInitialiseMutex &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseMutex
</UL>
<BR>[Called By]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mutex_new
</UL>

<P><STRONG><a name="[437]"></a>xQueueGenericCreate</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, queue.o(i.xQueueGenericCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewQueue
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateMutex
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphore
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_new
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_new
</UL>

<P><STRONG><a name="[330]"></a>xQueueGenericReceive</STRONG> (Thumb, 416 bytes, Stack size 56 bytes, queue.o(i.xQueueGenericReceive))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSetTimeOutState
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPriorityInherit
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvTaskIncrementMutexHeldCount
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mutex_lock
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_sem_wait
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_mbox_tryfetch
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_mbox_fetch
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernetif_input
</UL>

<P><STRONG><a name="[425]"></a>xQueueGenericReset</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, queue.o(i.xQueueGenericReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = xQueueGenericReset &rArr; xTaskRemoveFromEventList &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewQueue
</UL>

<P><STRONG><a name="[423]"></a>xQueueGenericSend</STRONG> (Thumb, 380 bytes, Stack size 56 bytes, queue.o(i.xQueueGenericSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSetTimeOutState
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueFull
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseMutex
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mutex_unlock
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_trypost
</UL>

<P><STRONG><a name="[168]"></a>xQueueGiveFromISR</STRONG> (Thumb, 194 bytes, Stack size 32 bytes, queue.o(i.xQueueGiveFromISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = xQueueGiveFromISR &rArr; xTaskRemoveFromEventList &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ETH_RxCpltCallback
</UL>

<P><STRONG><a name="[48b]"></a>xTaskCheckForTimeOut</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, tasks.o(i.xTaskCheckForTimeOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = xTaskCheckForTimeOut &rArr; vPortExitCritical &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSetTimeOutState
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[3b5]"></a>xTaskCreate</STRONG> (Thumb, 96 bytes, Stack size 72 bytes, tasks.o(i.xTaskCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
</UL>
<BR>[Called By]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_thread_new
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[185]"></a>xTaskGetSchedulerState</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, tasks.o(i.xTaskGetSchedulerState))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[433]"></a>xTaskGetTickCount</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tasks.o(i.xTaskGetTickCount))
<BR><BR>[Called By]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_sem_wait
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_now
</UL>

<P><STRONG><a name="[489]"></a>xTaskIncrementTick</STRONG> (Thumb, 272 bytes, Stack size 24 bytes, tasks.o(i.xTaskIncrementTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = xTaskIncrementTick &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortSysTickHandler
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
</UL>

<P><STRONG><a name="[420]"></a>xTaskPriorityDisinherit</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, tasks.o(i.xTaskPriorityDisinherit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
</UL>

<P><STRONG><a name="[42d]"></a>xTaskRemoveFromEventList</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, tasks.o(i.xTaskRemoveFromEventList))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = xTaskRemoveFromEventList &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveFromISR
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
</UL>

<P><STRONG><a name="[41c]"></a>xTaskResumeAll</STRONG> (Thumb, 214 bytes, Stack size 16 bytes, tasks.o(i.xTaskResumeAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = xTaskResumeAll &rArr; xTaskIncrementTick &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[16b]"></a>ETH_DMAReceptionEnable</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_hal_eth.o(i.ETH_DMAReceptionEnable))
<BR><BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ETH_Start
</UL>

<P><STRONG><a name="[16a]"></a>ETH_DMATransmissionEnable</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_hal_eth.o(i.ETH_DMATransmissionEnable))
<BR><BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ETH_Start
</UL>

<P><STRONG><a name="[157]"></a>ETH_Delay</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, stm32f4xx_hal_eth.o(i.ETH_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ETH_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_MACTransmissionEnable
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_MACReceptionEnable
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_FlushTransmitFIFO
</UL>

<P><STRONG><a name="[156]"></a>ETH_FlushTransmitFIFO</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, stm32f4xx_hal_eth.o(i.ETH_FlushTransmitFIFO))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ETH_FlushTransmitFIFO &rArr; ETH_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ETH_Start
</UL>

<P><STRONG><a name="[15b]"></a>ETH_MACAddressConfig</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, stm32f4xx_hal_eth.o(i.ETH_MACAddressConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ETH_MACAddressConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_MACDMAConfig
</UL>

<P><STRONG><a name="[159]"></a>ETH_MACDMAConfig</STRONG> (Thumb, 566 bytes, Stack size 200 bytes, stm32f4xx_hal_eth.o(i.ETH_MACDMAConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = ETH_MACDMAConfig &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_MACAddressConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ETH_Init
</UL>

<P><STRONG><a name="[15c]"></a>ETH_MACReceptionEnable</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, stm32f4xx_hal_eth.o(i.ETH_MACReceptionEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ETH_MACReceptionEnable &rArr; ETH_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ETH_Start
</UL>

<P><STRONG><a name="[15d]"></a>ETH_MACTransmissionEnable</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, stm32f4xx_hal_eth.o(i.ETH_MACTransmissionEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ETH_MACTransmissionEnable &rArr; ETH_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ETH_Start
</UL>

<P><STRONG><a name="[9e]"></a>UART_DMAAbortOnError</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, stm32f4xx_hal_uart.o(i.UART_DMAAbortOnError))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART_DMAAbortOnError
</UL>
<BR>[Calls]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f4xx_hal_uart.o(i.HAL_UART_IRQHandler)
</UL>
<P><STRONG><a name="[17a]"></a>UART_EndRxTransfer</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f4xx_hal_uart.o(i.UART_EndRxTransfer))
<BR><BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[17e]"></a>UART_EndTransmit_IT</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f4xx_hal_uart.o(i.UART_EndTransmit_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_EndTransmit_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_TxCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[179]"></a>UART_Receive_IT</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, stm32f4xx_hal_uart.o(i.UART_Receive_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART_Receive_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[180]"></a>UART_SetConfig</STRONG> (Thumb, 864 bytes, Stack size 24 bytes, stm32f4xx_hal_uart.o(i.UART_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = UART_SetConfig &rArr; HAL_RCC_GetPCLK2Freq
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[17d]"></a>UART_Transmit_IT</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, stm32f4xx_hal_uart.o(i.UART_Transmit_IT))
<BR><BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[182]"></a>UART_WaitOnFlagUntilTimeout</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, stm32f4xx_hal_uart.o(i.UART_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive
</UL>

<P><STRONG><a name="[170]"></a>NVIC_GetPriorityGrouping</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(i.NVIC_GetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[171]"></a>NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f4xx_hal_cortex.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[bd]"></a>AppTaskCreate</STRONG> (Thumb, 698 bytes, Stack size 96 bytes, main.o(i.AppTaskCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 3212<LI>Call Chain = AppTaskCreate &rArr; eXosip_automatic_action &rArr; eXosip_register_send_register &rArr; _eXosip_register_build_register &rArr; _eXosip_add_authentication_information &rArr; _eXosip_create_proxy_authorization_header &rArr; DigestCalcResponseAka &rArr; f1 &rArr; ComputeOPc &rArr; RijndaelEncrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udpecho_init
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strdup
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_set_user_agent
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_set_option
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_register_send_register
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_register_build_initial_register
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_quit
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_message_send_answer
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_message_build_answer
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_malloc
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_listen_addr
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_init
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_event_wait
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_event_free
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_send_answer
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_build_answer
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_automatic_action
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_add_authentication_info
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_SendString
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCPIP_Init
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[139]"></a>GPIO_CLK_Init</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, board.o(i.GPIO_CLK_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_CLK_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[13a]"></a>SystemClock_Config</STRONG> (Thumb, 194 bytes, Stack size 80 bytes, board.o(i.SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = SystemClock_Config &rArr; HAL_RCC_ClockConfig &rArr; HAL_RCC_GetSysClockFreq &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_CLKSourceConfig
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_EnableOverDrive
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[ed]"></a>udpecho_thread</STRONG> (Thumb, 226 bytes, Stack size 48 bytes, udpecho.o(i.udpecho_thread))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = udpecho_thread &rArr; lwip_recvfrom &rArr; lwip_recv_tcp &rArr; netconn_recv_tcp_pbuf_flags &rArr; netconn_recv_data_tcp &rArr; netconn_close_shutdown &rArr; netconn_apimsg &rArr; tcpip_send_msg_wait_sem &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_socket
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_sendto
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recvfrom
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_close
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_bind
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4addr_ntoa
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> udpecho.o(i.udpecho_init)
</UL>
<P><STRONG><a name="[41e]"></a>prvCopyDataFromQueue</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, queue.o(i.prvCopyDataFromQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = prvCopyDataFromQueue &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[41f]"></a>prvCopyDataToQueue</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, queue.o(i.prvCopyDataToQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[422]"></a>prvInitialiseMutex</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, queue.o(i.prvInitialiseMutex))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = prvInitialiseMutex &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateMutex
</UL>

<P><STRONG><a name="[424]"></a>prvInitialiseNewQueue</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, queue.o(i.prvInitialiseNewQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
</UL>
<BR>[Called By]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
</UL>

<P><STRONG><a name="[42a]"></a>prvIsQueueEmpty</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, queue.o(i.prvIsQueueEmpty))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = prvIsQueueEmpty &rArr; vPortExitCritical &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[42b]"></a>prvIsQueueFull</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, queue.o(i.prvIsQueueFull))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = prvIsQueueFull &rArr; vPortExitCritical &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[42c]"></a>prvUnlockQueue</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, queue.o(i.prvUnlockQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = prvUnlockQueue &rArr; xTaskRemoveFromEventList &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskMissedYield
</UL>
<BR>[Called By]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[414]"></a>prvAddCurrentTaskToDelayedList</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, tasks.o(i.prvAddCurrentTaskToDelayedList))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
</UL>

<P><STRONG><a name="[418]"></a>prvAddNewTaskToReadyList</STRONG> (Thumb, 150 bytes, Stack size 8 bytes, tasks.o(i.prvAddNewTaskToReadyList))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = prvAddNewTaskToReadyList &rArr; vPortExitCritical &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseTaskLists
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
</UL>
<BR>[Called By]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[41a]"></a>prvCheckTasksWaitingTermination</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, tasks.o(i.prvCheckTasksWaitingTermination))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = prvCheckTasksWaitingTermination &rArr; prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvDeleteTCB
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
</UL>

<P><STRONG><a name="[41d]"></a>prvDeleteTCB</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, tasks.o(i.prvDeleteTCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
</UL>
<BR>[Called By]<UL><LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
</UL>

<P><STRONG><a name="[ee]"></a>prvIdleTask</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, tasks.o(i.prvIdleTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = prvIdleTask &rArr; prvCheckTasksWaitingTermination &rArr; prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tasks.o(i.vTaskStartScheduler)
</UL>
<P><STRONG><a name="[426]"></a>prvInitialiseNewTask</STRONG> (Thumb, 160 bytes, Stack size 56 bytes, tasks.o(i.prvInitialiseNewTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = prvInitialiseNewTask &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pxPortInitialiseStack
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialiseItem
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[419]"></a>prvInitialiseTaskLists</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, tasks.o(i.prvInitialiseTaskLists))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = prvInitialiseTaskLists
</UL>
<BR>[Calls]<UL><LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
</UL>

<P><STRONG><a name="[48c]"></a>prvResetNextTaskUnblockTime</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, tasks.o(i.prvResetNextTaskUnblockTime))
<BR><BR>[Called By]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
</UL>

<P><STRONG><a name="[430]"></a>prvHeapInit</STRONG> (Thumb, 98 bytes, Stack size 12 bytes, heap_4.o(i.prvHeapInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = prvHeapInit
</UL>
<BR>[Called By]<UL><LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[431]"></a>prvInsertBlockIntoFreeList</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, heap_4.o(i.prvInsertBlockIntoFreeList))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = prvInsertBlockIntoFreeList
</UL>
<BR>[Called By]<UL><LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
</UL>

<P><STRONG><a name="[e6]"></a>prvTaskExitError</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, port.o(i.prvTaskExitError))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = prvTaskExitError &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> port.o(i.pxPortInitialiseStack)
</UL>
<P><STRONG><a name="[3c9]"></a>netconn_apimsg</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, api_lib.o(i.netconn_apimsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = netconn_apimsg &rArr; tcpip_send_msg_wait_sem &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_send_msg_wait_sem
</UL>
<BR>[Called By]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_write_vectors_partly
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_send
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_prepare_delete
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_new_with_proto_and_callback
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_getaddr
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_disconnect
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_connect
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_bind
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_tcp_recvd_msg
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_close_shutdown
</UL>

<P><STRONG><a name="[3cb]"></a>netconn_close_shutdown</STRONG> (Thumb, 58 bytes, Stack size 48 bytes, api_lib.o(i.netconn_close_shutdown))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = netconn_close_shutdown &rArr; netconn_apimsg &rArr; tcpip_send_msg_wait_sem &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_apimsg
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recv_data_tcp
</UL>

<P><STRONG><a name="[3ce]"></a>netconn_recv_data</STRONG> (Thumb, 280 bytes, Stack size 32 bytes, api_lib.o(i.netconn_recv_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = netconn_recv_data &rArr; sys_arch_mbox_fetch &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_valid
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_mbox_tryfetch
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_mbox_fetch
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_is_err_msg
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_err
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recv_udp_raw_netbuf_flags
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recv_data_tcp
</UL>

<P><STRONG><a name="[3cf]"></a>netconn_recv_data_tcp</STRONG> (Thumb, 188 bytes, Stack size 64 bytes, api_lib.o(i.netconn_recv_data_tcp))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = netconn_recv_data_tcp &rArr; netconn_close_shutdown &rArr; netconn_apimsg &rArr; tcpip_send_msg_wait_sem &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_valid
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_err
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_tcp_recvd_msg
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recv_data
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_close_shutdown
</UL>
<BR>[Called By]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recv_tcp_pbuf_flags
</UL>

<P><STRONG><a name="[3d0]"></a>netconn_tcp_recvd_msg</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, api_lib.o(i.netconn_tcp_recvd_msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = netconn_tcp_recvd_msg &rArr; netconn_apimsg &rArr; tcpip_send_msg_wait_sem &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_apimsg
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_tcp_recvd
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recv_data_tcp
</UL>

<P><STRONG><a name="[ba]"></a>err_tcp</STRONG> (Thumb, 288 bytes, Stack size 40 bytes, api_msg.o(i.err_tcp))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = err_tcp &rArr; sys_mbox_trypost &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_trypost
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_err_to_msg
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_valid
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_valid
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 2]<UL><LI> api_msg.o(i.lwip_netconn_do_close_internal)
<LI> api_msg.o(i.setup_tcp)
</UL>
<P><STRONG><a name="[387]"></a>lwip_netconn_do_close_internal</STRONG> (Thumb, 512 bytes, Stack size 48 bytes, api_msg.o(i.lwip_netconn_do_close_internal))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = lwip_netconn_do_close_internal &rArr; tcp_abort &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; tcp_output_control_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_shutdown
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_sent
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recv
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_poll
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_err
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_arg
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_accept
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abort
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sent_tcp
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;poll_tcp
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_delconn
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_close
</UL>

<P><STRONG><a name="[bb]"></a>lwip_netconn_do_connected</STRONG> (Thumb, 186 bytes, Stack size 32 bytes, api_msg.o(i.lwip_netconn_do_connected))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = lwip_netconn_do_connected &rArr; sys_sem_signal &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_tcp
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_msg.o(i.lwip_netconn_do_connect)
</UL>
<P><STRONG><a name="[39a]"></a>lwip_netconn_do_writemore</STRONG> (Thumb, 654 bytes, Stack size 56 bytes, api_msg.o(i.lwip_netconn_do_writemore))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = lwip_netconn_do_writemore &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; tcp_output_control_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sent_tcp
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;poll_tcp
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_write
</UL>

<P><STRONG><a name="[317]"></a>lwip_netconn_err_to_msg</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, api_msg.o(i.lwip_netconn_err_to_msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lwip_netconn_err_to_msg &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;err_tcp
</UL>

<P><STRONG><a name="[386]"></a>netconn_drain</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, api_msg.o(i.netconn_drain))
<BR><BR>[Stack]<UL><LI>Max Depth = 632 + In Cycle
<LI>Call Chain = netconn_drain &rArr;  netconn_drain (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abort
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_set_invalid
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbuf_delete
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_drain
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_valid
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_free
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_mbox_tryfetch
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_free
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_is_err_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_drain
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_delconn
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_close
</UL>

<P><STRONG><a name="[396]"></a>pcb_new</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, api_msg.o(i.pcb_new))
<BR><BR>[Stack]<UL><LI>Max Depth = 680<LI>Call Chain = pcb_new &rArr; tcp_new_ip_type &rArr; tcp_alloc &rArr; tcp_kill_prio &rArr; tcp_abort &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; tcp_output_control_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_recv
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_new_ip_type
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_new_ip_type
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_tcp
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_newconn
</UL>

<P><STRONG><a name="[b9]"></a>poll_tcp</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, api_msg.o(i.poll_tcp))
<BR><BR>[Stack]<UL><LI>Max Depth = 672<LI>Call Chain = poll_tcp &rArr; lwip_netconn_do_close_internal &rArr; tcp_abort &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; tcp_output_control_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_writemore
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_close_internal
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 2]<UL><LI> api_msg.o(i.lwip_netconn_do_close_internal)
<LI> api_msg.o(i.setup_tcp)
</UL>
<P><STRONG><a name="[e7]"></a>recv_tcp</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, api_msg.o(i.recv_tcp))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = recv_tcp &rArr; tcp_recved &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; tcp_output_control_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recved
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_trypost
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_valid
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_msg.o(i.setup_tcp)
</UL>
<P><STRONG><a name="[e5]"></a>recv_udp</STRONG> (Thumb, 188 bytes, Stack size 40 bytes, api_msg.o(i.recv_udp))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = recv_udp &rArr; netbuf_delete &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_trypost
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbuf_delete
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_valid
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_msg.o(i.pcb_new)
</UL>
<P><STRONG><a name="[b8]"></a>sent_tcp</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, api_msg.o(i.sent_tcp))
<BR><BR>[Stack]<UL><LI>Max Depth = 680<LI>Call Chain = sent_tcp &rArr; lwip_netconn_do_close_internal &rArr; tcp_abort &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; tcp_output_control_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_writemore
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_close_internal
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 2]<UL><LI> api_msg.o(i.lwip_netconn_do_close_internal)
<LI> api_msg.o(i.setup_tcp)
</UL>
<P><STRONG><a name="[392]"></a>setup_tcp</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, api_msg.o(i.setup_tcp))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = setup_tcp &rArr; tcp_sent &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_sent
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recv
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_poll
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_err
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_arg
</UL>
<BR>[Called By]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcb_new
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_connected
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_netconn_do_connect
</UL>

<P><STRONG><a name="[2e9]"></a>alloc_socket</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, sockets.o(i.alloc_socket))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = alloc_socket &rArr; sys_arch_unprotect &rArr; vPortExitCritical &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_socket
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_accept
</UL>

<P><STRONG><a name="[bc]"></a>event_callback</STRONG> (Thumb, 254 bytes, Stack size 40 bytes, sockets.o(i.event_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = event_callback &rArr; select_check_waiters &rArr; sys_sem_signal &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;select_check_waiters
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_socket
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sockets.o(i.lwip_socket)
</UL>
<P><STRONG><a name="[336]"></a>free_socket</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, sockets.o(i.free_socket))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = free_socket &rArr; free_socket_free_elements &rArr; netconn_delete &rArr; netconn_prepare_delete &rArr; netconn_apimsg &rArr; tcpip_send_msg_wait_sem &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_socket_locked
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_socket_free_elements
</UL>
<BR>[Called By]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_close
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_accept
</UL>

<P><STRONG><a name="[338]"></a>free_socket_free_elements</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, sockets.o(i.free_socket_free_elements))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = free_socket_free_elements &rArr; netconn_delete &rArr; netconn_prepare_delete &rArr; netconn_apimsg &rArr; tcpip_send_msg_wait_sem &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbuf_delete
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_delete
</UL>
<BR>[Called By]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_socket
</UL>

<P><STRONG><a name="[337]"></a>free_socket_locked</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, sockets.o(i.free_socket_locked))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = free_socket_locked
</UL>
<BR>[Called By]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_socket
</UL>

<P><STRONG><a name="[332]"></a>get_socket</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, sockets.o(i.get_socket))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = get_socket &rArr; tryget_socket &rArr; tryget_socket_unconn
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tryget_socket
</UL>
<BR>[Called By]<UL><LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_sendto
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recvfrom
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_close
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_bind
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_setsockopt
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_send
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getsockopt
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_fcntl
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_connect
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_accept
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getaddrname
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_callback
</UL>

<P><STRONG><a name="[377]"></a>lwip_getaddrname</STRONG> (Thumb, 162 bytes, Stack size 56 bytes, sockets.o(i.lwip_getaddrname))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = lwip_getaddrname &rArr; netconn_getaddr &rArr; netconn_apimsg &rArr; tcpip_send_msg_wait_sem &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;err_to_errno
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_getaddr
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_socket
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getsockname
</UL>

<P><STRONG><a name="[378]"></a>lwip_getsockopt_impl</STRONG> (Thumb, 676 bytes, Stack size 40 bytes, sockets.o(i.lwip_getsockopt_impl))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = lwip_getsockopt_impl &rArr; netconn_err &rArr; sys_arch_unprotect &rArr; vPortExitCritical &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;err_to_errno
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_err
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tryget_socket
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_sockopt_to_ipopt
</UL>
<BR>[Called By]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getsockopt
</UL>

<P><STRONG><a name="[383]"></a>lwip_link_select_cb</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, sockets.o(i.lwip_link_select_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = lwip_link_select_cb &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mutex_unlock
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mutex_lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_select
</UL>

<P><STRONG><a name="[432]"></a>lwip_poll_should_wake</STRONG> (Thumb, 72 bytes, Stack size 20 bytes, sockets.o(i.lwip_poll_should_wake))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lwip_poll_should_wake
</UL>
<BR>[Called By]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;select_check_waiters
</UL>

<P><STRONG><a name="[39e]"></a>lwip_recv_tcp</STRONG> (Thumb, 374 bytes, Stack size 64 bytes, sockets.o(i.lwip_recv_tcp))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = lwip_recv_tcp &rArr; netconn_recv_tcp_pbuf_flags &rArr; netconn_recv_data_tcp &rArr; netconn_close_shutdown &rArr; netconn_apimsg &rArr; tcpip_send_msg_wait_sem &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;err_to_errno
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_tcp_recvd
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recv_tcp_pbuf_flags
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free_header
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_copy_partial
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recvfrom
</UL>

<P><STRONG><a name="[3a3]"></a>lwip_recv_tcp_from</STRONG> (Thumb, 68 bytes, Stack size 40 bytes, sockets.o(i.lwip_recv_tcp_from))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = lwip_recv_tcp_from &rArr; netconn_getaddr &rArr; netconn_apimsg &rArr; tcpip_send_msg_wait_sem &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_getaddr
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_sock_make_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recvfrom
</UL>

<P><STRONG><a name="[3a5]"></a>lwip_recvfrom_udp_raw</STRONG> (Thumb, 284 bytes, Stack size 56 bytes, sockets.o(i.lwip_recvfrom_udp_raw))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = lwip_recvfrom_udp_raw &rArr; netconn_recv_udp_raw_netbuf_flags &rArr; netconn_recv_data &rArr; sys_arch_mbox_fetch &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbuf_delete
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recv_udp_raw_netbuf_flags
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_copy_partial
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_sock_make_addr
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recvfrom
</UL>

<P><STRONG><a name="[3a7]"></a>lwip_selscan</STRONG> (Thumb, 670 bytes, Stack size 64 bytes, sockets.o(i.lwip_selscan))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = lwip_selscan &rArr; sys_arch_unprotect &rArr; vPortExitCritical &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tryget_socket_unconn_locked
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_select
</UL>

<P><STRONG><a name="[3b0]"></a>lwip_setsockopt_impl</STRONG> (Thumb, 680 bytes, Stack size 40 bytes, sockets.o(i.lwip_setsockopt_impl))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = lwip_setsockopt_impl &rArr; netif_find &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_bind_netif
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_bind_netif
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_find
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tryget_socket
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_sockopt_to_ipopt
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_setsockopt
</UL>

<P><STRONG><a name="[3a4]"></a>lwip_sock_make_addr</STRONG> (Thumb, 152 bytes, Stack size 48 bytes, sockets.o(i.lwip_sock_make_addr))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = lwip_sock_make_addr &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recvfrom_udp_raw
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recv_tcp_from
</UL>

<P><STRONG><a name="[379]"></a>lwip_sockopt_to_ipopt</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, sockets.o(i.lwip_sockopt_to_ipopt))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lwip_sockopt_to_ipopt &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_setsockopt_impl
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getsockopt_impl
</UL>

<P><STRONG><a name="[3a9]"></a>lwip_unlink_select_cb</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, sockets.o(i.lwip_unlink_select_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = lwip_unlink_select_cb &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mutex_unlock
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mutex_lock
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_select
</UL>

<P><STRONG><a name="[333]"></a>select_check_waiters</STRONG> (Thumb, 258 bytes, Stack size 32 bytes, sockets.o(i.select_check_waiters))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = select_check_waiters &rArr; sys_sem_signal &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_poll_should_wake
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_callback
</UL>

<P><STRONG><a name="[33e]"></a>tryget_socket</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, sockets.o(i.tryget_socket))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = tryget_socket &rArr; tryget_socket_unconn
</UL>
<BR>[Calls]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tryget_socket_unconn
</UL>
<BR>[Called By]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_setsockopt_impl
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getsockopt_impl
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_socket
</UL>

<P><STRONG><a name="[478]"></a>tryget_socket_unconn</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, sockets.o(i.tryget_socket_unconn))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tryget_socket_unconn
</UL>
<BR>[Calls]<UL><LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tryget_socket_unconn_nouse
</UL>
<BR>[Called By]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tryget_socket
</UL>

<P><STRONG><a name="[3a8]"></a>tryget_socket_unconn_locked</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, sockets.o(i.tryget_socket_unconn_locked))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tryget_socket_unconn_locked
</UL>
<BR>[Calls]<UL><LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tryget_socket_unconn_nouse
</UL>
<BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_select
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_selscan
</UL>

<P><STRONG><a name="[479]"></a>tryget_socket_unconn_nouse</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, sockets.o(i.tryget_socket_unconn_nouse))
<BR><BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tryget_socket_unconn_locked
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tryget_socket_unconn
</UL>

<P><STRONG><a name="[ea]"></a>tcpip_thread</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, tcpip.o(i.tcpip_thread))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = tcpip_thread &rArr; tcpip_thread_handle_msg &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mutex_lock
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_timeouts_mbox_fetch
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_thread_handle_msg
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tcpip.o(i.tcpip_init)
</UL>
<P><STRONG><a name="[477]"></a>tcpip_thread_handle_msg</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, tcpip.o(i.tcpip_thread_handle_msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = tcpip_thread_handle_msg &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_thread
</UL>

<P><STRONG><a name="[476]"></a>tcpip_timeouts_mbox_fetch</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, tcpip.o(i.tcpip_timeouts_mbox_fetch))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = tcpip_timeouts_mbox_fetch &rArr; sys_arch_mbox_fetch &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mutex_unlock
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mutex_lock
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_mbox_fetch
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timeouts_sleeptime
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_check_timeouts
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_thread
</UL>

<P><STRONG><a name="[3b8]"></a>mem_link_valid</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, mem.o(i.mem_link_valid))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mem_link_valid
</UL>
<BR>[Calls]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_to_mem
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_to_ptr
</UL>
<BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free
</UL>

<P><STRONG><a name="[3bc]"></a>mem_to_ptr</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mem.o(i.mem_to_ptr))
<BR><BR>[Called By]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_trim
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_malloc
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plug_holes
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_link_valid
</UL>

<P><STRONG><a name="[3b9]"></a>plug_holes</STRONG> (Thumb, 214 bytes, Stack size 24 bytes, mem.o(i.plug_holes))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = plug_holes &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptr_to_mem
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_to_ptr
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free
</UL>

<P><STRONG><a name="[3ba]"></a>ptr_to_mem</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, mem.o(i.ptr_to_mem))
<BR><BR>[Called By]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_trim
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_malloc
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plug_holes
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_link_valid
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_init
</UL>

<P><STRONG><a name="[2ff]"></a>do_memp_free_pool</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, memp.o(i.do_memp_free_pool))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = do_memp_free_pool &rArr; sys_arch_unprotect &rArr; vPortExitCritical &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
</UL>

<P><STRONG><a name="[300]"></a>do_memp_malloc_pool</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, memp.o(i.do_memp_malloc_pool))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = do_memp_malloc_pool &rArr; sys_arch_unprotect &rArr; vPortExitCritical &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
</UL>

<P><STRONG><a name="[3d3]"></a>netif_do_ip_addr_changed</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, netif.o(i.netif_do_ip_addr_changed))
<BR><BR>[Stack]<UL><LI>Max Depth = 664<LI>Call Chain = netif_do_ip_addr_changed &rArr; tcp_netif_ip_addr_changed &rArr; tcp_netif_ip_addr_changed_pcblist &rArr; tcp_abort &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; tcp_output_control_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_netif_ip_addr_changed
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_netif_ip_addr_changed
</UL>
<BR>[Called By]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_do_set_ipaddr
</UL>

<P><STRONG><a name="[3d9]"></a>netif_do_set_gw</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, netif.o(i.netif_do_set_gw))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = netif_do_set_gw
</UL>
<BR>[Called By]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_addr
</UL>

<P><STRONG><a name="[3d6]"></a>netif_do_set_ipaddr</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, netif.o(i.netif_do_set_ipaddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 688<LI>Call Chain = netif_do_set_ipaddr &rArr; netif_do_ip_addr_changed &rArr; tcp_netif_ip_addr_changed &rArr; tcp_netif_ip_addr_changed_pcblist &rArr; tcp_abort &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; tcp_output_control_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_issue_reports
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_do_ip_addr_changed
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_addr
</UL>

<P><STRONG><a name="[3d8]"></a>netif_do_set_netmask</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, netif.o(i.netif_do_set_netmask))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = netif_do_set_netmask
</UL>
<BR>[Called By]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_addr
</UL>

<P><STRONG><a name="[3d7]"></a>netif_issue_reports</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, netif.o(i.netif_issue_reports))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = netif_issue_reports &rArr; etharp_request &rArr; etharp_request_dst &rArr; etharp_raw &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_request
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_up
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_do_set_ipaddr
</UL>

<P><STRONG><a name="[c8]"></a>netif_null_output_ip4</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, netif.o(i.netif_null_output_ip4))
<BR>[Address Reference Count : 1]<UL><LI> netif.o(i.netif_add)
</UL>
<P><STRONG><a name="[40b]"></a>pbuf_add_header_impl</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, pbuf.o(i.pbuf_add_header_impl))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = pbuf_add_header_impl &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_add_header
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_header_impl
</UL>

<P><STRONG><a name="[40f]"></a>pbuf_header_impl</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, pbuf.o(i.pbuf_header_impl))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = pbuf_header_impl &rArr; pbuf_add_header_impl &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_remove_header
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_add_header_impl
</UL>
<BR>[Called By]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_header_force
</UL>

<P><STRONG><a name="[40d]"></a>pbuf_init_alloced_pbuf</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, pbuf.o(i.pbuf_init_alloced_pbuf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pbuf_init_alloced_pbuf
</UL>
<BR>[Called By]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloced_custom
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc_reference
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
</UL>

<P><STRONG><a name="[447]"></a>tcp_close_shutdown</STRONG> (Thumb, 338 bytes, Stack size 24 bytes, tcp.o(i.tcp_close_shutdown))
<BR><BR>[Stack]<UL><LI>Max Depth = 568<LI>Call Chain = tcp_close_shutdown &rArr; tcp_close_shutdown_fin &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; tcp_output_control_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_listen_closed
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_free_listen
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close_shutdown_fin
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_trigger_input_pcb_close
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_remove
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_purge
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_free
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_shutdown
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close
</UL>

<P><STRONG><a name="[44c]"></a>tcp_close_shutdown_fin</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, tcp.o(i.tcp_close_shutdown_fin))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = tcp_close_shutdown_fin &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; tcp_output_control_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send_fin
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_handle_closepend
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close_shutdown
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_fasttmr
</UL>

<P><STRONG><a name="[44b]"></a>tcp_free_listen</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, tcp.o(i.tcp_free_listen))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = tcp_free_listen &rArr; memp_free &rArr; do_memp_free_pool &rArr; sys_arch_unprotect &rArr; vPortExitCritical &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close_shutdown
</UL>

<P><STRONG><a name="[441]"></a>tcp_handle_closepend</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, tcp.o(i.tcp_handle_closepend))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = tcp_handle_closepend &rArr; tcp_close_shutdown_fin &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; tcp_output_control_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close_shutdown_fin
</UL>
<BR>[Called By]<UL><LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_alloc
</UL>

<P><STRONG><a name="[444]"></a>tcp_kill_prio</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, tcp.o(i.tcp_kill_prio))
<BR><BR>[Stack]<UL><LI>Max Depth = 632<LI>Call Chain = tcp_kill_prio &rArr; tcp_abort &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; tcp_output_control_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abort
</UL>
<BR>[Called By]<UL><LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_alloc
</UL>

<P><STRONG><a name="[443]"></a>tcp_kill_state</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, tcp.o(i.tcp_kill_state))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = tcp_kill_state &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; tcp_output_control_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abandon
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_alloc
</UL>

<P><STRONG><a name="[442]"></a>tcp_kill_timewait</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, tcp.o(i.tcp_kill_timewait))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = tcp_kill_timewait &rArr; tcp_abort &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; tcp_output_control_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abort
</UL>
<BR>[Called By]<UL><LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_alloc
</UL>

<P><STRONG><a name="[44a]"></a>tcp_listen_closed</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, tcp.o(i.tcp_listen_closed))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = tcp_listen_closed &rArr; tcp_remove_listener &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_remove_listener
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close_shutdown
</UL>

<P><STRONG><a name="[462]"></a>tcp_netif_ip_addr_changed_pcblist</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, tcp.o(i.tcp_netif_ip_addr_changed_pcblist))
<BR><BR>[Stack]<UL><LI>Max Depth = 632<LI>Call Chain = tcp_netif_ip_addr_changed_pcblist &rArr; tcp_abort &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; tcp_output_control_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abort
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_netif_ip_addr_changed
</UL>

<P><STRONG><a name="[445]"></a>tcp_new_port</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, tcp.o(i.tcp_new_port))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tcp_new_port
</UL>
<BR>[Called By]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_connect
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_bind
</UL>

<P><STRONG><a name="[460]"></a>tcp_remove_listener</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, tcp.o(i.tcp_remove_listener))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = tcp_remove_listener &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_listen_closed
</UL>

<P><STRONG><a name="[456]"></a>tcp_free_acked_segments</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, tcp_in.o(i.tcp_free_acked_segments))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = tcp_free_acked_segments &rArr; tcp_seg_free &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_clen
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htonl
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_seg_free
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
</UL>

<P><STRONG><a name="[467]"></a>tcp_get_next_optbyte</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, tcp_in.o(i.tcp_get_next_optbyte))
<BR><BR>[Called By]<UL><LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_parseopt
</UL>

<P><STRONG><a name="[45b]"></a>tcp_input_delayed_close</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, tcp_in.o(i.tcp_input_delayed_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = tcp_input_delayed_close &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; tcp_output_control_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_remove
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_free
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
</UL>

<P><STRONG><a name="[458]"></a>tcp_listen_input</STRONG> (Thumb, 332 bytes, Stack size 40 bytes, tcp_in.o(i.tcp_listen_input))
<BR><BR>[Stack]<UL><LI>Max Depth = 688<LI>Call Chain = tcp_listen_input &rArr; tcp_alloc &rArr; tcp_kill_prio &rArr; tcp_abort &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; tcp_output_control_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_parseopt
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_timer_needed
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_enqueue_flags
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_route
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_next_iss
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_eff_send_mss_netif
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_alloc
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abandon
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
</UL>

<P><STRONG><a name="[461]"></a>tcp_parseopt</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, tcp_in.o(i.tcp_parseopt))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = tcp_parseopt &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_get_next_optbyte
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_listen_input
</UL>

<P><STRONG><a name="[45a]"></a>tcp_process</STRONG> (Thumb, 1674 bytes, Stack size 40 bytes, tcp_in.o(i.tcp_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = tcp_process &rArr; tcp_abort &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; tcp_output_control_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abort
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rexmit_rto
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rexmit
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_parseopt
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_timer_needed
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_route
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_seg_free
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_purge
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_eff_send_mss_netif
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
</UL>

<P><STRONG><a name="[46a]"></a>tcp_receive</STRONG> (Thumb, 1706 bytes, Stack size 40 bytes, tcp_in.o(i.tcp_receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = tcp_receive &rArr; tcp_send_empty_ack &rArr; tcp_output_control_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_remove_header
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_realloc
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htonl
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send_empty_ack
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rexmit_fast
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_free_acked_segments
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_update_rcv_ann_wnd
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process
</UL>

<P><STRONG><a name="[457]"></a>tcp_timewait_input</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, tcp_in.o(i.tcp_timewait_input))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = tcp_timewait_input &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; tcp_output_control_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
</UL>

<P><STRONG><a name="[452]"></a>tcp_create_segment</STRONG> (Thumb, 262 bytes, Stack size 40 bytes, tcp_out.o(i.tcp_create_segment))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = tcp_create_segment &rArr; tcp_seg_free &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_add_header
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htonl
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_seg_free
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_split_unsent_seg
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_enqueue_flags
</UL>

<P><STRONG><a name="[45d]"></a>tcp_output_alloc_header</STRONG> (Thumb, 76 bytes, Stack size 40 bytes, tcp_out.o(i.tcp_output_alloc_header))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = tcp_output_alloc_header &rArr; tcp_output_alloc_header_common &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_alloc_header_common
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send_empty_ack
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_zero_window_probe
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_keepalive
</UL>

<P><STRONG><a name="[465]"></a>tcp_output_alloc_header_common</STRONG> (Thumb, 144 bytes, Stack size 40 bytes, tcp_out.o(i.tcp_output_alloc_header_common))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = tcp_output_alloc_header_common &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htonl
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_alloc_header
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
</UL>

<P><STRONG><a name="[45f]"></a>tcp_output_control_segment</STRONG> (Thumb, 104 bytes, Stack size 48 bytes, tcp_out.o(i.tcp_output_control_segment))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = tcp_output_control_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_output_if
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_route
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send_empty_ack
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_zero_window_probe
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_keepalive
</UL>

<P><STRONG><a name="[45e]"></a>tcp_output_fill_options</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, tcp_out.o(i.tcp_output_fill_options))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = tcp_output_fill_options &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send_empty_ack
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_zero_window_probe
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_keepalive
</UL>

<P><STRONG><a name="[464]"></a>tcp_output_segment</STRONG> (Thumb, 334 bytes, Stack size 48 bytes, tcp_out.o(i.tcp_output_segment))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = tcp_output_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htonl
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_output_if
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_segment_busy
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_eff_send_mss_netif
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
</UL>

<P><STRONG><a name="[466]"></a>tcp_output_segment_busy</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, tcp_out.o(i.tcp_output_segment_busy))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = tcp_output_segment_busy &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_segment
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rexmit
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rexmit_rto_prepare
</UL>

<P><STRONG><a name="[468]"></a>tcp_pbuf_prealloc</STRONG> (Thumb, 172 bytes, Stack size 40 bytes, tcp_out.o(i.tcp_pbuf_prealloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = tcp_pbuf_prealloc &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write
</UL>

<P><STRONG><a name="[463]"></a>tcp_route</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, tcp_out.o(i.tcp_route))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tcp_route &rArr; ip4_route
</UL>
<BR>[Calls]<UL><LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_get_by_index
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_route
</UL>
<BR>[Called By]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_control_segment
</UL>

<P><STRONG><a name="[474]"></a>tcp_write_checks</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, tcp_out.o(i.tcp_write_checks))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = tcp_write_checks &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write
</UL>

<P><STRONG><a name="[b7]"></a>lwip_cyclic_timer</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, timeouts.o(i.lwip_cyclic_timer))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = lwip_cyclic_timer &rArr; sys_timeout_abs &rArr; memp_malloc &rArr; do_memp_malloc_pool &rArr; sys_arch_unprotect &rArr; vPortExitCritical &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_now
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timeout_abs
</UL>
<BR>[Address Reference Count : 2]<UL><LI> timeouts.o(i.sys_timeouts_init)
<LI> timeouts.o(i.lwip_cyclic_timer)
</UL>
<P><STRONG><a name="[376]"></a>sys_timeout_abs</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, timeouts.o(i.sys_timeout_abs))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = sys_timeout_abs &rArr; memp_malloc &rArr; do_memp_malloc_pool &rArr; sys_arch_unprotect &rArr; vPortExitCritical &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timeout
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_cyclic_timer
</UL>

<P><STRONG><a name="[e9]"></a>tcpip_tcp_timer</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, timeouts.o(i.tcpip_tcp_timer))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = tcpip_tcp_timer &rArr; tcp_tmr &rArr; tcp_fasttmr &rArr; tcp_process_refused_data &rArr; tcp_recv_null &rArr; tcp_close &rArr; tcp_close_shutdown &rArr; tcp_close_shutdown_fin &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; tcp_output_control_segment &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timeout
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tmr
</UL>
<BR>[Address Reference Count : 2]<UL><LI> timeouts.o(i.tcp_timer_needed)
<LI> timeouts.o(i.tcpip_tcp_timer)
</UL>
<P><STRONG><a name="[47b]"></a>udp_input_local_match</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, udp.o(i.udp_input_local_match))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = udp_input_local_match &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_input
</UL>

<P><STRONG><a name="[47a]"></a>udp_new_port</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, udp.o(i.udp_new_port))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = udp_new_port
</UL>
<BR>[Called By]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_bind
</UL>

<P><STRONG><a name="[31e]"></a>etharp_find_entry</STRONG> (Thumb, 474 bytes, Stack size 56 bytes, etharp.o(i.etharp_find_entry))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = etharp_find_entry &rArr; etharp_free_entry &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_free_entry
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_update_arp_entry
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_query
</UL>

<P><STRONG><a name="[31d]"></a>etharp_free_entry</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, etharp.o(i.etharp_free_entry))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = etharp_free_entry &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
</UL>
<BR>[Called By]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_cleanup_netif
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_find_entry
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_tmr
</UL>

<P><STRONG><a name="[324]"></a>etharp_output_to_arp_index</STRONG> (Thumb, 204 bytes, Stack size 24 bytes, etharp.o(i.etharp_output_to_arp_index))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = etharp_output_to_arp_index &rArr; etharp_request &rArr; etharp_request_dst &rArr; etharp_raw &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_request
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_request_dst
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernet_output
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_output
</UL>

<P><STRONG><a name="[322]"></a>etharp_raw</STRONG> (Thumb, 200 bytes, Stack size 48 bytes, etharp.o(i.etharp_raw))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = etharp_raw &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernet_output
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_request_dst
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_input
</UL>

<P><STRONG><a name="[328]"></a>etharp_request_dst</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, etharp.o(i.etharp_request_dst))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = etharp_request_dst &rArr; etharp_raw &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_raw
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_request
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_output_to_arp_index
</UL>

<P><STRONG><a name="[321]"></a>etharp_update_arp_entry</STRONG> (Thumb, 204 bytes, Stack size 32 bytes, etharp.o(i.etharp_update_arp_entry))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = etharp_update_arp_entry &rArr; etharp_find_entry &rArr; etharp_free_entry &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_find_entry
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_addr_isbroadcast_u32
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernet_output
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_input
</UL>

<P><STRONG><a name="[340]"></a>icmp_send_response</STRONG> (Thumb, 134 bytes, Stack size 48 bytes, icmp.o(i.icmp_send_response))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = icmp_send_response &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_output_if
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_route
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_dest_unreach
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_time_exceeded
</UL>

<P><STRONG><a name="[354]"></a>ip4_input_accept</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, ip4.o(i.ip4_input_accept))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ip4_input_accept &rArr; ip4_addr_isbroadcast_u32
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_addr_isbroadcast_u32
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_input
</UL>

<P><STRONG><a name="[34f]"></a>ip_frag_alloc_pbuf_custom_ref</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ip4_frag.o(i.ip_frag_alloc_pbuf_custom_ref))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = ip_frag_alloc_pbuf_custom_ref &rArr; memp_malloc &rArr; do_memp_malloc_pool &rArr; sys_arch_unprotect &rArr; vPortExitCritical &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_frag
</UL>

<P><STRONG><a name="[351]"></a>ip_frag_free_pbuf_custom_ref</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, ip4_frag.o(i.ip_frag_free_pbuf_custom_ref))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ip_frag_free_pbuf_custom_ref &rArr; memp_free &rArr; do_memp_free_pool &rArr; sys_arch_unprotect &rArr; vPortExitCritical &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipfrag_free_pbuf_custom
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_frag
</UL>

<P><STRONG><a name="[35d]"></a>ip_reass_chain_frag_into_datagram_and_validate</STRONG> (Thumb, 486 bytes, Stack size 64 bytes, ip4_frag.o(i.ip_reass_chain_frag_into_datagram_and_validate))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ip_reass_chain_frag_into_datagram_and_validate &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_reass
</UL>

<P><STRONG><a name="[35e]"></a>ip_reass_dequeue_datagram</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, ip4_frag.o(i.ip_reass_dequeue_datagram))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ip_reass_dequeue_datagram &rArr; memp_free &rArr; do_memp_free_pool &rArr; sys_arch_unprotect &rArr; vPortExitCritical &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_free_complete_datagram
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_reass
</UL>

<P><STRONG><a name="[35c]"></a>ip_reass_enqueue_new_datagram</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, ip4_frag.o(i.ip_reass_enqueue_new_datagram))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = ip_reass_enqueue_new_datagram &rArr; ip_reass_remove_oldest_datagram &rArr; ip_reass_free_complete_datagram &rArr; icmp_time_exceeded &rArr; icmp_send_response &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_remove_oldest_datagram
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_reass
</UL>

<P><STRONG><a name="[363]"></a>ip_reass_free_complete_datagram</STRONG> (Thumb, 242 bytes, Stack size 32 bytes, ip4_frag.o(i.ip_reass_free_complete_datagram))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = ip_reass_free_complete_datagram &rArr; icmp_time_exceeded &rArr; icmp_send_response &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_clen
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_dequeue_datagram
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_time_exceeded
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_tmr
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_remove_oldest_datagram
</UL>

<P><STRONG><a name="[35b]"></a>ip_reass_remove_oldest_datagram</STRONG> (Thumb, 130 bytes, Stack size 40 bytes, ip4_frag.o(i.ip_reass_remove_oldest_datagram))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = ip_reass_remove_oldest_datagram &rArr; ip_reass_free_complete_datagram &rArr; icmp_time_exceeded &rArr; icmp_send_response &rArr; ip4_output_if &rArr; ip4_output_if_src &rArr; ip4_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_free_complete_datagram
</UL>
<BR>[Called By]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_enqueue_new_datagram
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_reass
</UL>

<P><STRONG><a name="[b5]"></a>ipfrag_free_pbuf_custom</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, ip4_frag.o(i.ipfrag_free_pbuf_custom))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = ipfrag_free_pbuf_custom &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag_free_pbuf_custom_ref
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ip4_frag.o(i.ip4_frag)
</UL>
<P><STRONG><a name="[32f]"></a>low_level_init</STRONG> (Thumb, 310 bytes, Stack size 16 bytes, ethernetif.o(i.low_level_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = low_level_init &rArr; Bsp_Eth_Init &rArr; HAL_ETH_Init &rArr; ETH_MACDMAConfig &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ETH_Start
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_thread_new
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bsp_Eth_Init
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphore
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_new
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_new
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernetif_init
</UL>

<P><STRONG><a name="[331]"></a>low_level_input</STRONG> (Thumb, 272 bytes, Stack size 40 bytes, ethernetif.o(i.low_level_input))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = low_level_input &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ETH_GetReceivedFrame
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernetif_input
</UL>

<P><STRONG><a name="[b3]"></a>low_level_output</STRONG> (Thumb, 248 bytes, Stack size 48 bytes, ethernetif.o(i.low_level_output))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = low_level_output &rArr; sys_sem_new &rArr; xQueueCreateCountingSemaphore &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ETH_TransmitFrame
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_new
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_sem_wait
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ethernetif.o(i.ethernetif_init)
</UL>
<P><STRONG><a name="[2fb]"></a>dump_stack</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, cm_backtrace.o(i.dump_stack))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = dump_stack &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cm_backtrace_fault
</UL>

<P><STRONG><a name="[2fc]"></a>fault_diagnosis</STRONG> (Thumb, 762 bytes, Stack size 8 bytes, cm_backtrace.o(i.fault_diagnosis))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = fault_diagnosis &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cm_backtrace_fault
</UL>

<P><STRONG><a name="[2fd]"></a>print_call_stack</STRONG> (Thumb, 118 bytes, Stack size 88 bytes, cm_backtrace.o(i.print_call_stack))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = print_call_stack &rArr; cm_backtrace_call_stack
</UL>
<BR>[Calls]<UL><LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cm_backtrace_call_stack
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cm_backtrace_fault
</UL>

<P><STRONG><a name="[2fa]"></a>statck_del_fpu_regs</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, cm_backtrace.o(i.statck_del_fpu_regs))
<BR><BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cm_backtrace_fault
</UL>

<P><STRONG><a name="[33c]"></a>fsm_findmethod</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, fsm_misc.o(i.fsm_findmethod))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fsm_findmethod
</UL>
<BR>[Called By]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_callmethod
</UL>

<P><STRONG><a name="[349]"></a>ict_handle_transport_error</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, ict_fsm.o(i.ict_handle_transport_error))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ict_handle_transport_error &rArr; __osip_kill_transaction_callback &rArr; osip_getsystemtime &rArr; osip_gettimeofday
</UL>
<BR>[Calls]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transport_error_callback
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_set_state
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_kill_transaction_callback
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_ict_timeout_b_event
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_ict_timeout_a_event
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ict_snd_invite
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ict_retransmit_ack
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ict_rcv_3456xx
</UL>

<P><STRONG><a name="[364]"></a>ist_handle_transport_error</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, ist_fsm.o(i.ist_handle_transport_error))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ist_handle_transport_error &rArr; __osip_kill_transaction_callback &rArr; osip_getsystemtime &rArr; osip_gettimeofday
</UL>
<BR>[Calls]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transport_error_callback
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_set_state
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_kill_transaction_callback
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_ist_timeout_g_event
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ist_snd_3456xx
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ist_snd_2xx
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ist_snd_1xx
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ist_rcv_invite
</UL>

<P><STRONG><a name="[3da]"></a>nict_handle_transport_error</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, nict_fsm.o(i.nict_handle_transport_error))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = nict_handle_transport_error &rArr; __osip_kill_transaction_callback &rArr; osip_getsystemtime &rArr; osip_gettimeofday
</UL>
<BR>[Calls]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transport_error_callback
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_set_state
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_kill_transaction_callback
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_nict_timeout_f_event
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_nict_timeout_e_event
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nict_snd_request
</UL>

<P><STRONG><a name="[3db]"></a>nist_handle_transport_error</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, nist_fsm.o(i.nist_handle_transport_error))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = nist_handle_transport_error &rArr; __osip_kill_transaction_callback &rArr; osip_getsystemtime &rArr; osip_gettimeofday
</UL>
<BR>[Calls]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transport_error_callback
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_transaction_set_state
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_kill_transaction_callback
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nist_snd_23456xx
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nist_snd_1xx
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nist_rcv_request
</UL>

<P><STRONG><a name="[19a]"></a>__osip_dialog_init</STRONG> (Thumb, 534 bytes, Stack size 48 bytes, osip_dialog.o(i.__osip_dialog_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = __osip_dialog_init &rArr; osip_from_clone &rArr; osip_uri_clone &rArr; osip_list_clone &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strdup
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_init
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_eol
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_add
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_clone
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_get_byname
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_id_to_str
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_dialog_free
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_dialog_init_as_uas
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_dialog_init_as_uac_with_remote_request
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_dialog_init_as_uac
</UL>

<P><STRONG><a name="[1e1]"></a>__osip_transaction_set_call_id</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, osip_transaction.o(i.__osip_transaction_set_call_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = __osip_transaction_set_call_id &rArr; osip_call_id_clone &rArr; osip_strdup &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_id_clone
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_init
</UL>

<P><STRONG><a name="[1e3]"></a>__osip_transaction_set_cseq</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, osip_transaction.o(i.__osip_transaction_set_cseq))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = __osip_transaction_set_cseq &rArr; osip_cseq_clone &rArr; osip_strdup &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_cseq_clone
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_init
</UL>

<P><STRONG><a name="[1e5]"></a>__osip_transaction_set_from</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, osip_transaction.o(i.__osip_transaction_set_from))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = __osip_transaction_set_from &rArr; osip_from_clone &rArr; osip_uri_clone &rArr; osip_list_clone &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_clone
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_init
</UL>

<P><STRONG><a name="[1e6]"></a>__osip_transaction_set_to</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, osip_transaction.o(i.__osip_transaction_set_to))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = __osip_transaction_set_to &rArr; osip_from_clone &rArr; osip_uri_clone &rArr; osip_list_clone &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_clone
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_init
</UL>

<P><STRONG><a name="[1e7]"></a>__osip_transaction_set_topvia</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, osip_transaction.o(i.__osip_transaction_set_topvia))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = __osip_transaction_set_topvia &rArr; osip_via_clone &rArr; osip_list_clone &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_via_clone
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_init
</UL>

<P><STRONG><a name="[3e6]"></a>osip_body_parse_header</STRONG> (Thumb, 288 bytes, Stack size 40 bytes, osip_body.o(i.osip_body_parse_header))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = osip_body_parse_header &rArr; osip_body_set_contenttype &rArr; osip_content_type_parse &rArr; __osip_generic_param_parseall &rArr; osip_uri_param_add &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_clrncpy
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_find_next_crlf
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_set_header
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_set_contenttype
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncasecmp
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
</UL>
<BR>[Called By]<UL><LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_parse_mime
</UL>

<P><STRONG><a name="[3df]"></a>osip_Decode</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, osip_md5c.o(i.osip_Decode))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = osip_Decode
</UL>
<BR>[Called By]<UL><LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_MD5Transform
</UL>

<P><STRONG><a name="[3dc]"></a>osip_Encode</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, osip_md5c.o(i.osip_Encode))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = osip_Encode
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_MD5Final
</UL>

<P><STRONG><a name="[3de]"></a>osip_MD5Transform</STRONG> (Thumb, 1908 bytes, Stack size 96 bytes, osip_md5c.o(i.osip_MD5Transform))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = osip_MD5Transform &rArr; osip_Decode
</UL>
<BR>[Calls]<UL><LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_MD5_memset
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_Decode
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_MD5Update
</UL>

<P><STRONG><a name="[3e0]"></a>osip_MD5_memcpy</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, osip_md5c.o(i.osip_MD5_memcpy))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = osip_MD5_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_MD5Update
</UL>

<P><STRONG><a name="[3dd]"></a>osip_MD5_memset</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, osip_md5c.o(i.osip_MD5_memset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = osip_MD5_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_MD5Final
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_MD5Transform
</UL>

<P><STRONG><a name="[1bb]"></a>__osip_message_startline_parse</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, osip_message_parse.o(i.__osip_message_startline_parse))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = __osip_message_startline_parse &rArr; __osip_message_startline_parsereq &rArr; osip_uri_parse &rArr; osip_uri_parse_headers &rArr; __osip_uri_unescape &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_startline_parseresp
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_startline_parsereq
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_osip_message_parse
</UL>

<P><STRONG><a name="[1be]"></a>__osip_message_startline_parsereq</STRONG> (Thumb, 688 bytes, Stack size 40 bytes, osip_message_parse.o(i.__osip_message_startline_parsereq))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = __osip_message_startline_parsereq &rArr; osip_uri_parse &rArr; osip_uri_parse_headers &rArr; __osip_uri_unescape &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_parse
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_init
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_free
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_clrncpy
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strncpy
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
</UL>
<BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_startline_parse
</UL>

<P><STRONG><a name="[1bd]"></a>__osip_message_startline_parseresp</STRONG> (Thumb, 268 bytes, Stack size 32 bytes, osip_message_parse.o(i.__osip_message_startline_parseresp))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = __osip_message_startline_parseresp &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strncpy
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
</UL>
<BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_startline_parse
</UL>

<P><STRONG><a name="[2b6]"></a>_osip_message_parse</STRONG> (Thumb, 312 bytes, Stack size 40 bytes, osip_message_parse.o(i._osip_message_parse))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = _osip_message_parse &rArr; msg_osip_body_parse &rArr; osip_message_set_body_mime &rArr; osip_body_parse_mime &rArr; osip_body_parse_header &rArr; osip_body_set_contenttype &rArr; osip_content_type_parse &rArr; __osip_generic_param_parseall &rArr; osip_uri_param_add &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_util_replace_all_lws
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msg_osip_body_parse
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msg_headers_parse
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_startline_parse
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_content_length
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_length_free
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strspn
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_parse
</UL>

<P><STRONG><a name="[2b8]"></a>msg_headers_parse</STRONG> (Thumb, 294 bytes, Stack size 40 bytes, osip_message_parse.o(i.msg_headers_parse))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = msg_headers_parse &rArr; osip_message_set_multiple_header &rArr; osip_message_set__header &rArr; osip_message_set_header &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_multiple_header
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_clrncpy
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_find_next_crlf
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
</UL>
<BR>[Called By]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_osip_message_parse
</UL>

<P><STRONG><a name="[2ba]"></a>msg_osip_body_parse</STRONG> (Thumb, 696 bytes, Stack size 88 bytes, osip_message_parse.o(i.msg_osip_body_parse))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = msg_osip_body_parse &rArr; osip_message_set_body_mime &rArr; osip_body_parse_mime &rArr; osip_body_parse_header &rArr; osip_body_set_contenttype &rArr; osip_content_type_parse &rArr; __osip_generic_param_parseall &rArr; osip_uri_param_add &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_find_next_occurence
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_content_length
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_get_byname
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_body_mime
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_body
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncat
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_osip_message_parse
</UL>

<P><STRONG><a name="[3fd]"></a>osip_message_set__header</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, osip_message_parse.o(i.osip_message_set__header))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = osip_message_set__header &rArr; osip_message_set_header &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_is_known_header
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_call_method
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_header
</UL>
<BR>[Called By]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_multiple_header
</UL>

<P><STRONG><a name="[2b7]"></a>osip_util_replace_all_lws</STRONG> (Thumb, 184 bytes, Stack size 0 bytes, osip_message_parse.o(i.osip_util_replace_all_lws))
<BR><BR>[Called By]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_osip_message_parse
</UL>

<P><STRONG><a name="[1c3]"></a>__osip_message_startline_to_str</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, osip_message_to_str.o(i.__osip_message_startline_to_str))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = __osip_message_startline_to_str &rArr; __osip_message_startline_to_strreq &rArr; osip_uri_to_str &rArr; __osip_uri_escape_userinfo &rArr; __osip_uri_escape_nonascii_and_nondef &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_startline_to_strresp
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_startline_to_strreq
</UL>
<BR>[Called By]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_osip_message_to_str
</UL>

<P><STRONG><a name="[1c4]"></a>__osip_message_startline_to_strreq</STRONG> (Thumb, 174 bytes, Stack size 40 bytes, osip_message_to_str.o(i.__osip_message_startline_to_strreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = __osip_message_startline_to_strreq &rArr; osip_uri_to_str &rArr; __osip_uri_escape_userinfo &rArr; __osip_uri_escape_nonascii_and_nondef &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_to_str
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_str_append
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_startline_to_str
</UL>

<P><STRONG><a name="[1c5]"></a>__osip_message_startline_to_strresp</STRONG> (Thumb, 150 bytes, Stack size 40 bytes, osip_message_to_str.o(i.__osip_message_startline_to_strresp))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = __osip_message_startline_to_strresp &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strn_append
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_str_append
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_startline_to_str
</UL>

<P><STRONG><a name="[2bb]"></a>_osip_message_realloc</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, osip_message_to_str.o(i._osip_message_realloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _osip_message_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realloc
</UL>
<BR>[Called By]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_osip_message_to_str
</UL>

<P><STRONG><a name="[2bc]"></a>_osip_message_to_str</STRONG> (Thumb, 1746 bytes, Stack size 864 bytes, osip_message_to_str.o(i._osip_message_to_str))
<BR><BR>[Stack]<UL><LI>Max Depth = 1152<LI>Call Chain = _osip_message_to_str &rArr; __osip_message_startline_to_str &rArr; __osip_message_startline_to_strreq &rArr; osip_uri_to_str &rArr; __osip_uri_escape_userinfo &rArr; __osip_uri_escape_nonascii_and_nondef &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strdup
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_next
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_first
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_eol
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_get_byname
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_header_to_str
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_body_to_str
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strncpy
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strn_append
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_str_append
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_get__property
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat_simple_header
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat_headers_one_per_line
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_osip_message_realloc
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__osip_message_startline_to_str
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realloc
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_to_str
</UL>

<P><STRONG><a name="[2bf]"></a>strcat_headers_one_per_line</STRONG> (Thumb, 294 bytes, Stack size 64 bytes, osip_message_to_str.o(i.strcat_headers_one_per_line))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = strcat_headers_one_per_line &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_next
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_first
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strncpy
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strn_append
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_str_append
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realloc
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_osip_message_to_str
</UL>

<P><STRONG><a name="[2be]"></a>strcat_simple_header</STRONG> (Thumb, 264 bytes, Stack size 48 bytes, osip_message_to_str.o(i.strcat_simple_header))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = strcat_simple_header &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strn_append
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_str_append
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realloc
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_osip_message_to_str
</UL>

<P><STRONG><a name="[281]"></a>_eXosip_header_strcasestr</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, excall_api.o(i._eXosip_header_strcasestr))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _eXosip_header_strcasestr &rArr; osip_message_header_get_byname &rArr; strcasecmp
</UL>
<BR>[Calls]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_header_get_byname
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strcasestr
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_send_answer
</UL>

<P><STRONG><a name="[307]"></a>eXosip_create_cancel_transaction</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, excall_api.o(i.eXosip_create_cancel_transaction))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = eXosip_create_cancel_transaction &rArr; _eXosip_transaction_init &rArr; osip_transaction_init &rArr; __osip_transaction_set_to &rArr; osip_from_clone &rArr; osip_uri_clone &rArr; osip_list_clone &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_add_event
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_free
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_set_reserved3
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_set_reserved2
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_new_outgoing_sipmessage
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_wakeup
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_transaction_init
</UL>
<BR>[Called By]<UL><LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_terminate_with_header
</UL>

<P><STRONG><a name="[308]"></a>eXosip_create_transaction</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, excall_api.o(i.eXosip_create_transaction))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = eXosip_create_transaction &rArr; _eXosip_transaction_init &rArr; osip_transaction_init &rArr; __osip_transaction_set_to &rArr; osip_from_clone &rArr; osip_uri_clone &rArr; osip_list_clone &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_add_event
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_free
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_add
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_set_reserved3
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_set_reserved2
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_new_outgoing_sipmessage
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_wakeup
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_transaction_init
</UL>
<BR>[Called By]<UL><LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_call_terminate_with_header
</UL>

<P><STRONG><a name="[282]"></a>_eXosip_kill_transaction</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, exconf.o(i._eXosip_kill_transaction))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = _eXosip_kill_transaction &rArr; _eXosip_transaction_free &rArr; osip_transaction_free &rArr; osip_transaction_free2 &rArr; osip_message_free &rArr; osip_from_free &rArr; osip_uri_free &rArr; osip_uri_param_freelist &rArr; osip_list_remove &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_eol
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_transaction_free
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_quit
</UL>

<P><STRONG><a name="[1f6]"></a>authorization_already_exist_for_realm</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, exosip.o(i.authorization_already_exist_for_realm))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = authorization_already_exist_for_realm &rArr; osip_message_get_knownheaderlist &rArr; osip_list_get
</UL>
<BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_get_knownheaderlist
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
</UL>
<BR>[Called By]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_add_authentication_information
</UL>

<P><STRONG><a name="[1f3]"></a>eXosip_find_authentication_info</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, exosip.o(i.eXosip_find_authentication_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = eXosip_find_authentication_info &rArr; strncasecmp
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncasecmp
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_add_authentication_information
</UL>

<P><STRONG><a name="[1f8]"></a>proxyauthorization_already_exist_for_realm</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, exosip.o(i.proxyauthorization_already_exist_for_realm))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = proxyauthorization_already_exist_for_realm &rArr; osip_message_get_knownheaderlist &rArr; osip_list_get
</UL>
<BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_get_knownheaderlist
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
</UL>
<BR>[Called By]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_add_authentication_information
</UL>

<P><STRONG><a name="[264]"></a>_eXosip_generating_register</STRONG> (Thumb, 118 bytes, Stack size 48 bytes, exregister_api.o(i._eXosip_generating_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 592<LI>Call Chain = _eXosip_generating_register &rArr; _eXosip_generating_request_out_of_dialog &rArr; _eXosip_request_add_via &rArr; osip_message_set_via &rArr; osip_via_parse &rArr; __osip_generic_param_parseall &rArr; osip_uri_param_add &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_header
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_content_length
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_contact
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_request_out_of_dialog
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_register_add_contact
</UL>
<BR>[Called By]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_register_build_register
</UL>

<P><STRONG><a name="[266]"></a>_eXosip_register_add_contact</STRONG> (Thumb, 478 bytes, Stack size 40 bytes, exregister_api.o(i._eXosip_register_add_contact))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _eXosip_register_add_contact &rArr; osip_uri_param_add &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strdup
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_add
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_init
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_init
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_add
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_get_knownheaderlist
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_free
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_register
</UL>

<P><STRONG><a name="[29e]"></a>_eXosip_register_build_register</STRONG> (Thumb, 824 bytes, Stack size 64 bytes, exregister_api.o(i._eXosip_register_build_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 2996<LI>Call Chain = _eXosip_register_build_register &rArr; _eXosip_add_authentication_information &rArr; _eXosip_create_proxy_authorization_header &rArr; DigestCalcResponseAka &rArr; f1 &rArr; ComputeOPc &rArr; RijndaelEncrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strdup
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_header_get_byname
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_add
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_clone
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_iterator_remove
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_next
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_first
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_free
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_add
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_get_byname
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_get_knownheaderlist
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_special_free
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_free
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_force_update
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_update_top_via
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_add_authentication_information
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_register
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_delete_reserved
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_register_send_register
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_register_build_initial_register_withqvalue
</UL>

<P><STRONG><a name="[314]"></a>eXosip_reg_find</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, exregister_api.o(i.eXosip_reg_find))
<BR><BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_register_send_register
</UL>

<P><STRONG><a name="[2c5]"></a>_tcp_read_tcp_main_socket</STRONG> (Thumb, 516 bytes, Stack size 1112 bytes, extl_tcp.o(i._tcp_read_tcp_main_socket))
<BR><BR>[Stack]<UL><LI>Max Depth = 1464<LI>Call Chain = _tcp_read_tcp_main_socket &rArr; lwip_accept &rArr; free_socket &rArr; free_socket_free_elements &rArr; netconn_delete &rArr; netconn_prepare_delete &rArr; netconn_apimsg &rArr; tcpip_send_msg_wait_sem &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_setsockopt
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_accept
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strncpy
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_transport_set_dscp
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_getport
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_getnameinfo
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_closesocket
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_open
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_close_sockinfo
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_mark_registration_expired
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_read_message
</UL>

<P><STRONG><a name="[2c8]"></a>_tcp_tl_build_message</STRONG> (Thumb, 418 bytes, Stack size 56 bytes, extl_tcp.o(i._tcp_tl_build_message))
<BR><BR>[Stack]<UL><LI>Max Depth = 1224<LI>Call Chain = _tcp_tl_build_message &rArr; osip_message_to_str &rArr; _osip_message_to_str &rArr; __osip_message_startline_to_str &rArr; __osip_message_startline_to_strreq &rArr; osip_uri_to_str &rArr; __osip_uri_escape_userinfo &rArr; __osip_uri_escape_nonascii_and_nondef &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_remove
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_add
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_get_byname
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_get_knownheaderlist
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_to_str
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_force_update
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_request_viamanager
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_message_contactmanager
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_update_contact
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_send_message
</UL>

<P><STRONG><a name="[2c6]"></a>_tcp_tl_close_sockinfo</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, extl_tcp.o(i._tcp_tl_close_sockinfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = _tcp_tl_close_sockinfo &rArr; _eXosip_closesocket &rArr; lwip_close &rArr; free_socket &rArr; free_socket_free_elements &rArr; netconn_delete &rArr; netconn_prepare_delete &rArr; netconn_apimsg &rArr; tcpip_send_msg_wait_sem &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_closesocket
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_mark_all_transaction_transport_error
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_set_fdset
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_send_message
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_read_message
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_keepalive
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_free
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_check_connection
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_check_all_connection
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_recv
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_read_tcp_main_socket
</UL>

<P><STRONG><a name="[2cb]"></a>_tcp_tl_find_socket</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, extl_tcp.o(i._tcp_tl_find_socket))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _tcp_tl_find_socket &rArr; strcasecmp
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_send_message
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_new_socket
</UL>

<P><STRONG><a name="[2d5]"></a>_tcp_tl_find_sockinfo</STRONG> (Thumb, 62 bytes, Stack size 12 bytes, extl_tcp.o(i._tcp_tl_find_sockinfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _tcp_tl_find_sockinfo
</UL>
<BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_send
</UL>

<P><STRONG><a name="[2cc]"></a>_tcp_tl_new_socket</STRONG> (Thumb, 1616 bytes, Stack size 1136 bytes, extl_tcp.o(i._tcp_tl_new_socket))
<BR><BR>[Stack]<UL><LI>Max Depth = 1448<LI>Call Chain = _tcp_tl_new_socket &rArr; _tcptls_tl_is_connected &rArr; lwip_select &rArr; sys_sem_new &rArr; xQueueCreateCountingSemaphore &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_socket
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_bind
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_setsockopt
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getsockname
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_fcntl
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_connect
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_getsystemtime
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strncpy
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_get_addrinfo
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_freeaddrinfo
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setsockopt_ipv6only
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_transport_set_dscp
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_getnameinfo
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_closesocket
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcptls_tl_is_connected
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_find_socket
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_send_message
</UL>

<P><STRONG><a name="[2d0]"></a>_tcp_tl_recv</STRONG> (Thumb, 302 bytes, Stack size 24 bytes, extl_tcp.o(i._tcp_tl_recv))
<BR><BR>[Stack]<UL><LI>Max Depth = 2344<LI>Call Chain = _tcp_tl_recv &rArr; handle_messages &rArr; _eXosip_handle_incoming_message &rArr; _eXosip_process_newrequest &rArr; _eXosip_process_new_invite &rArr; _eXosip_complete_answer_that_establish_a_dialog &rArr; osip_message_set_contact &rArr; osip_contact_parse &rArr; osip_from_parse &rArr; osip_uri_parse &rArr; osip_uri_parse_headers &rArr; __osip_uri_unescape &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recv
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realloc
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_messages
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_close_sockinfo
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_mark_registration_expired
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_read_message
</UL>

<P><STRONG><a name="[2d4]"></a>_tcp_tl_send</STRONG> (Thumb, 54 bytes, Stack size 32 bytes, extl_tcp.o(i._tcp_tl_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = _tcp_tl_send &rArr; _tcp_tl_send_sockinfo &rArr; lwip_send &rArr;  lwip_sendto (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_send_sockinfo
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_find_sockinfo
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_send_message
</UL>

<P><STRONG><a name="[2d6]"></a>_tcp_tl_send_sockinfo</STRONG> (Thumb, 236 bytes, Stack size 48 bytes, extl_tcp.o(i._tcp_tl_send_sockinfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = _tcp_tl_send_sockinfo &rArr; lwip_send &rArr;  lwip_sendto (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_send
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_select
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_read_message
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_send
</UL>

<P><STRONG><a name="[2c9]"></a>_tcp_tl_update_contact</STRONG> (Thumb, 174 bytes, Stack size 40 bytes, extl_tcp.o(i._tcp_tl_update_contact))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _tcp_tl_update_contact &rArr; osip_strdup &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strdup
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_next
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_first
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_force_update
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_build_message
</UL>

<P><STRONG><a name="[2ed]"></a>buffer_find</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, extl_tcp.o(i.buffer_find))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = buffer_find &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memchr
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_messages
</UL>

<P><STRONG><a name="[2d2]"></a>handle_messages</STRONG> (Thumb, 276 bytes, Stack size 64 bytes, extl_tcp.o(i.handle_messages))
<BR><BR>[Stack]<UL><LI>Max Depth = 2320<LI>Call Chain = handle_messages &rArr; _eXosip_handle_incoming_message &rArr; _eXosip_process_newrequest &rArr; _eXosip_process_new_invite &rArr; _eXosip_complete_answer_that_establish_a_dialog &rArr; osip_message_set_contact &rArr; osip_contact_parse &rArr; osip_from_parse &rArr; osip_uri_parse &rArr; osip_uri_parse_headers &rArr; __osip_uri_unescape &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strcasestr
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_handle_incoming_message
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buffer_find
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
</UL>
<BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_recv
</UL>

<P><STRONG><a name="[473]"></a>tcp_tl_check_all_connection</STRONG> (Thumb, 536 bytes, Stack size 24 bytes, extl_tcp.o(i.tcp_tl_check_all_connection))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = tcp_tl_check_all_connection &rArr; _tcp_tl_close_sockinfo &rArr; _eXosip_closesocket &rArr; lwip_close &rArr; free_socket &rArr; free_socket_free_elements &rArr; netconn_delete &rArr; netconn_prepare_delete &rArr; netconn_apimsg &rArr; tcpip_send_msg_wait_sem &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_getsystemtime
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_close_sockinfo
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_mark_registration_expired
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_check_connection
</UL>

<P><STRONG><a name="[26]"></a>tcp_tl_check_connection</STRONG> (Thumb, 486 bytes, Stack size 32 bytes, extl_tcp.o(i.tcp_tl_check_connection))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = tcp_tl_check_connection &rArr; tcp_tl_check_all_connection &rArr; _tcp_tl_close_sockinfo &rArr; _eXosip_closesocket &rArr; lwip_close &rArr; free_socket &rArr; free_socket_free_elements &rArr; netconn_delete &rArr; netconn_prepare_delete &rArr; netconn_apimsg &rArr; tcpip_send_msg_wait_sem &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_getsystemtime
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcptls_tl_is_connected
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tl_check_all_connection
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_close_sockinfo
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_mark_registration_expired
</UL>
<BR>[Address Reference Count : 1]<UL><LI> extl_tcp.o(.data)
</UL>
<P><STRONG><a name="[1b]"></a>tcp_tl_free</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, extl_tcp.o(i.tcp_tl_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = tcp_tl_free &rArr; _tcp_tl_close_sockinfo &rArr; _eXosip_closesocket &rArr; lwip_close &rArr; free_socket &rArr; free_socket_free_elements &rArr; netconn_delete &rArr; netconn_prepare_delete &rArr; netconn_apimsg &rArr; tcpip_send_msg_wait_sem &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_closesocket
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_close_sockinfo
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> extl_tcp.o(.data)
</UL>
<P><STRONG><a name="[23]"></a>tcp_tl_get_masquerade_contact</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, extl_tcp.o(i.tcp_tl_get_masquerade_contact))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = tcp_tl_get_masquerade_contact &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> extl_tcp.o(.data)
</UL>
<P><STRONG><a name="[1a]"></a>tcp_tl_init</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, extl_tcp.o(i.tcp_tl_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = tcp_tl_init &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> extl_tcp.o(.data)
</UL>
<P><STRONG><a name="[20]"></a>tcp_tl_keepalive</STRONG> (Thumb, 268 bytes, Stack size 32 bytes, extl_tcp.o(i.tcp_tl_keepalive))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = tcp_tl_keepalive &rArr; lwip_send &rArr;  lwip_sendto (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_send
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_getsystemtime
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcptls_tl_is_connected
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_close_sockinfo
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_mark_registration_expired
</UL>
<BR>[Address Reference Count : 1]<UL><LI> extl_tcp.o(.data)
</UL>
<P><STRONG><a name="[22]"></a>tcp_tl_masquerade_contact</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, extl_tcp.o(i.tcp_tl_masquerade_contact))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = tcp_tl_masquerade_contact &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> extl_tcp.o(.data)
</UL>
<P><STRONG><a name="[1c]"></a>tcp_tl_open</STRONG> (Thumb, 272 bytes, Stack size 48 bytes, extl_tcp.o(i.tcp_tl_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = tcp_tl_open &rArr; _eXosip_closesocket &rArr; lwip_close &rArr; free_socket &rArr; free_socket_free_elements &rArr; netconn_delete &rArr; netconn_prepare_delete &rArr; netconn_apimsg &rArr; tcpip_send_msg_wait_sem &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_socket
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_setsockopt
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_get_addrinfo
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_freeaddrinfo
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setsockopt_ipv6only
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_closesocket
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
</UL>
<BR>[Called By]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_read_tcp_main_socket
</UL>
<BR>[Address Reference Count : 1]<UL><LI> extl_tcp.o(.data)
</UL>
<P><STRONG><a name="[1e]"></a>tcp_tl_read_message</STRONG> (Thumb, 810 bytes, Stack size 32 bytes, extl_tcp.o(i.tcp_tl_read_message))
<BR><BR>[Stack]<UL><LI>Max Depth = 2376<LI>Call Chain = tcp_tl_read_message &rArr; _tcp_tl_recv &rArr; handle_messages &rArr; _eXosip_handle_incoming_message &rArr; _eXosip_process_newrequest &rArr; _eXosip_process_new_invite &rArr; _eXosip_complete_answer_that_establish_a_dialog &rArr; osip_message_set_contact &rArr; osip_contact_parse &rArr; osip_from_parse &rArr; osip_uri_parse &rArr; osip_uri_parse_headers &rArr; __osip_uri_unescape &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcptls_tl_is_connected
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_send_sockinfo
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_recv
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_close_sockinfo
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_read_tcp_main_socket
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_mark_registration_expired
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_mark_all_transaction_force_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> extl_tcp.o(.data)
</UL>
<P><STRONG><a name="[25]"></a>tcp_tl_reset</STRONG> (Thumb, 76 bytes, Stack size 12 bytes, extl_tcp.o(i.tcp_tl_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = tcp_tl_reset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> extl_tcp.o(.data)
</UL>
<P><STRONG><a name="[1f]"></a>tcp_tl_send_message</STRONG> (Thumb, 1500 bytes, Stack size 584 bytes, extl_tcp.o(i.tcp_tl_send_message))
<BR><BR>[Stack]<UL><LI>Max Depth = 2032<LI>Call Chain = tcp_tl_send_message &rArr; _tcp_tl_new_socket &rArr; _tcptls_tl_is_connected &rArr; lwip_select &rArr; sys_sem_new &rArr; xQueueCreateCountingSemaphore &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_set_option
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_getsystemtime
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_set_out_socket
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realloc
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tl_resolv_naptr_destination
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcptls_tl_is_connected
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_send
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_new_socket
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_find_socket
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_close_sockinfo
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_build_message
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_mark_registration_expired
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> extl_tcp.o(.data)
</UL>
<P><STRONG><a name="[1d]"></a>tcp_tl_set_fdset</STRONG> (Thumb, 844 bytes, Stack size 40 bytes, extl_tcp.o(i.tcp_tl_set_fdset))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = tcp_tl_set_fdset &rArr; _tcp_tl_close_sockinfo &rArr; _eXosip_closesocket &rArr; lwip_close &rArr; free_socket &rArr; free_socket_free_elements &rArr; netconn_delete &rArr; netconn_prepare_delete &rArr; netconn_apimsg &rArr; tcpip_send_msg_wait_sem &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_tl_close_sockinfo
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_mark_registration_expired
</UL>
<BR>[Address Reference Count : 1]<UL><LI> extl_tcp.o(.data)
</UL>
<P><STRONG><a name="[21]"></a>tcp_tl_set_socket</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, extl_tcp.o(i.tcp_tl_set_socket))
<BR>[Address Reference Count : 1]<UL><LI> extl_tcp.o(.data)
</UL>
<P><STRONG><a name="[24]"></a>tcp_tl_update_contact</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, extl_tcp.o(i.tcp_tl_update_contact))
<BR>[Address Reference Count : 1]<UL><LI> extl_tcp.o(.data)
</UL>
<P><STRONG><a name="[2e0]"></a>_stun_decode_xor_address_ipv4</STRONG> (Thumb, 22 bytes, Stack size 12 bytes, extl_udp.o(i._stun_decode_xor_address_ipv4))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _stun_decode_xor_address_ipv4
</UL>
<BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_read_udp_main_socket
</UL>

<P><STRONG><a name="[2e1]"></a>_stun_decode_xor_address_ipv6</STRONG> (Thumb, 210 bytes, Stack size 28 bytes, extl_udp.o(i._stun_decode_xor_address_ipv6))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = _stun_decode_xor_address_ipv6
</UL>
<BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_read_udp_main_socket
</UL>

<P><STRONG><a name="[2dd]"></a>_udp_read_udp_main_socket</STRONG> (Thumb, 878 bytes, Stack size 208 bytes, extl_udp.o(i._udp_read_udp_main_socket))
<BR><BR>[Stack]<UL><LI>Max Depth = 2464<LI>Call Chain = _udp_read_udp_main_socket &rArr; _eXosip_handle_incoming_message &rArr; _eXosip_process_newrequest &rArr; _eXosip_process_new_invite &rArr; _eXosip_complete_answer_that_establish_a_dialog &rArr; osip_message_set_contact &rArr; osip_contact_parse &rArr; osip_from_parse &rArr; osip_uri_parse &rArr; osip_uri_parse_headers &rArr; __osip_uri_unescape &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recvfrom
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htonl
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_inet_ntop
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_tl_reset
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_stun_decode_xor_address_ipv6
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_stun_decode_xor_address_ipv4
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_handle_incoming_message
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_getport
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_getnameinfo
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_mark_registration_expired
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_read_message
</UL>

<P><STRONG><a name="[2e3]"></a>_udp_read_udp_oc_socket</STRONG> (Thumb, 280 bytes, Stack size 1096 bytes, extl_udp.o(i._udp_read_udp_oc_socket))
<BR><BR>[Stack]<UL><LI>Max Depth = 3352<LI>Call Chain = _udp_read_udp_oc_socket &rArr; _eXosip_handle_incoming_message &rArr; _eXosip_process_newrequest &rArr; _eXosip_process_new_invite &rArr; _eXosip_complete_answer_that_establish_a_dialog &rArr; osip_message_set_contact &rArr; osip_contact_parse &rArr; osip_from_parse &rArr; osip_uri_parse &rArr; osip_uri_parse_headers &rArr; __osip_uri_unescape &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recvfrom
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_tl_reset_oc
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_handle_incoming_message
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_getport
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_getnameinfo
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_read_message
</UL>

<P><STRONG><a name="[2e5]"></a>_udp_tl_open</STRONG> (Thumb, 372 bytes, Stack size 56 bytes, extl_udp.o(i._udp_tl_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = _udp_tl_open &rArr; _eXosip_closesocket &rArr; lwip_close &rArr; free_socket &rArr; free_socket_free_elements &rArr; netconn_delete &rArr; netconn_prepare_delete &rArr; netconn_apimsg &rArr; tcpip_send_msg_wait_sem &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_socket
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_bind
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_setsockopt
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getsockname
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_get_addrinfo
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_freeaddrinfo
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setsockopt_ipv6only
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_transport_set_dscp
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_closesocket
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_open
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_tl_reset
</UL>

<P><STRONG><a name="[2e6]"></a>_udp_tl_open_oc</STRONG> (Thumb, 308 bytes, Stack size 48 bytes, extl_udp.o(i._udp_tl_open_oc))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = _udp_tl_open_oc &rArr; _eXosip_closesocket &rArr; lwip_close &rArr; free_socket &rArr; free_socket_free_elements &rArr; netconn_delete &rArr; netconn_prepare_delete &rArr; netconn_apimsg &rArr; tcpip_send_msg_wait_sem &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_socket
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_bind
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_setsockopt
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getsockname
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_get_addrinfo
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_freeaddrinfo
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setsockopt_ipv6only
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_transport_set_dscp
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_closesocket
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_open
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_tl_reset_oc
</UL>

<P><STRONG><a name="[2e2]"></a>_udp_tl_reset</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, extl_udp.o(i._udp_tl_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = _udp_tl_reset &rArr; _udp_tl_open &rArr; _eXosip_closesocket &rArr; lwip_close &rArr; free_socket &rArr; free_socket_free_elements &rArr; netconn_delete &rArr; netconn_prepare_delete &rArr; netconn_apimsg &rArr; tcpip_send_msg_wait_sem &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_tl_open
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_closesocket
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_send_message
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_read_udp_main_socket
</UL>

<P><STRONG><a name="[2e4]"></a>_udp_tl_reset_oc</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, extl_udp.o(i._udp_tl_reset_oc))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = _udp_tl_reset_oc &rArr; _udp_tl_open_oc &rArr; _eXosip_closesocket &rArr; lwip_close &rArr; free_socket &rArr; free_socket_free_elements &rArr; netconn_delete &rArr; netconn_prepare_delete &rArr; netconn_apimsg &rArr; tcpip_send_msg_wait_sem &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_tl_open_oc
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_closesocket
</UL>
<BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_read_udp_oc_socket
</UL>

<P><STRONG><a name="[2e7]"></a>_udp_tl_update_contact</STRONG> (Thumb, 920 bytes, Stack size 48 bytes, extl_udp.o(i._udp_tl_update_contact))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _udp_tl_update_contact &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strdup
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_next
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_first
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_get_knownheaderlist
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_force_update
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_tl_send_message
</UL>

<P><STRONG><a name="[32]"></a>udp_tl_check_connection</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, extl_udp.o(i.udp_tl_check_connection))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = udp_tl_check_connection &rArr; _eXosip_mark_registration_expired &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_getsystemtime
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_mark_registration_expired
</UL>
<BR>[Address Reference Count : 1]<UL><LI> extl_udp.o(.data)
</UL>
<P><STRONG><a name="[28]"></a>udp_tl_free</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, extl_udp.o(i.udp_tl_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = udp_tl_free &rArr; _eXosip_closesocket &rArr; lwip_close &rArr; free_socket &rArr; free_socket_free_elements &rArr; netconn_delete &rArr; netconn_prepare_delete &rArr; netconn_apimsg &rArr; tcpip_send_msg_wait_sem &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_closesocket
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> extl_udp.o(.data)
</UL>
<P><STRONG><a name="[30]"></a>udp_tl_get_masquerade_contact</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, extl_udp.o(i.udp_tl_get_masquerade_contact))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = udp_tl_get_masquerade_contact &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> extl_udp.o(.data)
</UL>
<P><STRONG><a name="[27]"></a>udp_tl_init</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, extl_udp.o(i.udp_tl_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = udp_tl_init &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> extl_udp.o(.data)
</UL>
<P><STRONG><a name="[2d]"></a>udp_tl_keepalive</STRONG> (Thumb, 202 bytes, Stack size 32 bytes, extl_udp.o(i.udp_tl_keepalive))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = udp_tl_keepalive &rArr; lwip_sendto &rArr; lwip_send &rArr;  lwip_sendto (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_sendto
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htonl
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_getsystemtime
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_build_random_number
</UL>
<BR>[Address Reference Count : 1]<UL><LI> extl_udp.o(.data)
</UL>
<P><STRONG><a name="[2f]"></a>udp_tl_masquerade_contact</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, extl_udp.o(i.udp_tl_masquerade_contact))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = udp_tl_masquerade_contact &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> extl_udp.o(.data)
</UL>
<P><STRONG><a name="[29]"></a>udp_tl_open</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, extl_udp.o(i.udp_tl_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = udp_tl_open &rArr; _udp_tl_open &rArr; _eXosip_closesocket &rArr; lwip_close &rArr; free_socket &rArr; free_socket_free_elements &rArr; netconn_delete &rArr; netconn_prepare_delete &rArr; netconn_apimsg &rArr; tcpip_send_msg_wait_sem &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_tl_open_oc
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_tl_open
</UL>
<BR>[Address Reference Count : 1]<UL><LI> extl_udp.o(.data)
</UL>
<P><STRONG><a name="[2b]"></a>udp_tl_read_message</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, extl_udp.o(i.udp_tl_read_message))
<BR><BR>[Stack]<UL><LI>Max Depth = 3376<LI>Call Chain = udp_tl_read_message &rArr; _udp_read_udp_oc_socket &rArr; _eXosip_handle_incoming_message &rArr; _eXosip_process_newrequest &rArr; _eXosip_process_new_invite &rArr; _eXosip_complete_answer_that_establish_a_dialog &rArr; osip_message_set_contact &rArr; osip_contact_parse &rArr; osip_from_parse &rArr; osip_uri_parse &rArr; osip_uri_parse_headers &rArr; __osip_uri_unescape &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_read_udp_oc_socket
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_read_udp_main_socket
</UL>
<BR>[Address Reference Count : 1]<UL><LI> extl_udp.o(.data)
</UL>
<P><STRONG><a name="[2c]"></a>udp_tl_send_message</STRONG> (Thumb, 1112 bytes, Stack size 672 bytes, extl_udp.o(i.udp_tl_send_message))
<BR><BR>[Stack]<UL><LI>Max Depth = 1840<LI>Call Chain = udp_tl_send_message &rArr; osip_message_to_str &rArr; _osip_message_to_str &rArr; __osip_message_startline_to_str &rArr; __osip_message_startline_to_strreq &rArr; osip_uri_to_str &rArr; __osip_uri_escape_userinfo &rArr; __osip_uri_escape_nonascii_and_nondef &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_sendto
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strdup
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_set_option
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_inet_ntop
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_remove
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_getsystemtime
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_nict_set_destination
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_add
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_get_byname
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_get_knownheaderlist
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_ict_set_destination
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_to_str
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_force_update
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_get_addrinfo
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_freeaddrinfo
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_reg_find
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_tl_update_contact
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_udp_tl_reset
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_request_viamanager
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_message_contactmanager
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tl_resolv_naptr_destination
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_mark_registration_expired
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> extl_udp.o(.data)
</UL>
<P><STRONG><a name="[2a]"></a>udp_tl_set_fdset</STRONG> (Thumb, 260 bytes, Stack size 36 bytes, extl_udp.o(i.udp_tl_set_fdset))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = udp_tl_set_fdset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> extl_udp.o(.data)
</UL>
<P><STRONG><a name="[2e]"></a>udp_tl_set_socket</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, extl_udp.o(i.udp_tl_set_socket))
<BR>[Address Reference Count : 1]<UL><LI> extl_udp.o(.data)
</UL>
<P><STRONG><a name="[31]"></a>udp_tl_update_contact</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, extl_udp.o(i.udp_tl_update_contact))
<BR>[Address Reference Count : 1]<UL><LI> extl_udp.o(.data)
</UL>
<P><STRONG><a name="[23a]"></a>_eXosip_default_gateway_ipv4</STRONG> (Thumb, 248 bytes, Stack size 72 bytes, exutils.o(i._eXosip_default_gateway_ipv4))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = _eXosip_default_gateway_ipv4 &rArr; _eXosip_closesocket &rArr; lwip_close &rArr; free_socket &rArr; free_socket_free_elements &rArr; netconn_delete &rArr; netconn_prepare_delete &rArr; netconn_apimsg &rArr; tcpip_send_msg_wait_sem &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_socket
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4addr_ntoa
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_setsockopt
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getsockname
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_connect
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipaddr_addr
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strncpy
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_closesocket
</UL>
<BR>[Called By]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_guess_ip_for_destination
</UL>

<P><STRONG><a name="[242]"></a>_eXosip_default_gateway_ipv4sock</STRONG> (Thumb, 300 bytes, Stack size 72 bytes, exutils.o(i._eXosip_default_gateway_ipv4sock))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = _eXosip_default_gateway_ipv4sock &rArr; _eXosip_closesocket &rArr; lwip_close &rArr; free_socket &rArr; free_socket_free_elements &rArr; netconn_delete &rArr; netconn_prepare_delete &rArr; netconn_apimsg &rArr; tcpip_send_msg_wait_sem &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_socket
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_bind
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4addr_ntoa
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getsockname
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_connect
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipaddr_addr
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strncpy
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_closesocket
</UL>
<BR>[Called By]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_guess_ip_for_destinationsock
</UL>

<P><STRONG><a name="[244]"></a>_eXosip_default_gateway_ipv6</STRONG> (Thumb, 198 bytes, Stack size 96 bytes, exutils.o(i._eXosip_default_gateway_ipv6))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = _eXosip_default_gateway_ipv6 &rArr; _eXosip_closesocket &rArr; lwip_close &rArr; free_socket &rArr; free_socket_free_elements &rArr; netconn_delete &rArr; netconn_prepare_delete &rArr; netconn_apimsg &rArr; tcpip_send_msg_wait_sem &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_socket
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_setsockopt
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_inet_pton
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_inet_ntop
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getsockname
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_connect
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_closesocket
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_guess_ip_for_destination
</UL>

<P><STRONG><a name="[247]"></a>_eXosip_default_gateway_ipv6sock</STRONG> (Thumb, 262 bytes, Stack size 96 bytes, exutils.o(i._eXosip_default_gateway_ipv6sock))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = _eXosip_default_gateway_ipv6sock &rArr; _eXosip_closesocket &rArr; lwip_close &rArr; free_socket &rArr; free_socket_free_elements &rArr; netconn_delete &rArr; netconn_prepare_delete &rArr; netconn_apimsg &rArr; tcpip_send_msg_wait_sem &rArr; sys_mutex_unlock &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_socket
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_bind
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_inet_pton
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_inet_ntop
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getsockname
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_connect
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_closesocket
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_guess_ip_for_destinationsock
</UL>

<P><STRONG><a name="[26f]"></a>eXosip_inet_pton</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, exutils.o(i.eXosip_inet_pton))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = eXosip_inet_pton &rArr; ipaddr_addr &rArr; ip4addr_aton &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipaddr_addr
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_get_addrinfo
</UL>

<P><STRONG><a name="[272]"></a>osip_he2ai</STRONG> (Thumb, 130 bytes, Stack size 40 bytes, exutils.o(i.osip_he2ai))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = osip_he2ai &rArr; calloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_get_addrinfo
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_ip2addr
</UL>

<P><STRONG><a name="[270]"></a>osip_ip2addr</STRONG> (Thumb, 94 bytes, Stack size 88 bytes, exutils.o(i.osip_ip2addr))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = osip_ip2addr &rArr; osip_he2ai &rArr; calloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_he2ai
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_get_addrinfo
</UL>

<P><STRONG><a name="[148]"></a>DigestCalcHA1</STRONG> (Thumb, 230 bytes, Stack size 176 bytes, jauth.o(i.DigestCalcHA1))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = DigestCalcHA1 &rArr; osip_MD5Final &rArr; osip_MD5Update &rArr; osip_MD5Transform &rArr; osip_Decode
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_MD5Update
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_MD5Init
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_MD5Final
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CvtHex
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_create_proxy_authorization_header
</UL>

<P><STRONG><a name="[14e]"></a>DigestCalcResponse</STRONG> (Thumb, 400 bytes, Stack size 200 bytes, jauth.o(i.DigestCalcResponse))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = DigestCalcResponse &rArr; osip_MD5Final &rArr; osip_MD5Update &rArr; osip_MD5Transform &rArr; osip_Decode
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_MD5Update
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_MD5Init
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_MD5Final
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CvtHex
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_create_proxy_authorization_header
</UL>

<P><STRONG><a name="[14f]"></a>DigestCalcResponseAka</STRONG> (Thumb, 376 bytes, Stack size 2208 bytes, jauth.o(i.DigestCalcResponseAka))
<BR><BR>[Stack]<UL><LI>Max Depth = 2380<LI>Call Chain = DigestCalcResponseAka &rArr; f1 &rArr; ComputeOPc &rArr; RijndaelEncrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f2345
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f1
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;base64_decode_string
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_create_proxy_authorization_header
</UL>

<P><STRONG><a name="[151]"></a>base64_decode_string</STRONG> (Thumb, 306 bytes, Stack size 56 bytes, jauth.o(i.base64_decode_string))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = base64_decode_string &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;base64_val
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DigestCalcResponseAka
</UL>

<P><STRONG><a name="[2ec]"></a>base64_val</STRONG> (Thumb, 362 bytes, Stack size 0 bytes, jauth.o(i.base64_val))
<BR><BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;base64_decode_string
</UL>

<P><STRONG><a name="[249]"></a>_eXosip_delete_early_dialog</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, jcallback.o(i._eXosip_delete_early_dialog))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = _eXosip_delete_early_dialog &rArr; osip_dialog_free &rArr; osip_from_free &rArr; osip_uri_free &rArr; osip_uri_param_freelist &rArr; osip_list_remove &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_dialog_free
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_update
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_snd123456xx
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv3456xx
</UL>

<P><STRONG><a name="[29f]"></a>_eXosip_register_contact_is_modified</STRONG> (Thumb, 344 bytes, Stack size 40 bytes, jcallback.o(i._eXosip_register_contact_is_modified))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _eXosip_register_contact_is_modified &rArr; osip_uri_param_get_byname &rArr; strncasecmp
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_getsystemtime
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_get_byname
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_get_knownheaderlist
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
</UL>
<BR>[Called By]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcvregister_failure
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv2xx
</UL>

<P><STRONG><a name="[2b3]"></a>_eXosip_update_expires_according_to_contact</STRONG> (Thumb, 204 bytes, Stack size 56 bytes, jcallback.o(i._eXosip_update_expires_according_to_contact))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _eXosip_update_expires_according_to_contact &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_next
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_first
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_size
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_get_byname
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv2xx
</UL>

<P><STRONG><a name="[a7]"></a>cb_rcv1xx</STRONG> (Thumb, 548 bytes, Stack size 48 bytes, jcallback.o(i.cb_rcv1xx))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = cb_rcv1xx &rArr; _eXosip_dialog_init_as_uac &rArr; osip_dialog_init_as_uac_with_remote_request &rArr; __osip_dialog_init &rArr; osip_from_clone &rArr; osip_uri_clone &rArr; osip_list_clone &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_get_byname
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_set_reserved3
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_get_reserved3
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_get_reserved2
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_get_reserved1
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_dialog_update_tag_as_uac
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_dialog_update_route_set_as_uac
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_dialog_init_as_uac
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_dialog_free
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_update
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_report_call_event
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_check_allow_header
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_event_init_for_message
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_event_add
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_dialog_init_as_uac
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_renew_expire_time
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jcallback.o(i._eXosip_set_callbacks)
</UL>
<P><STRONG><a name="[a8]"></a>cb_rcv2xx</STRONG> (Thumb, 916 bytes, Stack size 64 bytes, jcallback.o(i.cb_rcv2xx))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = cb_rcv2xx &rArr; cb_rcv2xx_4invite &rArr; _eXosip_dialog_init_as_uac &rArr; osip_dialog_init_as_uac_with_remote_request &rArr; __osip_dialog_init &rArr; osip_from_clone &rArr; osip_uri_clone &rArr; osip_list_clone &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_header_get_byname
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_disposition_parse
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_info_init
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_info_free
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_getsystemtime
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_get_byname
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_get_reserved3
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_get_reserved2
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_get_reserved1
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_reg_find
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_report_call_event
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_check_allow_header
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_report_event
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_event_init_for_reg
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_event_init_for_message
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv2xx_4invite
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_update_expires_according_to_contact
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_register_contact_is_modified
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncasecmp
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jcallback.o(i._eXosip_set_callbacks)
</UL>
<P><STRONG><a name="[2f5]"></a>cb_rcv2xx_4invite</STRONG> (Thumb, 684 bytes, Stack size 56 bytes, jcallback.o(i.cb_rcv2xx_4invite))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = cb_rcv2xx_4invite &rArr; _eXosip_dialog_init_as_uac &rArr; osip_dialog_init_as_uac_with_remote_request &rArr; __osip_dialog_init &rArr; osip_from_clone &rArr; osip_uri_clone &rArr; osip_list_clone &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_header_get_byname
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_content_disposition_parse
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_info_init
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_info_free
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_getsystemtime
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_get_byname
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_set_reserved3
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_get_reserved3
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_get_reserved2
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_get_reserved1
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_dialog_update_tag_as_uac
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_dialog_update_route_set_as_uac
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_dialog_set_state
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_dialog_init_as_uac
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_dialog_free
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_update
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_report_call_event
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_check_allow_header
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_dialog_init_as_uac
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv2xx
</UL>

<P><STRONG><a name="[2f6]"></a>cb_rcv3456xx</STRONG> (Thumb, 176 bytes, Stack size 40 bytes, jcallback.o(i.cb_rcv3456xx))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = cb_rcv3456xx &rArr; _eXosip_report_call_event &rArr; _eXosip_event_init_for_call &rArr; _eXosip_event_fill_messages &rArr; osip_message_clone &rArr; osip_from_clone &rArr; osip_uri_clone &rArr; osip_list_clone &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_get_reserved3
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_get_reserved2
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_get_reserved1
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_report_call_event
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_report_event
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_event_init_for_message
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcvregister_failure
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_delete_early_dialog
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv6xx
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv5xx
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv4xx
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv3xx
</UL>

<P><STRONG><a name="[a9]"></a>cb_rcv3xx</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, jcallback.o(i.cb_rcv3xx))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = cb_rcv3xx &rArr; cb_rcv3456xx &rArr; _eXosip_report_call_event &rArr; _eXosip_event_init_for_call &rArr; _eXosip_event_fill_messages &rArr; osip_message_clone &rArr; osip_from_clone &rArr; osip_uri_clone &rArr; osip_list_clone &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv3456xx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jcallback.o(i._eXosip_set_callbacks)
</UL>
<P><STRONG><a name="[aa]"></a>cb_rcv4xx</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, jcallback.o(i.cb_rcv4xx))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = cb_rcv4xx &rArr; cb_rcv3456xx &rArr; _eXosip_report_call_event &rArr; _eXosip_event_init_for_call &rArr; _eXosip_event_fill_messages &rArr; osip_message_clone &rArr; osip_from_clone &rArr; osip_uri_clone &rArr; osip_list_clone &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv3456xx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jcallback.o(i._eXosip_set_callbacks)
</UL>
<P><STRONG><a name="[ab]"></a>cb_rcv5xx</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, jcallback.o(i.cb_rcv5xx))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = cb_rcv5xx &rArr; cb_rcv3456xx &rArr; _eXosip_report_call_event &rArr; _eXosip_event_init_for_call &rArr; _eXosip_event_fill_messages &rArr; osip_message_clone &rArr; osip_from_clone &rArr; osip_uri_clone &rArr; osip_list_clone &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv3456xx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jcallback.o(i._eXosip_set_callbacks)
</UL>
<P><STRONG><a name="[ac]"></a>cb_rcv6xx</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, jcallback.o(i.cb_rcv6xx))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = cb_rcv6xx &rArr; cb_rcv3456xx &rArr; _eXosip_report_call_event &rArr; _eXosip_event_init_for_call &rArr; _eXosip_event_fill_messages &rArr; osip_message_clone &rArr; osip_from_clone &rArr; osip_uri_clone &rArr; osip_list_clone &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv3456xx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jcallback.o(i._eXosip_set_callbacks)
</UL>
<P><STRONG><a name="[ae]"></a>cb_rcvcancel</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, jcallback.o(i.cb_rcvcancel))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = cb_rcvcancel &rArr; _eXosip_report_call_event &rArr; _eXosip_event_init_for_call &rArr; _eXosip_event_fill_messages &rArr; osip_message_clone &rArr; osip_from_clone &rArr; osip_uri_clone &rArr; osip_list_clone &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_get_reserved3
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_get_reserved2
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_get_reserved1
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_report_call_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jcallback.o(i._eXosip_set_callbacks)
</UL>
<P><STRONG><a name="[af]"></a>cb_rcvregister</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, jcallback.o(i.cb_rcvregister))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = cb_rcvregister &rArr; _eXosip_event_init_for_message &rArr; _eXosip_event_fill_messages &rArr; osip_message_clone &rArr; osip_from_clone &rArr; osip_uri_clone &rArr; osip_list_clone &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_get_reserved1
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_event_init_for_message
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_event_add
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jcallback.o(i._eXosip_set_callbacks)
</UL>
<P><STRONG><a name="[b0]"></a>cb_rcvrequest</STRONG> (Thumb, 134 bytes, Stack size 40 bytes, jcallback.o(i.cb_rcvrequest))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = cb_rcvrequest &rArr; _eXosip_report_call_event &rArr; _eXosip_event_init_for_call &rArr; _eXosip_event_fill_messages &rArr; osip_message_clone &rArr; osip_from_clone &rArr; osip_uri_clone &rArr; osip_list_clone &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_get_reserved3
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_get_reserved2
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_get_reserved1
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_report_call_event
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_event_init_for_message
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_event_add
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jcallback.o(i._eXosip_set_callbacks)
</UL>
<P><STRONG><a name="[ad]"></a>cb_snd123456xx</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, jcallback.o(i.cb_snd123456xx))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = cb_snd123456xx &rArr; _eXosip_report_call_event &rArr; _eXosip_event_init_for_call &rArr; _eXosip_event_fill_messages &rArr; osip_message_clone &rArr; osip_from_clone &rArr; osip_uri_clone &rArr; osip_list_clone &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_get_reserved3
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_get_reserved2
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_get_reserved1
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_report_call_event
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_delete_early_dialog
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jcallback.o(i._eXosip_set_callbacks)
</UL>
<P><STRONG><a name="[a5]"></a>cb_snd_message</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, jcallback.o(i.cb_snd_message))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = cb_snd_message &rArr; _eXosip_snd_message &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_get_reserved1
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_snd_message
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jcallback.o(i._eXosip_set_callbacks)
</UL>
<P><STRONG><a name="[b1]"></a>cb_transport_error</STRONG> (Thumb, 226 bytes, Stack size 32 bytes, jcallback.o(i.cb_transport_error))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = cb_transport_error &rArr; _eXosip_report_call_event &rArr; _eXosip_event_init_for_call &rArr; _eXosip_event_fill_messages &rArr; osip_message_clone &rArr; osip_from_clone &rArr; osip_uri_clone &rArr; osip_list_clone &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_get_reserved3
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_get_reserved2
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_get_reserved1
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_dnsutils_rotate_srv
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_report_call_event
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jcallback.o(i._eXosip_set_callbacks)
</UL>
<P><STRONG><a name="[a6]"></a>cb_xixt_kill_transaction</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, jcallback.o(i.cb_xixt_kill_transaction))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = cb_xixt_kill_transaction &rArr; rcvregister_failure &rArr; _eXosip_event_init_for_reg &rArr; _eXosip_event_fill_messages &rArr; osip_message_clone &rArr; osip_from_clone &rArr; osip_uri_clone &rArr; osip_list_clone &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_remove_transaction
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_get_reserved1
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcvregister_failure
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jcallback.o(i._eXosip_set_callbacks)
</UL>
<P><STRONG><a name="[2f7]"></a>rcvregister_failure</STRONG> (Thumb, 410 bytes, Stack size 24 bytes, jcallback.o(i.rcvregister_failure))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = rcvregister_failure &rArr; _eXosip_event_init_for_reg &rArr; _eXosip_event_fill_messages &rArr; osip_message_clone &rArr; osip_from_clone &rArr; osip_uri_clone &rArr; osip_list_clone &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_gettimeofday
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_get_reserved1
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_reg_find
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_mark_registration_expired
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_report_event
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_event_init_for_reg
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_register_contact_is_modified
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_xixt_kill_transaction
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_rcv3456xx
</UL>

<P><STRONG><a name="[254]"></a>_eXosip_event_fill_messages</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, jevents.o(i._eXosip_event_fill_messages))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = _eXosip_event_fill_messages &rArr; osip_message_clone &rArr; osip_from_clone &rArr; osip_uri_clone &rArr; osip_list_clone &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_clone
</UL>
<BR>[Called By]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_event_init_for_call
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_event_init_for_reg
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_event_init_for_message
</UL>

<P><STRONG><a name="[205]"></a>dialog_fill_route_set</STRONG> (Thumb, 240 bytes, Stack size 48 bytes, jrequest.o(i.dialog_fill_route_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = dialog_fill_route_set &rArr; osip_from_clone &rArr; osip_uri_clone &rArr; osip_list_clone &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_free
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_init
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_next
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_first
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_clone
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_add
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_clone
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_get_byname
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_build_request_within_dialog
</UL>

<P><STRONG><a name="[1f0]"></a>_cancel_match_invite</STRONG> (Thumb, 192 bytes, Stack size 24 bytes, udp_1.o(i._cancel_match_invite))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _cancel_match_invite &rArr; osip_via_match &rArr; osip_via_to_str &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_get_byname
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_via_match
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_from_tag_match
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_id_match
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_cancel
</UL>

<P><STRONG><a name="[27c]"></a>_eXosip_handle_received_rport</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, udp_1.o(i._eXosip_handle_received_rport))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _eXosip_handle_received_rport &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_get_byname
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_handle_incoming_message
</UL>

<P><STRONG><a name="[27b]"></a>_eXosip_handle_rfc5626_ob</STRONG> (Thumb, 242 bytes, Stack size 48 bytes, udp_1.o(i._eXosip_handle_rfc5626_ob))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _eXosip_handle_rfc5626_ob &rArr; osip_uri_param_add &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strdup
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_add
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_size
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_get_byname
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_handle_incoming_message
</UL>

<P><STRONG><a name="[287]"></a>_eXosip_match_update_for_invite</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, udp_1.o(i._eXosip_match_update_for_invite))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _eXosip_match_update_for_invite &rArr; osip_uri_param_get_byname &rArr; strncasecmp
</UL>
<BR>[Calls]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_get_byname
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_call_id_match
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_find_last_out_invite
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_newrequest
</UL>

<P><STRONG><a name="[289]"></a>_eXosip_process_ack</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, udp_1.o(i._eXosip_process_ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = _eXosip_process_ack &rArr; _eXosip_event_init_for_call &rArr; _eXosip_event_fill_messages &rArr; osip_message_clone &rArr; osip_from_clone &rArr; osip_uri_clone &rArr; osip_list_clone &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_clone
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_free
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_event_free
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_find_last_inc_invite
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_event_init_for_call
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_report_event
</UL>
<BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_newrequest
</UL>

<P><STRONG><a name="[28c]"></a>_eXosip_process_bye</STRONG> (Thumb, 202 bytes, Stack size 40 bytes, udp_1.o(i._eXosip_process_bye))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = _eXosip_process_bye &rArr; _eXosip_report_call_event &rArr; _eXosip_event_init_for_call &rArr; _eXosip_event_fill_messages &rArr; osip_message_clone &rArr; osip_from_clone &rArr; osip_uri_clone &rArr; osip_list_clone &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_content_length
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_add_event
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_nist_execute
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_add
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_set_reserved3
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_set_reserved2
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_new_outgoing_sipmessage
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_dialog_free
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_wakeup
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_update
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_build_response_default
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_report_call_event
</UL>
<BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_newrequest
</UL>

<P><STRONG><a name="[28f]"></a>_eXosip_process_cancel</STRONG> (Thumb, 682 bytes, Stack size 56 bytes, udp_1.o(i._eXosip_process_cancel))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = _eXosip_process_cancel &rArr; _eXosip_build_response_default &rArr; osip_from_clone &rArr; osip_uri_clone &rArr; osip_list_clone &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_content_length
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_add_event
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_next
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_get_first
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_add
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_set_reserved3
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_set_reserved2
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_new_outgoing_sipmessage
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_wakeup
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_build_response_default
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cancel_match_invite
</UL>
<BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_newrequest
</UL>

<P><STRONG><a name="[290]"></a>_eXosip_process_message_within_dialog</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, udp_1.o(i._eXosip_process_message_within_dialog))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _eXosip_process_message_within_dialog &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_add
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_set_reserved3
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_set_reserved2
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_wakeup
</UL>
<BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_newrequest
</UL>

<P><STRONG><a name="[291]"></a>_eXosip_process_new_invite</STRONG> (Thumb, 464 bytes, Stack size 48 bytes, udp_1.o(i._eXosip_process_new_invite))
<BR><BR>[Stack]<UL><LI>Max Depth = 2144<LI>Call Chain = _eXosip_process_new_invite &rArr; _eXosip_complete_answer_that_establish_a_dialog &rArr; osip_message_set_contact &rArr; osip_contact_parse &rArr; osip_from_parse &rArr; osip_uri_parse &rArr; osip_uri_parse_headers &rArr; __osip_uri_unescape &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_content_length
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_add_event
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_ist_execute
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_free
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_add
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_get_byname
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_set_reserved3
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_set_reserved2
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_new_outgoing_sipmessage
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_wakeup
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_update
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_complete_answer_that_establish_a_dialog
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_call_init
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_build_response_default
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_report_call_event
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_check_allow_header
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_dialog_init_as_uas
</UL>
<BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_newrequest
</UL>

<P><STRONG><a name="[27f]"></a>_eXosip_process_newrequest</STRONG> (Thumb, 1768 bytes, Stack size 72 bytes, udp_1.o(i._eXosip_process_newrequest))
<BR><BR>[Stack]<UL><LI>Max Depth = 2216<LI>Call Chain = _eXosip_process_newrequest &rArr; _eXosip_process_new_invite &rArr; _eXosip_complete_answer_that_establish_a_dialog &rArr; osip_message_set_contact &rArr; osip_contact_parse &rArr; osip_from_parse &rArr; osip_uri_parse &rArr; osip_uri_parse_headers &rArr; __osip_uri_unescape &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_add_event
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_dialog_match_as_uas
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_add
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_get_byname
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_set_reserved2
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_set_out_socket
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_event_free
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_dialog_update_route_set_as_uas
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_dialog_update_osip_cseq_as_uas
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_dialog_init_as_uac_with_remote_request
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_dialog_free
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_transaction_free
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_wakeup
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_transaction_init
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_find_last_out_invite
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_find_last_inc_invite
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_send_default_answer
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_reinvite
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_new_invite
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_message_within_dialog
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_cancel
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_bye
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_ack
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_match_update_for_invite
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_find_last_out_transaction
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_find_last_inc_transaction
</UL>
<BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_handle_incoming_message
</UL>

<P><STRONG><a name="[298]"></a>_eXosip_process_reinvite</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, udp_1.o(i._eXosip_process_reinvite))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = _eXosip_process_reinvite &rArr; _eXosip_report_call_event &rArr; _eXosip_event_init_for_call &rArr; _eXosip_event_fill_messages &rArr; osip_message_clone &rArr; osip_from_clone &rArr; osip_uri_clone &rArr; osip_list_clone &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_ist_execute
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_add
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_set_reserved3
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_set_reserved2
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_report_call_event
</UL>
<BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_newrequest
</UL>

<P><STRONG><a name="[280]"></a>_eXosip_process_response_out_of_transaction</STRONG> (Thumb, 702 bytes, Stack size 56 bytes, udp_1.o(i._eXosip_process_response_out_of_transaction))
<BR><BR>[Stack]<UL><LI>Max Depth = 592<LI>Call Chain = _eXosip_process_response_out_of_transaction &rArr; _eXosip_generating_bye &rArr; _eXosip_build_request_within_dialog &rArr; _eXosip_dialog_add_contact &rArr; osip_message_set_contact &rArr; osip_contact_parse &rArr; osip_from_parse &rArr; osip_uri_parse &rArr; osip_uri_parse_headers &rArr; __osip_uri_unescape &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_free
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_list_add
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_authorization_clone
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_get_byname
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_get_knownheaderlist
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_event_free
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_dialog_init_as_uac
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_dialog_free
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_snd_message
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_generating_bye
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_build_request_within_dialog
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_handle_incoming_message
</UL>

<P><STRONG><a name="[295]"></a>_eXosip_send_default_answer</STRONG> (Thumb, 212 bytes, Stack size 64 bytes, udp_1.o(i._eXosip_send_default_answer))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = _eXosip_send_default_answer &rArr; _eXosip_build_response_default &rArr; osip_from_clone &rArr; osip_uri_clone &rArr; osip_list_clone &rArr; osip_list_add &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_strdup
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_reason_phrase
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_header
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_set_content_length
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_add_event
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_transaction_set_reserved2
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_new_outgoing_sipmessage
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_get_reason_phrase
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_wakeup
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_build_response_default
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_process_newrequest
</UL>

<P><STRONG><a name="[27d]"></a>udp_tl_learn_port_from_via</STRONG> (Thumb, 344 bytes, Stack size 552 bytes, udp_1.o(i.udp_tl_learn_port_from_via))
<BR><BR>[Stack]<UL><LI>Max Depth = 912<LI>Call Chain = udp_tl_learn_port_from_via &rArr; eXosip_set_option &rArr; _eXosip_get_addrinfo &rArr; osip_ip2addr &rArr; osip_he2ai &rArr; calloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eXosip_set_option
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_uri_param_get_byname
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osip_message_get_knownheaderlist
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_eXosip_handle_incoming_message
</UL>

<P><STRONG><a name="[2b4]"></a>_fp_digits</STRONG> (Thumb, 366 bytes, Stack size 64 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[190]"></a>_printf_core</STRONG> (Thumb, 1744 bytes, Stack size 136 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vsnprintf
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0snprintf
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf
</UL>

<P><STRONG><a name="[2c3]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[2c2]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[a2]"></a>_snputc</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, printfa.o(i._snputc))
<BR>[Address Reference Count : 2]<UL><LI> printfa.o(i.__0snprintf)
<LI> printfa.o(i.__0vsnprintf)
</UL>
<P><STRONG><a name="[a3]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0sprintf)
</UL>
<P><STRONG><a name="[194]"></a>internal_alloc</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, mallocr.o(i.internal_alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realloc
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[9c]"></a>_scanf_char_input</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, scanf_char.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
